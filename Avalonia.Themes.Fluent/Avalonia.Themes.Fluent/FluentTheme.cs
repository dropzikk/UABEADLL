using System;
using System.Collections.Generic;
using System.Linq;
using Avalonia.Controls;
using Avalonia.Controls.Converters;
using Avalonia.Data;
using Avalonia.Markup.Xaml;
using Avalonia.Markup.Xaml.MarkupExtensions;
using Avalonia.Markup.Xaml.XamlIl.Runtime;
using Avalonia.Media;
using Avalonia.Media.Transformation;
using Avalonia.Styling;
using Avalonia.Themes.Fluent.Accents;
using CompiledAvaloniaXaml;

namespace Avalonia.Themes.Fluent;

public class FluentTheme : Styles, IResourceNode
{
	private class XamlClosure_294
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return _0021AvaloniaResources.Build_003A_002FDensityStyles_002FCompact_002Examl(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(context));
		}
	}

	private class XamlClosure_295
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_296
	{
		private class DynamicSetters_297
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_297.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_298
	{
		private class DynamicSetters_299
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_299.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_300
	{
		private class DynamicSetters_301
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_301.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_302
	{
		private class DynamicSetters_303
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_303.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_304
	{
		private class DynamicSetters_305
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_305.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_306
	{
		private class DynamicSetters_307
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_307.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_308
	{
		private class DynamicSetters_309
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_309.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_310
	{
		private class DynamicSetters_311
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_311.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_312
	{
		private class DynamicSetters_313
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_313.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_314
	{
		private class DynamicSetters_315
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_315.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_316
	{
		private class DynamicSetters_317
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_317.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_318
	{
		private class DynamicSetters_319
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_319.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_320
	{
		private class DynamicSetters_321
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_321.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_322
	{
		private class DynamicSetters_323
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_323.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_324
	{
		private class DynamicSetters_325
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_325.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_326
	{
		private class DynamicSetters_327
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_327.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_328
	{
		private class DynamicSetters_329
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_329.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_330
	{
		private class DynamicSetters_331
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_331.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_332
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_333
	{
		private class DynamicSetters_334
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_334.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_335
	{
		private class DynamicSetters_336
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_336.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_337
	{
		private class DynamicSetters_338
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_338.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_339
	{
		private class DynamicSetters_340
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_340.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_341
	{
		private class DynamicSetters_342
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_342.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_343
	{
		private class DynamicSetters_344
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_344.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_345
	{
		private class DynamicSetters_346
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_346.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_347
	{
		private class DynamicSetters_348
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_348.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_349
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_350
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_351
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_352
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_353
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_354
	{
		private class DynamicSetters_355
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_355.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_356
	{
		private class DynamicSetters_357
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_357.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_358
	{
		private class DynamicSetters_359
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_359.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_360
	{
		private class DynamicSetters_361
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_361.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_362
	{
		private class DynamicSetters_363
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_363.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_364
	{
		private class DynamicSetters_365
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_365.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_366
	{
		private class DynamicSetters_367
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_367.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_368
	{
		private class DynamicSetters_369
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_369.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_370
	{
		private class DynamicSetters_371
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_371.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_372
	{
		private class DynamicSetters_373
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_373.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_374
	{
		private class DynamicSetters_375
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_375.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_376
	{
		private class DynamicSetters_377
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_377.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_378
	{
		private class DynamicSetters_379
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_379.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_380
	{
		private class DynamicSetters_381
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_381.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_382
	{
		private class DynamicSetters_383
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeGrayColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_383.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_384
	{
		private class DynamicSetters_385
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_385.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_386
	{
		private class DynamicSetters_387
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_387.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_388
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_389
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_390
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_391
	{
		private class DynamicSetters_392
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_392.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_393
	{
		private class DynamicSetters_394
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_394.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_395
	{
		private class DynamicSetters_396
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_396.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_397
	{
		private class DynamicSetters_398
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_398.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_399
	{
		private class DynamicSetters_400
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_400.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_401
	{
		private class DynamicSetters_402
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_402.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_403
	{
		private class DynamicSetters_404
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_404.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_405
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.7;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_406
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.4;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_407
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_408
	{
		private class DynamicSetters_409
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_409.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_410
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_411
	{
		private class DynamicSetters_412
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_412.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_413
	{
		private class DynamicSetters_414
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_414.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_415
	{
		private class DynamicSetters_416
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_416.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_417
	{
		private class DynamicSetters_418
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_418.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_419
	{
		private class DynamicSetters_420
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_420.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_421
	{
		private class DynamicSetters_422
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeAltLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_422.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_423
	{
		private class DynamicSetters_424
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_424.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_425
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.7;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_426
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.4;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_427
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_428
	{
		private class DynamicSetters_429
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_429.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_430
	{
		private class DynamicSetters_431
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_431.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_432
	{
		private class DynamicSetters_433
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_433.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_434
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_435
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_436
	{
		private class DynamicSetters_437
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_437.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_438
	{
		private class DynamicSetters_439
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_439.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_440
	{
		private class DynamicSetters_441
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_441.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_442
	{
		private class DynamicSetters_443
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_443.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_444
	{
		private class DynamicSetters_445
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_445.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_446
	{
		private class DynamicSetters_447
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_447.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_448
	{
		private class DynamicSetters_449
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_449.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_450
	{
		private class DynamicSetters_451
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_451.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_452
	{
		private class DynamicSetters_453
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_453.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_454
	{
		private class DynamicSetters_455
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_455.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_456
	{
		private class DynamicSetters_457
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_457.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_458
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_459
	{
		private class DynamicSetters_460
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_460.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_461
	{
		private class DynamicSetters_462
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_462.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_463
	{
		private class DynamicSetters_464
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_464.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_465
	{
		private class DynamicSetters_466
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemErrorTextColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_466.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_467
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4278190080u);
			solidColorBrush.Opacity = 0.14;
			return solidColorBrush;
		}
	}

	private class XamlClosure_468
	{
		private class DynamicSetters_469
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_469.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_470
	{
		private class DynamicSetters_471
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_471.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_472
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_473
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_474
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.8;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_475
	{
		private class DynamicSetters_476
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_476.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_477
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_478
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_479
	{
		private class DynamicSetters_480
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_480.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_481
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_482
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_483
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_484
	{
		private class DynamicSetters_485
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemRegionColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_485.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_486
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_487
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_488
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_489
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_490
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_491
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_492
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_493
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_494
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_495
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_496
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_497
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_498
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_499
	{
		private class DynamicSetters_500
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_500.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_501
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_502
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_503
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_504
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_505
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_506
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_507
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_508
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_509
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_510
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_511
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_512
	{
		private class DynamicSetters_513
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_513.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_514
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_515
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_516
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_517
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_518
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_519
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_520
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_521
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_522
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_523
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_524
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_525
	{
		private class DynamicSetters_526
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_526.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_527
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_528
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_529
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_530
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_531
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_532
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_533
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_534
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_535
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_536
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_537
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_538
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_539
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_540
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_541
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_542
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_543
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_544
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_545
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_546
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_547
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_548
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_549
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_550
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_551
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_552
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_553
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_554
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_555
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_556
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_557
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_558
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_559
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_560
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_561
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_562
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_563
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_564
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_565
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_566
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_567
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_568
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_569
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_570
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_571
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_572
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_573
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_574
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_575
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_576
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_577
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_578
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_579
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_580
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_581
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_582
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_583
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_584
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_585
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_586
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_587
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_588
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_589
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_590
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_591
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_592
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_593
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_594
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_595
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_596
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_597
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_598
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_599
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_600
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_601
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_602
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_603
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_604
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_605
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_606
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_607
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_608
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_609
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_610
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_611
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_612
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_613
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_614
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_615
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_616
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_617
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_618
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_619
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_620
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_621
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_622
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_623
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_624
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_625
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_626
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_627
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_628
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_629
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_630
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_631
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_632
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_633
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_634
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_635
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_636
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_637
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_638
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_639
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_640
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_641
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_642
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_643
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_644
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_645
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_646
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_647
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_648
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_649
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_650
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_651
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_652
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_653
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_654
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_655
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_656
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_657
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_658
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_659
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_660
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_661
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_662
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_663
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_664
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_665
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_666
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_667
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_668
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_669
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_670
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_671
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_672
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_673
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_674
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_675
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_676
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_677
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_678
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_679
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_680
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_681
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_682
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_683
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_684
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_685
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_686
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_687
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_688
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_689
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_690
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_691
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_692
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_693
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_694
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_695
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_696
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_697
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_698
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_699
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_700
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_701
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_702
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_703
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_704
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_705
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_706
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_707
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_708
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_709
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_710
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_711
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_712
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_713
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_714
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_715
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_716
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_717
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_718
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_719
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_720
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_721
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_722
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_723
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_724
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_725
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_726
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_727
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_728
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_729
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_730
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_731
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_732
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHyperlinkBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_733
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_734
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_735
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHyperlinkBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_736
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_737
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_738
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_739
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_740
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_741
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_742
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_743
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_744
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_745
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_746
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_747
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_748
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_749
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_750
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_751
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_752
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_753
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_754
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_755
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_756
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_757
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_758
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_759
	{
		private class DynamicSetters_760
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_760.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_761
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_762
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_763
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_764
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_765
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_766
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_767
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_768
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_769
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_770
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_771
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemChromeMediumLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_772
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_773
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(uint.MaxValue)
			};
		}
	}

	private class XamlClosure_774
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_775
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4288322202u)
			};
		}
	}

	private class XamlClosure_776
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4278221012u)
			};
		}
	}

	private class XamlClosure_777
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4279405380u)
			};
		}
	}

	private class XamlClosure_778
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4294951702u)
			};
		}
	}

	private class XamlClosure_779
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4293933334u)
			};
		}
	}

	private class XamlClosure_780
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_781
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_782
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_783
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_784
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_785
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_786
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_787
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_788
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_789
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_790
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_791
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_792
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_793
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_794
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_795
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_796
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_797
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_798
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_799
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_800
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_801
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_802
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_803
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_804
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_805
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_806
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_807
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_808
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_809
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_810
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_811
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_812
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_813
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_814
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_815
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_816
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_817
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_818
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_819
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_820
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_821
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_822
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_823
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_824
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_825
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_826
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_827
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_828
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_829
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_830
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_831
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_832
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_833
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_834
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_835
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_836
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_837
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_838
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_839
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_840
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_841
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_842
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_843
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_844
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_845
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_846
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_847
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_848
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_849
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_850
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_851
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_852
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_853
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_854
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_855
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_856
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_857
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_858
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_859
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_860
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_861
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_862
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_863
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_864
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_865
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_866
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_867
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_868
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_869
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_870
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_871
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_872
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_873
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_874
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_875
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_876
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_877
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_878
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_879
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_880
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_881
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_882
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_883
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_884
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_885
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_886
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_887
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_888
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_889
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_890
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_891
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_892
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_893
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_894
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_895
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_896
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_897
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_898
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_899
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_900
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_901
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_902
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_903
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_904
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_905
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_906
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_907
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_908
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_909
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_910
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_911
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_912
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_913
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_914
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_915
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_916
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_917
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_918
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_919
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_920
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_921
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_922
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_923
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_924
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_925
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_926
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_927
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_928
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_929
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_930
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_931
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_932
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_933
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_934
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_935
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_936
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_937
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_938
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_939
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_940
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_941
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_942
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_943
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_944
	{
		private class DynamicSetters_945
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_945.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_946
	{
		private class DynamicSetters_947
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_947.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_948
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_949
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_950
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_951
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemChromeDisabledLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_952
	{
		private class DynamicSetters_953
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ScrollBarPanningThumbBackgroundColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_953.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_954
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_955
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_956
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_957
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_958
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccent3RevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_959
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccent2RevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_960
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_961
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_962
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_963
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_964
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_965
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_966
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_967
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_968
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_969
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_970
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_971
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_972
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_973
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_974
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_975
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_976
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_977
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_978
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_979
	{
		private class DynamicSetters_980
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_980.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_981
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_982
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_983
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_984
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_985
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_986
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_987
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_988
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_989
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_990
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_991
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_992
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_993
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_994
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_995
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_996
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_997
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_998
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_999
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1000
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1001
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1002
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1003
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundMediumAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1004
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1005
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1006
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1007
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1008
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1009
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1010
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1011
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1012
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1013
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1014
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1015
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1016
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1017
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1018
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1019
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1020
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundMediumAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1021
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1022
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1023
	{
		private class DynamicSetters_1024
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1024.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1025
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4278190080u)
			};
		}
	}

	private class XamlClosure_1026
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1027
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1028
	{
		private class DynamicSetters_1029
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1029.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1030
	{
		private class DynamicSetters_1031
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1031.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1032
	{
		private class DynamicSetters_1033
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1033.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1034
	{
		private class DynamicSetters_1035
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1035.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1036
	{
		private class DynamicSetters_1037
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1037.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1038
	{
		private class DynamicSetters_1039
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1039.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1040
	{
		private class DynamicSetters_1041
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1041.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1042
	{
		private class DynamicSetters_1043
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1043.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1044
	{
		private class DynamicSetters_1045
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1045.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1046
	{
		private class DynamicSetters_1047
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1047.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1048
	{
		private class DynamicSetters_1049
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1049.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1050
	{
		private class DynamicSetters_1051
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1051.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1052
	{
		private class DynamicSetters_1053
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1053.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1054
	{
		private class DynamicSetters_1055
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1055.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1056
	{
		private class DynamicSetters_1057
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1057.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1058
	{
		private class DynamicSetters_1059
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1059.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1060
	{
		private class DynamicSetters_1061
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1061.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1062
	{
		private class DynamicSetters_1063
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1063.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1064
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1065
	{
		private class DynamicSetters_1066
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1066.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1067
	{
		private class DynamicSetters_1068
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1068.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1069
	{
		private class DynamicSetters_1070
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1070.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1071
	{
		private class DynamicSetters_1072
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1072.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1073
	{
		private class DynamicSetters_1074
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1074.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1075
	{
		private class DynamicSetters_1076
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1076.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1077
	{
		private class DynamicSetters_1078
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1078.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1079
	{
		private class DynamicSetters_1080
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1080.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1081
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1082
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1083
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1084
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1085
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1086
	{
		private class DynamicSetters_1087
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1087.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1088
	{
		private class DynamicSetters_1089
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1089.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1090
	{
		private class DynamicSetters_1091
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1091.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1092
	{
		private class DynamicSetters_1093
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1093.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1094
	{
		private class DynamicSetters_1095
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1095.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1096
	{
		private class DynamicSetters_1097
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1097.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1098
	{
		private class DynamicSetters_1099
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1099.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1100
	{
		private class DynamicSetters_1101
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1101.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1102
	{
		private class DynamicSetters_1103
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1103.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1104
	{
		private class DynamicSetters_1105
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1105.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1106
	{
		private class DynamicSetters_1107
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1107.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1108
	{
		private class DynamicSetters_1109
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeDisabledLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1109.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1110
	{
		private class DynamicSetters_1111
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeGrayColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1111.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1112
	{
		private class DynamicSetters_1113
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1113.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1114
	{
		private class DynamicSetters_1115
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1115.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1116
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1117
	{
		private class DynamicSetters_1118
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1118.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1119
	{
		private class DynamicSetters_1120
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1120.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1121
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1122
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1123
	{
		private class DynamicSetters_1124
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1124.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1125
	{
		private class DynamicSetters_1126
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1126.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1127
	{
		private class DynamicSetters_1128
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1128.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1129
	{
		private class DynamicSetters_1130
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1130.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1131
	{
		private class DynamicSetters_1132
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1132.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1133
	{
		private class DynamicSetters_1134
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1134.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1135
	{
		private class DynamicSetters_1136
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1136.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1137
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1138
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1139
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.8;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1140
	{
		private class DynamicSetters_1141
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1141.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1142
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1143
	{
		private class DynamicSetters_1144
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1144.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1145
	{
		private class DynamicSetters_1146
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1146.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1147
	{
		private class DynamicSetters_1148
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1148.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1149
	{
		private class DynamicSetters_1150
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1150.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1151
	{
		private class DynamicSetters_1152
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1152.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1153
	{
		private class DynamicSetters_1154
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeAltLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1154.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1155
	{
		private class DynamicSetters_1156
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1156.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1157
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1158
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1159
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.8;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1160
	{
		private class DynamicSetters_1161
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1161.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1162
	{
		private class DynamicSetters_1163
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1163.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1164
	{
		private class DynamicSetters_1165
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1165.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1166
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1167
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1168
	{
		private class DynamicSetters_1169
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1169.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1170
	{
		private class DynamicSetters_1171
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1171.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1172
	{
		private class DynamicSetters_1173
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1173.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1174
	{
		private class DynamicSetters_1175
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1175.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1176
	{
		private class DynamicSetters_1177
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1177.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1178
	{
		private class DynamicSetters_1179
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemAltMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1179.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1180
	{
		private class DynamicSetters_1181
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1181.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1182
	{
		private class DynamicSetters_1183
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1183.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1184
	{
		private class DynamicSetters_1185
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1185.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1186
	{
		private class DynamicSetters_1187
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1187.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1188
	{
		private class DynamicSetters_1189
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1189.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1190
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1191
	{
		private class DynamicSetters_1192
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1192.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1193
	{
		private class DynamicSetters_1194
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1194.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1195
	{
		private class DynamicSetters_1196
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeBlackMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1196.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1197
	{
		private class DynamicSetters_1198
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemErrorTextColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1198.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1199
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4278190080u);
			solidColorBrush.Opacity = 0.36;
			return solidColorBrush;
		}
	}

	private class XamlClosure_1200
	{
		private class DynamicSetters_1201
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1201.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1202
	{
		private class DynamicSetters_1203
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemListMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1203.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1204
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1205
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.6;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1206
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.Opacity = 0.8;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1207
	{
		private class DynamicSetters_1208
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeWhiteColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1208.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1209
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1210
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1211
	{
		private class DynamicSetters_1212
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1212.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1213
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1214
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1215
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1216
	{
		private class DynamicSetters_1217
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemRegionColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1217.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1218
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1219
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1220
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1221
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1222
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1223
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1224
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1225
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1226
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1227
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1228
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1229
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1230
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1231
	{
		private class DynamicSetters_1232
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1232.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1233
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1234
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1235
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1236
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1237
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1238
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1239
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1240
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1241
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1242
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1243
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1244
	{
		private class DynamicSetters_1245
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1245.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1246
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1247
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1248
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1249
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1250
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1251
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1252
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1253
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1254
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1255
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1256
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1257
	{
		private class DynamicSetters_1258
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1258.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1259
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1260
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1261
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1262
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1263
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1264
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1265
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1266
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1267
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1268
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1269
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1270
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1271
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1272
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1273
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1274
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1275
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1276
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1277
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1278
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1279
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1280
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1281
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1282
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1283
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1284
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1285
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1286
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1287
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1288
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1289
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1290
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1291
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1292
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1293
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1294
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1295
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1296
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1297
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1298
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1299
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1300
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1301
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1302
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1303
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1304
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1305
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1306
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1307
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1308
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1309
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1310
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1311
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1312
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1313
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1314
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1315
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1316
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1317
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1318
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1319
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1320
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1321
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1322
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1323
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1324
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1325
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1326
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1327
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1328
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1329
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1330
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1331
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1332
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1333
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1334
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1335
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1336
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1337
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1338
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1339
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1340
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1341
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1342
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1343
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1344
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1345
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1346
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1347
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1348
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1349
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1350
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1351
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1352
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1353
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1354
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1355
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1356
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1357
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1358
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1359
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1360
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1361
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1362
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1363
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1364
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1365
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1366
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1367
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageTextBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1368
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1369
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1370
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1371
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1372
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1373
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1374
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1375
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1376
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1377
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1378
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1379
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1380
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1381
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1382
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1383
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1384
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1385
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1386
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1387
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1388
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1389
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1390
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1391
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1392
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1393
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1394
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1395
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1396
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1397
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1398
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1399
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1400
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1401
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1402
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1403
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1404
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1405
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1406
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1407
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1408
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1409
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1410
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1411
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1412
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1413
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1414
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1415
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1416
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1417
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1418
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1419
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1420
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1421
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1422
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1423
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1424
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1425
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1426
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1427
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1428
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1429
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1430
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1431
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1432
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1433
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1434
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1435
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1436
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1437
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1438
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1439
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1440
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1441
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1442
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1443
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1444
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1445
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1446
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1447
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1448
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1449
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1450
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1451
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1452
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1453
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1454
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1455
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1456
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1457
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1458
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1459
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1460
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1461
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1462
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1463
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1464
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHyperlinkBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1465
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1466
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1467
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHyperlinkBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1468
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1469
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1470
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1471
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1472
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1473
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1474
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1475
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1476
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1477
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1478
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1479
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1480
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1481
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemAltMediumHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1482
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1483
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1484
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1485
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1486
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1487
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1488
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1489
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1490
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1491
	{
		private class DynamicSetters_1492
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1492.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1493
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1494
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1495
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1496
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1497
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseHighColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1498
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1499
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1500
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1501
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1502
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1503
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemChromeMediumLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1504
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1505
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4282664004u)
			};
		}
	}

	private class XamlClosure_1506
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1507
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(4288322202u)
			};
		}
	}

	private class XamlClosure_1508
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4278221516u);
			solidColorBrush.Opacity = 0.75;
			return solidColorBrush;
		}
	}

	private class XamlClosure_1509
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4280262213u);
			solidColorBrush.Opacity = 0.75;
			return solidColorBrush;
		}
	}

	private class XamlClosure_1510
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4294816552u);
			solidColorBrush.Opacity = 0.75;
			return solidColorBrush;
		}
	}

	private class XamlClosure_1511
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush = new SolidColorBrush();
			solidColorBrush.Color = Color.FromUInt32(4290584620u);
			solidColorBrush.Opacity = 0.75;
			return solidColorBrush;
		}
	}

	private class XamlClosure_1512
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1513
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1514
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1515
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1516
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1517
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1518
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1519
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1520
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1521
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1522
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1523
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1524
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1525
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1526
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1527
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1528
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1529
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1530
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1531
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1532
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1533
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1534
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1535
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1536
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1537
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1538
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1539
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1540
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1541
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1542
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1543
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1544
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1545
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1546
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1547
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1548
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1549
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1550
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1551
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1552
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1553
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1554
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1555
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1556
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1557
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1558
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1559
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1560
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1561
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1562
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1563
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledChromeDisabledHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1564
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1565
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1566
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1567
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1568
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1569
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1570
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1571
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1572
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1573
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1574
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1575
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1576
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1577
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1578
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1579
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1580
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1581
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1582
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1583
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1584
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1585
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1586
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1587
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1588
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1589
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1590
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1591
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1592
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1593
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1594
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1595
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1596
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1597
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1598
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1599
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1600
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1601
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1602
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1603
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1604
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1605
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1606
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1607
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1608
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1609
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1610
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1611
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1612
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1613
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1614
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1615
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1616
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1617
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1618
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1619
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1620
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1621
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1622
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1623
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1624
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1625
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1626
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1627
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1628
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1629
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1630
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1631
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1632
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1633
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1634
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1635
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1636
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1637
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1638
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1639
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1640
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1641
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1642
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1643
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1644
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1645
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1646
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1647
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1648
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1649
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1650
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1651
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1652
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1653
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1654
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1655
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1656
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1657
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1658
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1659
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1660
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1661
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1662
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1663
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundListLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1664
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1665
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1666
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1667
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1668
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1669
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1670
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1671
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundAltHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1672
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1673
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1674
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1675
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1676
	{
		private class DynamicSetters_1677
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1677.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1678
	{
		private class DynamicSetters_1679
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1679.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1680
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1681
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1682
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemBaseLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1683
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemChromeDisabledLowColor"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1684
	{
		private class DynamicSetters_1685
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ScrollBarPanningThumbBackgroundColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1685.DynamicSetter_1(solidColorBrush, obj);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1686
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1687
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListLowRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1688
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1689
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1690
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccent3RevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1691
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccent2RevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1692
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListMediumRevealBackgroundBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1693
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1694
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1695
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1696
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1697
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1698
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1699
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1700
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1701
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1702
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1703
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1704
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1705
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1706
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1707
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1708
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundTransparentRevealBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1709
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1710
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1711
	{
		private class DynamicSetters_1712
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemBaseHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1712.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.1;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1713
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1714
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1715
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAccentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1716
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1717
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColorLight1");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1718
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1719
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1720
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1721
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1722
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1723
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1724
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1725
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltChromeWhiteBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1726
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1727
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1728
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1729
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1730
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1731
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1732
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1733
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightAltTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1734
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledTransparentBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1735
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundMediumAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1736
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1737
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1738
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1739
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1740
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1741
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1742
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1743
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundAltMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1744
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1745
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1746
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1747
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightListAccentLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1748
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlForegroundBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1749
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumHighBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1750
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlHighlightBaseMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1751
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlDisabledBaseLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1752
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlPageBackgroundMediumAltMediumBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1753
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlBackgroundChromeMediumLowBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1754
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new StaticResourceExtension
			{
				ResourceKey = "SystemControlTransientBorderBrush"
			}.ProvideValue(context);
		}
	}

	private class XamlClosure_1755
	{
		private class DynamicSetters_1756
		{
			public static void DynamicSetter_1(SolidColorBrush P_0, object P_1)
			{
				if (P_1 is UnsetValueType)
				{
					P_0.SetValue(SolidColorBrush.ColorProperty, AvaloniaProperty.UnsetValue);
					return;
				}
				if (P_1 is IBinding)
				{
					IBinding binding = (IBinding)P_1;
					P_0.Bind(SolidColorBrush.ColorProperty, binding);
					return;
				}
				if (P_1 is Color)
				{
					P_0.Color = (Color)P_1;
					return;
				}
				if (P_1 == null)
				{
					throw new NullReferenceException();
				}
				throw new InvalidCastException();
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			SolidColorBrush solidColorBrush;
			SolidColorBrush result = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SystemChromeMediumColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			DynamicSetters_1756.DynamicSetter_1(solidColorBrush, obj);
			solidColorBrush.Opacity = 0.9;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_1757
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(uint.MaxValue)
			};
		}
	}

	private class XamlClosure_1758
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1759
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new FontFamily(((IUriContext)context).BaseUri, "fonts:Inter#Inter, $Default");
		}
	}

	private class XamlClosure_1760
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new SolidColorBrush
			{
				Color = Color.FromUInt32(16777215u)
			};
		}
	}

	private class XamlClosure_1761
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return TransformOperations.Parse("scaleX(0.125) translateX(-2px)");
		}
	}

	private class XamlClosure_1762
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return TransformOperations.Parse("scaleY(0.125) translateY(-2px)");
		}
	}

	private class XamlClosure_1763
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopLeft | Corners.TopRight)
			};
		}
	}

	private class XamlClosure_1764
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopRight | Corners.BottomRight)
			};
		}
	}

	private class XamlClosure_1765
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.BottomLeft | Corners.BottomRight)
			};
		}
	}

	private class XamlClosure_1766
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (FluentTheme)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopLeft | Corners.BottomLeft)
			};
		}
	}

	private readonly ResourceDictionary _compactStyles;

	private DensityStyle _densityStyle;

	public static readonly DirectProperty<FluentTheme, DensityStyle> DensityStyleProperty = AvaloniaProperty.RegisterDirect("DensityStyle", (FluentTheme o) => o.DensityStyle, delegate(FluentTheme o, DensityStyle v)
	{
		o.DensityStyle = v;
	}, DensityStyle.Normal);

	private static Action<object> _0021XamlIlPopulateOverride;

	public DensityStyle DensityStyle
	{
		get
		{
			return _densityStyle;
		}
		set
		{
			SetAndRaise(DensityStyleProperty, ref _densityStyle, value);
		}
	}

	public IDictionary<ThemeVariant, ColorPaletteResources> Palettes { get; }

	public FluentTheme(IServiceProvider? sp = null)
	{
		_0021XamlIlPopulateTrampoline(sp, this);
		_compactStyles = (ResourceDictionary)GetAndRemove("CompactStyles");
		Palettes = base.Resources.MergedDictionaries.OfType<ColorPaletteResourcesCollection>().FirstOrDefault() ?? throw new InvalidOperationException("FluentTheme was initialized with missing ColorPaletteResourcesCollection.");
		object GetAndRemove(string key)
		{
			object? result = base.Resources[key] ?? throw new KeyNotFoundException("Key " + key + " was not found in the resources");
			base.Resources.Remove(key);
			return result;
		}
	}

	protected override void OnPropertyChanged(AvaloniaPropertyChangedEventArgs change)
	{
		base.OnPropertyChanged(change);
		if (change.Property == DensityStyleProperty)
		{
			base.Owner?.NotifyHostedResourcesChanged(ResourcesChangedEventArgs.Empty);
		}
	}

	bool IResourceNode.TryGetResource(object key, ThemeVariant? theme, out object? value)
	{
		if (_densityStyle == DensityStyle.Compact && _compactStyles.TryGetResource(key, theme, out value))
		{
			return true;
		}
		return TryGetResource(key, theme, out value);
	}

	static void _0021XamlIlPopulate(IServiceProvider P_0, FluentTheme P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme> context = new CompiledAvaloniaXaml.XamlIlContext.Context<FluentTheme>(P_0, new object[1] { _0021AvaloniaResources.NamespaceInfo_003A_002FFluentTheme_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/FluentTheme.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		FluentTheme fluentTheme;
		FluentTheme fluentTheme2 = (fluentTheme = P_1);
		context.PushParent(fluentTheme);
		ResourceDictionary resourceDictionary;
		ResourceDictionary resources = (resourceDictionary = new ResourceDictionary());
		context.PushParent(resourceDictionary);
		ResourceDictionary resourceDictionary2 = resourceDictionary;
		resourceDictionary2.AddDeferred("CompactStyles", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_294.Build, context));
		resourceDictionary2.MergedDictionaries.Add(_0021AvaloniaResources.Build_003A_002FAccents_002FBaseColorsPalette_002Examl(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(context)));
		resourceDictionary2.MergedDictionaries.Add(new SystemAccentColors());
		resourceDictionary2.MergedDictionaries.Add(new ColorPaletteResourcesCollection());
		IDictionary<ThemeVariant, IThemeVariantProvider> themeDictionaries = resourceDictionary2.ThemeDictionaries;
		ThemeVariant @default = ThemeVariant.Default;
		ResourceDictionary value = (resourceDictionary = new ResourceDictionary());
		context.PushParent(resourceDictionary);
		ResourceDictionary resourceDictionary3 = resourceDictionary;
		((IThemeVariantProvider)resourceDictionary3).Key = ThemeVariant.Default;
		resourceDictionary3.AddDeferred("SystemControlBackgroundAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_295.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_296.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_298.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_300.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundAltMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_302.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_304.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_306.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_308.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_310.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_312.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeBlackHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_314.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeBlackMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_316.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeBlackLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_318.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_320.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_322.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_324.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_326.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_328.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_330.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_332.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_333.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_335.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_337.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledChromeDisabledHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_339.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledChromeDisabledLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_341.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_343.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_345.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_347.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDisabledTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_349.Build, context));
		resourceDictionary3.AddDeferred("SystemControlFocusVisualPrimaryBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_350.Build, context));
		resourceDictionary3.AddDeferred("SystemControlFocusVisualSecondaryBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_351.Build, context));
		resourceDictionary3.AddDeferred("SystemControlRevealFocusVisualBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_352.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_353.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_354.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_356.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_358.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_360.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_362.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_364.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_366.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeBlackHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_368.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_370.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_372.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeDisabledLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_374.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_376.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeBlackMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_378.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_380.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundChromeGrayBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_382.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_384.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_386.Build, context));
		resourceDictionary3.AddDeferred("SystemControlForegroundTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_388.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_389.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_390.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_391.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_393.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_395.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_397.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_399.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_401.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_403.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltListAccentHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_405.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltListAccentLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_406.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltListAccentMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_407.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_408.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_410.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_411.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_413.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_415.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_417.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_419.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightChromeAltLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_421.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_423.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListAccentHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_425.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListAccentLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_426.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListAccentMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_427.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_428.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_430.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_432.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_434.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHyperlinkTextBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_435.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHyperlinkBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_436.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHyperlinkBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_438.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHyperlinkBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_440.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_442.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_444.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundMediumAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_446.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_448.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_450.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_452.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundChromeLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_454.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_456.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageBackgroundTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_458.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageTextBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_459.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageTextBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_461.Build, context));
		resourceDictionary3.AddDeferred("SystemControlPageTextChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_463.Build, context));
		resourceDictionary3.AddDeferred("SystemControlErrorTextForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_465.Build, context));
		resourceDictionary3.AddDeferred("SystemControlTransientBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_467.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListLowRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_468.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightListMediumRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_470.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAccentRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_472.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAccent3RevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_473.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAccent2RevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_474.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundChromeWhiteRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_475.Build, context));
		resourceDictionary3.AddDeferred("SystemControlHighlightAltTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_477.Build, context));
		resourceDictionary3.AddDeferred("SystemControlBackgroundTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_478.Build, context));
		resourceDictionary3.AddDeferred("SystemControlTransientBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_479.Build, context));
		resourceDictionary3.AddDeferred("SystemControlDescriptionTextForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_481.Build, context));
		resourceDictionary3.AddDeferred("SystemControlTransparentRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_482.Build, context));
		resourceDictionary3.AddDeferred("SystemControlTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_483.Build, context));
		resourceDictionary3.AddDeferred("SystemRegionBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_484.Build, context));
		((IThemeVariantProvider)resourceDictionary3).Key = ThemeVariant.Default;
		resourceDictionary3.AddDeferred("AccentButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_486.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_487.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_488.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_489.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_490.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_491.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_492.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_493.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_494.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_495.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_496.Build, context));
		resourceDictionary3.AddDeferred("AccentButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_497.Build, context));
		resourceDictionary3.Add("ButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("ButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_498.Build, context));
		resourceDictionary3.AddDeferred("ButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_499.Build, context));
		resourceDictionary3.AddDeferred("ButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_501.Build, context));
		resourceDictionary3.AddDeferred("ButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_502.Build, context));
		resourceDictionary3.AddDeferred("ButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_503.Build, context));
		resourceDictionary3.AddDeferred("ButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_504.Build, context));
		resourceDictionary3.AddDeferred("ButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_505.Build, context));
		resourceDictionary3.AddDeferred("ButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_506.Build, context));
		resourceDictionary3.AddDeferred("ButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_507.Build, context));
		resourceDictionary3.AddDeferred("ButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_508.Build, context));
		resourceDictionary3.AddDeferred("ButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_509.Build, context));
		resourceDictionary3.AddDeferred("ButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_510.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_511.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_512.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_514.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_515.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_516.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_517.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_518.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_519.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_520.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_521.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_522.Build, context));
		resourceDictionary3.AddDeferred("RepeatButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_523.Build, context));
		resourceDictionary3.Add("ToggleButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("ToggleButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_524.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_525.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_527.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_528.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_529.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_530.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_531.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_532.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_533.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_534.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_535.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBackgroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_536.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_537.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_538.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_539.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_540.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_541.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_542.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_543.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_544.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_545.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_546.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_547.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_548.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_549.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_550.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_551.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_552.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_553.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_554.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_555.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_556.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_557.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_558.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_559.Build, context));
		resourceDictionary3.AddDeferred("ToggleButtonBorderBrushIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_560.Build, context));
		resourceDictionary3.Add("ComboBoxThemeMinWidth", 64.0);
		resourceDictionary3.Add("ComboBoxBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.Add("ComboBoxDropdownBorderThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.Add("ComboBoxItemThemePadding", new Thickness(11.0, 5.0, 11.0, 7.0));
		resourceDictionary3.Add("ComboBoxHeaderThemeFontWeight", FontWeight.Normal);
		resourceDictionary3.AddDeferred("ComboBoxItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_561.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_562.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_563.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_564.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_565.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_566.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_567.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemForegroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_568.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_569.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_570.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_571.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_572.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_573.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_574.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_575.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBackgroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_576.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_577.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_578.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_579.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_580.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_581.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_582.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxItemBorderBrushSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_583.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_584.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_585.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_586.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_587.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundUnfocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_588.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundBorderBrushFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_589.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBackgroundBorderBrushUnfocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_590.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_591.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_592.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_593.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_594.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxPlaceHolderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_595.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxPlaceHolderForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_596.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_597.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_598.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_599.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_600.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownGlyphForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_601.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownGlyphForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_602.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownGlyphForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_603.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownGlyphForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_604.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_605.Build, context));
		resourceDictionary3.AddDeferred("ComboBoxDropDownBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_606.Build, context));
		resourceDictionary3.Add("ComboBoxDropdownBorderPadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("ComboBoxDropdownContentMargin", new Thickness(0.0, 4.0, 0.0, 4.0));
		resourceDictionary3.Add("ListBoxBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("ProgressBarThemeMinHeight", 4.0);
		resourceDictionary3.Add("ProgressBarBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("MenuFlyoutSeparatorThemeHeight", 1.0);
		resourceDictionary3.Add("MenuFlyoutThemeMinHeight", 32.0);
		resourceDictionary3.Add("MenuFlyoutPresenterThemePadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("MenuFlyoutItemChevronMargin", new Thickness(12.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("MenuFlyoutSeparatorThemePadding", new Thickness(12.0, 4.0, 12.0, 4.0));
		resourceDictionary3.AddDeferred("MenuFlyoutItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_607.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_608.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_609.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_610.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_611.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_612.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_613.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_614.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutSubItemChevron", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_615.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutSubItemChevronPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_616.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutSubItemChevronPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_617.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutSubItemChevronSubMenuOpened", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_618.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutSubItemChevronDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_619.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_620.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_621.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_622.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_623.Build, context));
		resourceDictionary3.Add("MenuFlyoutItemThemePadding", new Thickness(11.0, 9.0, 11.0, 10.0));
		resourceDictionary3.Add("MenuFlyoutItemThemePaddingNarrow", new Thickness(11.0, 4.0, 11.0, 7.0));
		resourceDictionary3.AddDeferred("MenuFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_624.Build, context));
		resourceDictionary3.AddDeferred("MenuFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_625.Build, context));
		resourceDictionary3.Add("MenuFlyoutPresenterBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("TextControlForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_626.Build, context));
		resourceDictionary3.AddDeferred("TextControlForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_627.Build, context));
		resourceDictionary3.AddDeferred("TextControlForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_628.Build, context));
		resourceDictionary3.AddDeferred("TextControlBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_629.Build, context));
		resourceDictionary3.AddDeferred("TextControlBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_630.Build, context));
		resourceDictionary3.AddDeferred("TextControlBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_631.Build, context));
		resourceDictionary3.AddDeferred("TextControlBorderBrushFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_632.Build, context));
		resourceDictionary3.AddDeferred("TextControlBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_633.Build, context));
		resourceDictionary3.AddDeferred("TextControlPlaceholderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_634.Build, context));
		resourceDictionary3.AddDeferred("TextControlPlaceholderForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_635.Build, context));
		resourceDictionary3.AddDeferred("TextControlPlaceholderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_636.Build, context));
		resourceDictionary3.AddDeferred("TextControlSelectionHighlightColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_637.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_638.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_639.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_640.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_641.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_642.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_643.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_644.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_645.Build, context));
		resourceDictionary3.AddDeferred("TextControlBackgroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_646.Build, context));
		resourceDictionary3.AddDeferred("TextControlBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_647.Build, context));
		resourceDictionary3.AddDeferred("TextControlBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_648.Build, context));
		resourceDictionary3.AddDeferred("TextControlButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_649.Build, context));
		resourceDictionary3.AddDeferred("TextControlForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_650.Build, context));
		resourceDictionary3.AddDeferred("TextControlPlaceholderForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_651.Build, context));
		resourceDictionary3.AddDeferred("AutoCompleteBoxSuggestionsListBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_652.Build, context));
		resourceDictionary3.AddDeferred("AutoCompleteBoxSuggestionsListBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_653.Build, context));
		resourceDictionary3.Add("CheckBoxBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("CheckBoxForegroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_654.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_655.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_656.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_657.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_658.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_659.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_660.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_661.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_662.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_663.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_664.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_665.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_666.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_667.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_668.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_669.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_670.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_671.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_672.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_673.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_674.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_675.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_676.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBackgroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_677.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_678.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_679.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_680.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_681.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_682.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_683.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_684.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_685.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_686.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_687.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_688.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxBorderBrushIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_689.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_690.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_691.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_692.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_693.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_694.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_695.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_696.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_697.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_698.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_699.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_700.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_701.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_702.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_703.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_704.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_705.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_706.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_707.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_708.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_709.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_710.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_711.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckBackgroundFillIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_712.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_713.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_714.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_715.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_716.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_717.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_718.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_719.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_720.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_721.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_722.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_723.Build, context));
		resourceDictionary3.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_724.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewSelectedHoverBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_725.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewSelectedPressedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_726.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewSelectedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_727.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewHoverBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_728.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewPressedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_729.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewTodayForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_730.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewBlackoutForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_731.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewOutOfScopeForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_732.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewCalendarItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_733.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewOutOfScopeBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_734.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_735.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_736.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_737.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewWeekDayForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_738.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewNavigationButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_739.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewNavigationButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_740.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewNavigationButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_741.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewCalendarItemRevealBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_742.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewCalendarItemRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_743.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewNavigationButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_744.Build, context));
		resourceDictionary3.AddDeferred("CalendarViewNavigationButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_745.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_746.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_747.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_748.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_749.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_750.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_751.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_752.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_753.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_754.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_755.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_756.Build, context));
		resourceDictionary3.AddDeferred("ExpanderHeaderBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_757.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_758.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_759.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_761.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_762.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_763.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_764.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_765.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_766.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_767.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_768.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_769.Build, context));
		resourceDictionary3.AddDeferred("ExpanderChevronBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_770.Build, context));
		resourceDictionary3.AddDeferred("ExpanderContentBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_771.Build, context));
		resourceDictionary3.AddDeferred("ExpanderContentBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_772.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_773.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_774.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardProgressBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_775.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardInformationBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_776.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardSuccessBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_777.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardWarningBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_778.Build, context));
		resourceDictionary3.AddDeferred("NotificationCardErrorBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_779.Build, context));
		resourceDictionary3.Add("RadioButtonBorderThemeThickness", 1.0);
		resourceDictionary3.AddDeferred("RadioButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_780.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_781.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_782.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_783.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_784.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_785.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_786.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_787.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_788.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_789.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_790.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_791.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_792.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_793.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_794.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_795.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_796.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_797.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_798.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_799.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_800.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_801.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_802.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_803.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_804.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_805.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_806.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonOuterEllipseCheckedFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_807.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_808.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_809.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_810.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_811.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_812.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_813.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_814.Build, context));
		resourceDictionary3.AddDeferred("RadioButtonCheckGlyphStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_815.Build, context));
		resourceDictionary3.Add("SliderOutsideTickBarThemeHeight", 4.0);
		resourceDictionary3.Add("SliderTrackThemeHeight", 2.0);
		resourceDictionary3.Add("SliderBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.AddDeferred("SliderContainerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_816.Build, context));
		resourceDictionary3.AddDeferred("SliderContainerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_817.Build, context));
		resourceDictionary3.AddDeferred("SliderContainerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_818.Build, context));
		resourceDictionary3.AddDeferred("SliderContainerBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_819.Build, context));
		resourceDictionary3.AddDeferred("SliderThumbBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_820.Build, context));
		resourceDictionary3.AddDeferred("SliderThumbBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_821.Build, context));
		resourceDictionary3.AddDeferred("SliderThumbBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_822.Build, context));
		resourceDictionary3.AddDeferred("SliderThumbBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_823.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_824.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_825.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_826.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_827.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackValueFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_828.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackValueFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_829.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackValueFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_830.Build, context));
		resourceDictionary3.AddDeferred("SliderTrackValueFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_831.Build, context));
		resourceDictionary3.AddDeferred("SliderTickBarFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_832.Build, context));
		resourceDictionary3.AddDeferred("SliderTickBarFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_833.Build, context));
		resourceDictionary3.AddDeferred("SliderInlineTickBarFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_834.Build, context));
		resourceDictionary3.Add("ToggleSwitchOnStrokeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary3.Add("ToggleSwitchOuterBorderStrokeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("ToggleSwitchContentForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_835.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_836.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchContainerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_837.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchContainerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_838.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchContainerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_839.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_840.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_841.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_842.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_843.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_844.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_845.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOffDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_846.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_847.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_848.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_849.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchFillOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_850.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_851.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_852.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_853.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchStrokeOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_854.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_855.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_856.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_857.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOffDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_858.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_859.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_860.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_861.Build, context));
		resourceDictionary3.AddDeferred("ToggleSwitchKnobFillOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_862.Build, context));
		resourceDictionary3.Add("ToolTipContentThemeFontSize", 12.0);
		resourceDictionary3.Add("ToolTipBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("ToolTipForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_863.Build, context));
		resourceDictionary3.AddDeferred("ToolTipBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_864.Build, context));
		resourceDictionary3.AddDeferred("ToolTipBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_865.Build, context));
		resourceDictionary3.Add("ToolTipBorderThemePadding", new Thickness(8.0, 5.0, 8.0, 7.0));
		resourceDictionary3.AddDeferred("DatePickerSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_866.Build, context));
		resourceDictionary3.AddDeferred("DatePickerSpacerFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_867.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_868.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_869.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_870.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_871.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_872.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_873.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_874.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_875.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_876.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_877.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_878.Build, context));
		resourceDictionary3.AddDeferred("DatePickerButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_879.Build, context));
		resourceDictionary3.AddDeferred("DatePickerFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_880.Build, context));
		resourceDictionary3.AddDeferred("DatePickerFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_881.Build, context));
		resourceDictionary3.AddDeferred("DatePickerFlyoutPresenterSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_882.Build, context));
		resourceDictionary3.AddDeferred("DatePickerFlyoutPresenterHighlightFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_883.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_884.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_885.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_886.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_887.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_888.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_889.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_890.Build, context));
		resourceDictionary3.AddDeferred("DateTimePickerFlyoutButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_891.Build, context));
		resourceDictionary3.AddDeferred("TimePickerSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_892.Build, context));
		resourceDictionary3.AddDeferred("TimePickerSpacerFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_893.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_894.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_895.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_896.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_897.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_898.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_899.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_900.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_901.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_902.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_903.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_904.Build, context));
		resourceDictionary3.AddDeferred("TimePickerButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_905.Build, context));
		resourceDictionary3.AddDeferred("TimePickerFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_906.Build, context));
		resourceDictionary3.AddDeferred("TimePickerFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_907.Build, context));
		resourceDictionary3.AddDeferred("TimePickerFlyoutPresenterSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_908.Build, context));
		resourceDictionary3.AddDeferred("TimePickerFlyoutPresenterHighlightFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_909.Build, context));
		resourceDictionary3.Add("TabItemHeaderFontSize", 24.0);
		resourceDictionary3.Add("TabItemHeaderMargin", new Thickness(12.0, 0.0, 12.0, 0.0));
		resourceDictionary3.Add("TabItemMargin", new Thickness(12.0, 0.0, 12.0, 0.0));
		resourceDictionary3.Add("TabItemHeaderThemeFontWeight", FontWeight.SemiLight);
		resourceDictionary3.AddDeferred("TabControlBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_910.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundUnselected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_911.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundUnselectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_912.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundUnselectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_913.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_914.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_915.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_916.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_917.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundUnselected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_918.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundUnselectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_919.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundUnselectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_920.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_921.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_922.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_923.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_924.Build, context));
		resourceDictionary3.AddDeferred("TabItemHeaderSelectedPipeFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_925.Build, context));
		resourceDictionary3.Add("ScrollBarTrackBorderThemeThickness", 0.0);
		resourceDictionary3.AddDeferred("ScrollBarBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_926.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_927.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_928.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_929.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_930.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_931.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_932.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_933.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_934.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_935.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_936.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonArrowForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_937.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonArrowForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_938.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonArrowForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_939.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarButtonArrowForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_940.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarThumbFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_941.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarThumbFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_942.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarThumbFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_943.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarTrackFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_944.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarTrackFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_946.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarTrackStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_948.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarTrackStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_949.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarThumbBackgroundColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_950.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarPanningThumbBackgroundColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_951.Build, context));
		resourceDictionary3.AddDeferred("ScrollBarPanningThumbBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_952.Build, context));
		resourceDictionary3.Add("ScrollBarSize", 16.0);
		resourceDictionary3.Add("ScrollBarButtonArrowIconFontSize", 8.0);
		resourceDictionary3.AddDeferred("TreeViewItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_954.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_955.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_956.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_957.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_958.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_959.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_960.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBackgroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_961.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_962.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_963.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_964.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_965.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_966.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_967.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_968.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemForegroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_969.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_970.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_971.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_972.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_973.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_974.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_975.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_976.Build, context));
		resourceDictionary3.AddDeferred("TreeViewItemBorderBrushSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_977.Build, context));
		resourceDictionary3.Add("TreeViewItemBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.Add("TreeViewItemMinHeight", 32.0);
		resourceDictionary3.AddDeferred("SplitButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_978.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_979.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_981.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_982.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_983.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_984.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_985.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_986.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_987.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_988.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_989.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_990.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_991.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_992.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_993.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_994.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_995.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_996.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_997.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_998.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_999.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1000.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1001.Build, context));
		resourceDictionary3.AddDeferred("SplitButtonBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1002.Build, context));
		resourceDictionary3.Add("SplitButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("SplitViewLightDismissOverlayBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1003.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1004.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1005.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerCalendarGlyphForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1006.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerCalendarGlyphForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1007.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerTextForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1008.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerTextForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1009.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerTextForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1010.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1011.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1012.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1013.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1014.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBackgroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1015.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1016.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1017.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1018.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1019.Build, context));
		resourceDictionary3.AddDeferred("CalendarDatePickerLightDismissOverlayBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1020.Build, context));
		resourceDictionary3.Add("CalendarDatePickerBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary3.AddDeferred("FlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1021.Build, context));
		resourceDictionary3.AddDeferred("FlyoutBorderThemeBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1022.Build, context));
		resourceDictionary3.AddDeferred("ScrollViewerScrollBarsSeparatorBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1023.Build, context));
		resourceDictionary3.AddDeferred("RefreshVisualizerForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1025.Build, context));
		resourceDictionary3.AddDeferred("RefreshVisualizerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1026.Build, context));
		context.PopParent();
		themeDictionaries.Add(@default, value);
		IDictionary<ThemeVariant, IThemeVariantProvider> themeDictionaries2 = resourceDictionary2.ThemeDictionaries;
		ThemeVariant dark = ThemeVariant.Dark;
		ResourceDictionary value2 = (resourceDictionary = new ResourceDictionary());
		context.PushParent(resourceDictionary);
		ResourceDictionary resourceDictionary4 = resourceDictionary;
		((IThemeVariantProvider)resourceDictionary4).Key = ThemeVariant.Dark;
		resourceDictionary4.AddDeferred("SystemControlBackgroundAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1027.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1028.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1030.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1032.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundAltMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1034.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1036.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1038.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1040.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1042.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1044.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeBlackHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1046.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeBlackMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1048.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeBlackLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1050.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1052.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1054.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1056.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1058.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1060.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1062.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1064.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1065.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1067.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1069.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledChromeDisabledHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1071.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledChromeDisabledLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1073.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1075.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1077.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1079.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDisabledTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1081.Build, context));
		resourceDictionary4.AddDeferred("SystemControlFocusVisualPrimaryBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1082.Build, context));
		resourceDictionary4.AddDeferred("SystemControlFocusVisualSecondaryBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1083.Build, context));
		resourceDictionary4.AddDeferred("SystemControlRevealFocusVisualBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1084.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1085.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1086.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1088.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1090.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1092.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1094.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1096.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1098.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeBlackHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1100.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1102.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1104.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1106.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeDisabledLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1108.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeGrayBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1110.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1112.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1114.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1116.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeBlackMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1117.Build, context));
		resourceDictionary4.AddDeferred("SystemControlForegroundChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1119.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1121.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltAccentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1122.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1123.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1125.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1127.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1129.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1131.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltAltMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1133.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1135.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltListAccentHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1137.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltListAccentLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1138.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltListAccentMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1139.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1140.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1142.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1143.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1145.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1147.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1149.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightBaseMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1151.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightChromeAltLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1153.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightChromeHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1155.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListAccentHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1157.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListAccentLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1158.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListAccentMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1159.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1160.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1162.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightChromeWhiteBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1164.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1166.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHyperlinkTextBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1167.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHyperlinkBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1168.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHyperlinkBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1170.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHyperlinkBaseMediumHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1172.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1174.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundAltHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1176.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundMediumAltMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1178.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundBaseLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1180.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1182.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundListLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1184.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundChromeLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1186.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundChromeMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1188.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageBackgroundTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1190.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageTextBaseHighBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1191.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageTextBaseMediumBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1193.Build, context));
		resourceDictionary4.AddDeferred("SystemControlPageTextChromeBlackMediumLowBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1195.Build, context));
		resourceDictionary4.AddDeferred("SystemControlErrorTextForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1197.Build, context));
		resourceDictionary4.AddDeferred("SystemControlTransientBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1199.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListLowRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1200.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightListMediumRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1202.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAccentRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1204.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAccent3RevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1205.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAccent2RevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1206.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundChromeWhiteRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1207.Build, context));
		resourceDictionary4.AddDeferred("SystemControlHighlightAltTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1209.Build, context));
		resourceDictionary4.AddDeferred("SystemControlBackgroundTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1210.Build, context));
		resourceDictionary4.AddDeferred("SystemControlTransientBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1211.Build, context));
		resourceDictionary4.AddDeferred("SystemControlDescriptionTextForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1213.Build, context));
		resourceDictionary4.AddDeferred("SystemControlTransparentRevealBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1214.Build, context));
		resourceDictionary4.AddDeferred("SystemControlTransparentRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1215.Build, context));
		resourceDictionary4.AddDeferred("SystemRegionBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1216.Build, context));
		((IThemeVariantProvider)resourceDictionary4).Key = ThemeVariant.Dark;
		resourceDictionary4.AddDeferred("AccentButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1218.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1219.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1220.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1221.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1222.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1223.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1224.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1225.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1226.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1227.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1228.Build, context));
		resourceDictionary4.AddDeferred("AccentButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1229.Build, context));
		resourceDictionary4.Add("ButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("ButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1230.Build, context));
		resourceDictionary4.AddDeferred("ButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1231.Build, context));
		resourceDictionary4.AddDeferred("ButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1233.Build, context));
		resourceDictionary4.AddDeferred("ButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1234.Build, context));
		resourceDictionary4.AddDeferred("ButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1235.Build, context));
		resourceDictionary4.AddDeferred("ButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1236.Build, context));
		resourceDictionary4.AddDeferred("ButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1237.Build, context));
		resourceDictionary4.AddDeferred("ButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1238.Build, context));
		resourceDictionary4.AddDeferred("ButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1239.Build, context));
		resourceDictionary4.AddDeferred("ButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1240.Build, context));
		resourceDictionary4.AddDeferred("ButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1241.Build, context));
		resourceDictionary4.AddDeferred("ButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1242.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1243.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1244.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1246.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1247.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1248.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1249.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1250.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1251.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1252.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1253.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1254.Build, context));
		resourceDictionary4.AddDeferred("RepeatButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1255.Build, context));
		resourceDictionary4.Add("ToggleButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("ToggleButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1256.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1257.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1259.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1260.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1261.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1262.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1263.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1264.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1265.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1266.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1267.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBackgroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1268.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1269.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1270.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1271.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1272.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1273.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1274.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1275.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1276.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1277.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1278.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1279.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1280.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1281.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1282.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1283.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1284.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1285.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1286.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1287.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1288.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1289.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1290.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1291.Build, context));
		resourceDictionary4.AddDeferred("ToggleButtonBorderBrushIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1292.Build, context));
		resourceDictionary4.Add("ComboBoxThemeMinWidth", 64.0);
		resourceDictionary4.Add("ComboBoxBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.Add("ComboBoxDropdownBorderThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.Add("ComboBoxItemThemePadding", new Thickness(11.0, 5.0, 11.0, 7.0));
		resourceDictionary4.Add("ComboBoxHeaderThemeFontWeight", FontWeight.Normal);
		resourceDictionary4.AddDeferred("ComboBoxItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1293.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1294.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1295.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1296.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1297.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1298.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1299.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemForegroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1300.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1301.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1302.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1303.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1304.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1305.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1306.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1307.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBackgroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1308.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1309.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1310.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1311.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1312.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1313.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1314.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxItemBorderBrushSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1315.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1316.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1317.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1318.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1319.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundUnfocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1320.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundBorderBrushFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1321.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBackgroundBorderBrushUnfocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1322.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1323.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1324.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1325.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1326.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxPlaceHolderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1327.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxPlaceHolderForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1328.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1329.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1330.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1331.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1332.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownGlyphForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1333.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownGlyphForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1334.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownGlyphForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1335.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownGlyphForegroundFocusedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1336.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1337.Build, context));
		resourceDictionary4.AddDeferred("ComboBoxDropDownBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1338.Build, context));
		resourceDictionary4.Add("ComboBoxDropdownBorderPadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("ComboBoxDropdownContentMargin", new Thickness(0.0, 4.0, 0.0, 4.0));
		resourceDictionary4.Add("ListBoxBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("ProgressBarThemeMinHeight", 4.0);
		resourceDictionary4.Add("ProgressBarBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("MenuFlyoutSeparatorThemeHeight", 1.0);
		resourceDictionary4.Add("MenuFlyoutThemeMinHeight", 32.0);
		resourceDictionary4.Add("MenuFlyoutPresenterThemePadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("MenuFlyoutItemChevronMargin", new Thickness(12.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("MenuFlyoutSeparatorThemePadding", new Thickness(12.0, 4.0, 12.0, 4.0));
		resourceDictionary4.AddDeferred("MenuFlyoutItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1339.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1340.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1341.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1342.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1343.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1344.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1345.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1346.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutSubItemChevron", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1347.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutSubItemChevronPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1348.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutSubItemChevronPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1349.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutSubItemChevronSubMenuOpened", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1350.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutSubItemChevronDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1351.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1352.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1353.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1354.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1355.Build, context));
		resourceDictionary4.Add("MenuFlyoutItemThemePadding", new Thickness(11.0, 9.0, 11.0, 10.0));
		resourceDictionary4.Add("MenuFlyoutItemThemePaddingNarrow", new Thickness(11.0, 4.0, 11.0, 7.0));
		resourceDictionary4.AddDeferred("MenuFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1356.Build, context));
		resourceDictionary4.AddDeferred("MenuFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1357.Build, context));
		resourceDictionary4.Add("MenuFlyoutPresenterBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("TextControlForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1358.Build, context));
		resourceDictionary4.AddDeferred("TextControlForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1359.Build, context));
		resourceDictionary4.AddDeferred("TextControlForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1360.Build, context));
		resourceDictionary4.AddDeferred("TextControlBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1361.Build, context));
		resourceDictionary4.AddDeferred("TextControlBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1362.Build, context));
		resourceDictionary4.AddDeferred("TextControlBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1363.Build, context));
		resourceDictionary4.AddDeferred("TextControlBorderBrushFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1364.Build, context));
		resourceDictionary4.AddDeferred("TextControlBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1365.Build, context));
		resourceDictionary4.AddDeferred("TextControlPlaceholderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1366.Build, context));
		resourceDictionary4.AddDeferred("TextControlPlaceholderForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1367.Build, context));
		resourceDictionary4.AddDeferred("TextControlPlaceholderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1368.Build, context));
		resourceDictionary4.AddDeferred("TextControlSelectionHighlightColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1369.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1370.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1371.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1372.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1373.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1374.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1375.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1376.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1377.Build, context));
		resourceDictionary4.AddDeferred("TextControlBackgroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1378.Build, context));
		resourceDictionary4.AddDeferred("TextControlBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1379.Build, context));
		resourceDictionary4.AddDeferred("TextControlBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1380.Build, context));
		resourceDictionary4.AddDeferred("TextControlButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1381.Build, context));
		resourceDictionary4.AddDeferred("TextControlForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1382.Build, context));
		resourceDictionary4.AddDeferred("TextControlPlaceholderForegroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1383.Build, context));
		resourceDictionary4.AddDeferred("AutoCompleteBoxSuggestionsListBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1384.Build, context));
		resourceDictionary4.AddDeferred("AutoCompleteBoxSuggestionsListBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1385.Build, context));
		resourceDictionary4.Add("CheckBoxBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("CheckBoxForegroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1386.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1387.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1388.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1389.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1390.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1391.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1392.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1393.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1394.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1395.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1396.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1397.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1398.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1399.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1400.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1401.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1402.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1403.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1404.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1405.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1406.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1407.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1408.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBackgroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1409.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1410.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1411.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1412.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1413.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1414.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1415.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1416.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1417.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1418.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1419.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1420.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxBorderBrushIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1421.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1422.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1423.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1424.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1425.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1426.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1427.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1428.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1429.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1430.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1431.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundStrokeIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1432.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1433.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1434.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1435.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1436.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1437.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1438.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1439.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1440.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1441.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1442.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1443.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckBackgroundFillIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1444.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundUnchecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1445.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1446.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1447.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundUncheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1448.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1449.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1450.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1451.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1452.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminate", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1453.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminatePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1454.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminatePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1455.Build, context));
		resourceDictionary4.AddDeferred("CheckBoxCheckGlyphForegroundIndeterminateDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1456.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewSelectedHoverBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1457.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewSelectedPressedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1458.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewSelectedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1459.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewHoverBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1460.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewPressedBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1461.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewTodayForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1462.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewBlackoutForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1463.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewOutOfScopeForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1464.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewCalendarItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1465.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewOutOfScopeBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1466.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1467.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1468.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1469.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewWeekDayForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1470.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewNavigationButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1471.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewNavigationButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1472.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewNavigationButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1473.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewCalendarItemRevealBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1474.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewCalendarItemRevealBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1475.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewNavigationButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1476.Build, context));
		resourceDictionary4.AddDeferred("CalendarViewNavigationButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1477.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1478.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1479.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1480.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1481.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1482.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1483.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1484.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1485.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1486.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1487.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1488.Build, context));
		resourceDictionary4.AddDeferred("ExpanderHeaderBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1489.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1490.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1491.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1493.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1494.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1495.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1496.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1497.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1498.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1499.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1500.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1501.Build, context));
		resourceDictionary4.AddDeferred("ExpanderChevronBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1502.Build, context));
		resourceDictionary4.AddDeferred("ExpanderContentBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1503.Build, context));
		resourceDictionary4.AddDeferred("ExpanderContentBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1504.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1505.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardForegroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1506.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardProgressBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1507.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardInformationBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1508.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardSuccessBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1509.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardWarningBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1510.Build, context));
		resourceDictionary4.AddDeferred("NotificationCardErrorBackgroundBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1511.Build, context));
		resourceDictionary4.Add("RadioButtonBorderThemeThickness", 1.0);
		resourceDictionary4.AddDeferred("RadioButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1512.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1513.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1514.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1515.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1516.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1517.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1518.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1519.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1520.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1521.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1522.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1523.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1524.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1525.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1526.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1527.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1528.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1529.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1530.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1531.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1532.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1533.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1534.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1535.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1536.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1537.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1538.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonOuterEllipseCheckedFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1539.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1540.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1541.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1542.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1543.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1544.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1545.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphStrokePressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1546.Build, context));
		resourceDictionary4.AddDeferred("RadioButtonCheckGlyphStrokeDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1547.Build, context));
		resourceDictionary4.Add("SliderOutsideTickBarThemeHeight", 4.0);
		resourceDictionary4.Add("SliderTrackThemeHeight", 2.0);
		resourceDictionary4.Add("SliderBorderThemeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.AddDeferred("SliderContainerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1548.Build, context));
		resourceDictionary4.AddDeferred("SliderContainerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1549.Build, context));
		resourceDictionary4.AddDeferred("SliderContainerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1550.Build, context));
		resourceDictionary4.AddDeferred("SliderContainerBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1551.Build, context));
		resourceDictionary4.AddDeferred("SliderThumbBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1552.Build, context));
		resourceDictionary4.AddDeferred("SliderThumbBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1553.Build, context));
		resourceDictionary4.AddDeferred("SliderThumbBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1554.Build, context));
		resourceDictionary4.AddDeferred("SliderThumbBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1555.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1556.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1557.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1558.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1559.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackValueFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1560.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackValueFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1561.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackValueFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1562.Build, context));
		resourceDictionary4.AddDeferred("SliderTrackValueFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1563.Build, context));
		resourceDictionary4.AddDeferred("SliderTickBarFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1564.Build, context));
		resourceDictionary4.AddDeferred("SliderTickBarFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1565.Build, context));
		resourceDictionary4.AddDeferred("SliderInlineTickBarFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1566.Build, context));
		resourceDictionary4.Add("ToggleSwitchOnStrokeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary4.Add("ToggleSwitchOuterBorderStrokeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("ToggleSwitchContentForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1567.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1568.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchContainerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1569.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchContainerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1570.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchContainerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1571.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1572.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1573.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1574.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1575.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1576.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1577.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOffDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1578.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1579.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1580.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1581.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchFillOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1582.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1583.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1584.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1585.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchStrokeOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1586.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOff", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1587.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOffPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1588.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOffPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1589.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOffDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1590.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOn", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1591.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOnPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1592.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOnPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1593.Build, context));
		resourceDictionary4.AddDeferred("ToggleSwitchKnobFillOnDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1594.Build, context));
		resourceDictionary4.Add("ToolTipContentThemeFontSize", 12.0);
		resourceDictionary4.Add("ToolTipBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("ToolTipForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1595.Build, context));
		resourceDictionary4.AddDeferred("ToolTipBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1596.Build, context));
		resourceDictionary4.AddDeferred("ToolTipBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1597.Build, context));
		resourceDictionary4.Add("ToolTipBorderThemePadding", new Thickness(8.0, 5.0, 8.0, 7.0));
		resourceDictionary4.AddDeferred("DatePickerSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1598.Build, context));
		resourceDictionary4.AddDeferred("DatePickerSpacerFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1599.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1600.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1601.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1602.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1603.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1604.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1605.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1606.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1607.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1608.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1609.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1610.Build, context));
		resourceDictionary4.AddDeferred("DatePickerButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1611.Build, context));
		resourceDictionary4.AddDeferred("DatePickerFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1612.Build, context));
		resourceDictionary4.AddDeferred("DatePickerFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1613.Build, context));
		resourceDictionary4.AddDeferred("DatePickerFlyoutPresenterSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1614.Build, context));
		resourceDictionary4.AddDeferred("DatePickerFlyoutPresenterHighlightFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1615.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1616.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1617.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1618.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1619.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1620.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1621.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1622.Build, context));
		resourceDictionary4.AddDeferred("DateTimePickerFlyoutButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1623.Build, context));
		resourceDictionary4.AddDeferred("TimePickerSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1624.Build, context));
		resourceDictionary4.AddDeferred("TimePickerSpacerFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1625.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1626.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1627.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1628.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1629.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1630.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1631.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1632.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1633.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1634.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1635.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1636.Build, context));
		resourceDictionary4.AddDeferred("TimePickerButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1637.Build, context));
		resourceDictionary4.AddDeferred("TimePickerFlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1638.Build, context));
		resourceDictionary4.AddDeferred("TimePickerFlyoutPresenterBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1639.Build, context));
		resourceDictionary4.AddDeferred("TimePickerFlyoutPresenterSpacerFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1640.Build, context));
		resourceDictionary4.AddDeferred("TimePickerFlyoutPresenterHighlightFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1641.Build, context));
		resourceDictionary4.Add("TabItemHeaderFontSize", 24.0);
		resourceDictionary4.Add("TabItemHeaderMargin", new Thickness(12.0, 0.0, 12.0, 0.0));
		resourceDictionary4.Add("TabItemMargin", new Thickness(12.0, 0.0, 12.0, 0.0));
		resourceDictionary4.Add("TabItemHeaderThemeFontWeight", FontWeight.SemiLight);
		resourceDictionary4.AddDeferred("TabControlBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1642.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundUnselected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1643.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundUnselectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1644.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundUnselectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1645.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1646.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1647.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1648.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1649.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundUnselected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1650.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundUnselectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1651.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundUnselectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1652.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1653.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1654.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1655.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1656.Build, context));
		resourceDictionary4.AddDeferred("TabItemHeaderSelectedPipeFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1657.Build, context));
		resourceDictionary4.Add("ScrollBarTrackBorderThemeThickness", 0.0);
		resourceDictionary4.AddDeferred("ScrollBarBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1658.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1659.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1660.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1661.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1662.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1663.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1664.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1665.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1666.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1667.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1668.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonArrowForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1669.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonArrowForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1670.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonArrowForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1671.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarButtonArrowForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1672.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarThumbFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1673.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarThumbFillPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1674.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarThumbFillDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1675.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarTrackFill", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1676.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarTrackFillPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1678.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarTrackStroke", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1680.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarTrackStrokePointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1681.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarThumbBackgroundColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1682.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarPanningThumbBackgroundColor", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1683.Build, context));
		resourceDictionary4.AddDeferred("ScrollBarPanningThumbBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1684.Build, context));
		resourceDictionary4.Add("ScrollBarSize", 16.0);
		resourceDictionary4.Add("ScrollBarButtonArrowIconFontSize", 8.0);
		resourceDictionary4.AddDeferred("TreeViewItemBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1686.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1687.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1688.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1689.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1690.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1691.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1692.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBackgroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1693.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1694.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1695.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1696.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1697.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1698.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1699.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1700.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemForegroundSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1701.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1702.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1703.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1704.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1705.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1706.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushSelectedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1707.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushSelectedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1708.Build, context));
		resourceDictionary4.AddDeferred("TreeViewItemBorderBrushSelectedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1709.Build, context));
		resourceDictionary4.Add("TreeViewItemBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.Add("TreeViewItemMinHeight", 32.0);
		resourceDictionary4.AddDeferred("SplitButtonBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1710.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1711.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1713.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1714.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1715.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1716.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1717.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBackgroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1718.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1719.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1720.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1721.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1722.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1723.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1724.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1725.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonForegroundCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1726.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1727.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1728.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1729.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1730.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushChecked", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1731.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushCheckedPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1732.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushCheckedPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1733.Build, context));
		resourceDictionary4.AddDeferred("SplitButtonBorderBrushCheckedDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1734.Build, context));
		resourceDictionary4.Add("SplitButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("SplitViewLightDismissOverlayBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1735.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1736.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1737.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerCalendarGlyphForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1738.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerCalendarGlyphForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1739.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerTextForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1740.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerTextForegroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1741.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerTextForegroundSelected", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1742.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1743.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBackgroundPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1744.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBackgroundPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1745.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBackgroundDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1746.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBackgroundFocused", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1747.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBorderBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1748.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBorderBrushPointerOver", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1749.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBorderBrushPressed", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1750.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerBorderBrushDisabled", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1751.Build, context));
		resourceDictionary4.AddDeferred("CalendarDatePickerLightDismissOverlayBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1752.Build, context));
		resourceDictionary4.Add("CalendarDatePickerBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary4.AddDeferred("FlyoutPresenterBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1753.Build, context));
		resourceDictionary4.AddDeferred("FlyoutBorderThemeBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1754.Build, context));
		resourceDictionary4.AddDeferred("ScrollViewerScrollBarsSeparatorBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1755.Build, context));
		resourceDictionary4.AddDeferred("RefreshVisualizerForeground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1757.Build, context));
		resourceDictionary4.AddDeferred("RefreshVisualizerBackground", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1758.Build, context));
		context.PopParent();
		themeDictionaries2.Add(dark, value2);
		resourceDictionary2.AddDeferred("ContentControlThemeFontFamily", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1759.Build, context));
		resourceDictionary2.Add("ControlContentThemeFontSize", 14.0);
		resourceDictionary2.AddDeferred("SystemControlTransparentBrush", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1760.Build, context));
		resourceDictionary2.Add("UseSystemFocusVisuals", true);
		resourceDictionary2.Add("TextControlBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary2.Add("TextControlBorderThemeThicknessFocused", new Thickness(2.0, 2.0, 2.0, 2.0));
		resourceDictionary2.Add("TextControlThemePadding", new Thickness(10.0, 6.0, 6.0, 5.0));
		resourceDictionary2.Add("IconElementThemeHeight", 20.0);
		resourceDictionary2.Add("IconElementThemeWidth", 20.0);
		resourceDictionary2.Add("ButtonPadding", new Thickness(8.0, 5.0, 8.0, 6.0));
		resourceDictionary2.Add("ControlCornerRadius", new CornerRadius(3.0, 3.0, 3.0, 3.0));
		resourceDictionary2.Add("OverlayCornerRadius", new CornerRadius(5.0, 5.0, 5.0, 5.0));
		resourceDictionary2.AddDeferred("VerticalSmallScrollThumbScaleTransform", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1761.Build, context));
		resourceDictionary2.AddDeferred("HorizontalSmallScrollThumbScaleTransform", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1762.Build, context));
		resourceDictionary2.AddDeferred("TopCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1763.Build, context));
		resourceDictionary2.AddDeferred("RightCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1764.Build, context));
		resourceDictionary2.AddDeferred("BottomCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1765.Build, context));
		resourceDictionary2.AddDeferred("LeftCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1766.Build, context));
		resourceDictionary2.Add("AutoCompleteListMaxHeight", 374.0);
		resourceDictionary2.Add("AutoCompleteListMargin", new Thickness(0.0, 2.0, 0.0, 2.0));
		resourceDictionary2.Add("AutoCompleteListBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary2.Add("AutoCompleteListPadding", new Thickness(-1.0, 0.0, -1.0, 0.0));
		resourceDictionary2.Add("TextControlThemeMinHeight", 32.0);
		resourceDictionary2.Add("TextControlThemeMinWidth", 64.0);
		resourceDictionary2.Add("FlyoutThemeMaxWidth", 456.0);
		resourceDictionary2.Add("DateTimeFlyoutButtonBorderThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary2.Add("DateTimeFlyoutBorderThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary2.Add("DateTimeFlyoutBorderPadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary2.Add("FlyoutContentThemePadding", new Thickness(12.0, 11.0, 12.0, 12.0));
		resourceDictionary2.Add("FlyoutThemeMinWidth", 96.0);
		resourceDictionary2.Add("FlyoutThemeMinHeight", 40.0);
		resourceDictionary2.Add("FlyoutThemeMaxHeight", 758.0);
		resourceDictionary2.Add("FlyoutBorderThemePadding", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary2.Add("MenuFlyoutScrollerMargin", new Thickness(0.0, 4.0, 0.0, 4.0));
		resourceDictionary2.Add("MenuBarItemPadding", new Thickness(12.0, 0.0, 12.0, 0.0));
		context.PopParent();
		fluentTheme.Resources = resources;
		fluentTheme.Add(_0021AvaloniaResources.Build_003A_002FControls_002FFluentControls_002Examl(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(context)));
		context.PopParent();
		if (fluentTheme2 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	private static void _0021XamlIlPopulateTrampoline(IServiceProvider P_0, FluentTheme P_1)
	{
		if (_0021XamlIlPopulateOverride != null)
		{
			_0021XamlIlPopulateOverride(P_1);
		}
		else
		{
			_0021XamlIlPopulate(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(P_0), P_1);
		}
	}
}
