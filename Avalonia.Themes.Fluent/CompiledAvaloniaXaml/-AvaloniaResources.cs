using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Windows.Input;
using Avalonia;
using Avalonia.Animation;
using Avalonia.Animation.Easings;
using Avalonia.Automation;
using Avalonia.Collections;
using Avalonia.Controls;
using Avalonia.Controls.Chrome;
using Avalonia.Controls.Converters;
using Avalonia.Controls.Documents;
using Avalonia.Controls.Embedding;
using Avalonia.Controls.Notifications;
using Avalonia.Controls.Presenters;
using Avalonia.Controls.Primitives;
using Avalonia.Controls.Shapes;
using Avalonia.Controls.Templates;
using Avalonia.Data;
using Avalonia.Data.Converters;
using Avalonia.Dialogs;
using Avalonia.Dialogs.Internal;
using Avalonia.Input;
using Avalonia.Input.GestureRecognizers;
using Avalonia.Layout;
using Avalonia.Markup.Xaml;
using Avalonia.Markup.Xaml.MarkupExtensions;
using Avalonia.Markup.Xaml.MarkupExtensions.CompiledBindings;
using Avalonia.Markup.Xaml.Templates;
using Avalonia.Markup.Xaml.XamlIl.Runtime;
using Avalonia.Media;
using Avalonia.Media.Immutable;
using Avalonia.Styling;
using Avalonia.Themes.Fluent;

namespace CompiledAvaloniaXaml;

[EditorBrowsable(EditorBrowsableState.Never)]
public class _0021AvaloniaResources
{
	public class NamespaceInfo_003A_002FAccents_002FBaseColorsPalette_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Fluent", "Avalonia.Themes.Fluent")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FAccents_002FBaseColorsPalette_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FAccents_002FBaseColorsPalette_002Examl();
		}
	}

	public class NamespaceInfo_003A_002FControls_002FFluentControls_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Fluent", "Avalonia.Themes.Fluent")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FControls_002FFluentControls_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FControls_002FFluentControls_002Examl();
		}
	}

	private class XamlClosure_1
	{
		private class XamlClosure_2
		{
			private class DynamicSetters_3
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DynamicSetters_3.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Visual.RenderTransformProperty;
			setter17.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = new Setter();
			setter18.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			TransformOperationsTransition transformOperationsTransition = new TransformOperationsTransition();
			transformOperationsTransition.Property = Visual.RenderTransformProperty;
			transformOperationsTransition.Duration = TimeSpan.FromTicks(750000L);
			transitions.Add(transformOperationsTransition);
			setter18.Value = transitions;
			controlTheme.Add(setter18);
			Setter setter19 = new Setter();
			setter19.Property = TemplatedControl.TemplateProperty;
			setter19.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_2.Build, context)
			};
			controlTheme.Add(setter19);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			style3.Add(setter20);
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value8;
			context.PopParent();
			style3.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value9;
			context.PopParent();
			style3.Add(setter24);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = Visual.RenderTransformProperty;
			setter27.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style5.Add(setter26);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value10;
			context.PopParent();
			style7.Add(setter28);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value11;
			context.PopParent();
			style7.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value12;
			context.PopParent();
			style7.Add(setter32);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value13;
			context.PopParent();
			style9.Add(setter34);
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value14;
			context.PopParent();
			style9.Add(setter36);
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value15;
			context.PopParent();
			style9.Add(setter38);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class("accent");
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("AccentButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value16;
			context.PopParent();
			style13.Add(setter40);
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("AccentButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value17;
			context.PopParent();
			style13.Add(setter42);
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("AccentButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value18;
			context.PopParent();
			style13.Add(setter44);
			context.PopParent();
			style11.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("AccentButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value19;
			context.PopParent();
			style15.Add(setter46);
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("AccentButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value20;
			context.PopParent();
			style15.Add(setter48);
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("AccentButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value21;
			context.PopParent();
			style15.Add(setter50);
			context.PopParent();
			style11.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter52 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter53 = setter;
			setter53.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("AccentButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value22;
			context.PopParent();
			style17.Add(setter52);
			Setter setter54 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter55 = setter;
			setter55.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("AccentButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value23;
			context.PopParent();
			style17.Add(setter54);
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("AccentButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value24;
			context.PopParent();
			style17.Add(setter56);
			context.PopParent();
			style11.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter58 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter59 = setter;
			setter59.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("AccentButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter59.Value = value25;
			context.PopParent();
			style19.Add(setter58);
			Setter setter60 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter61 = setter;
			setter61.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("AccentButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter61.Value = value26;
			context.PopParent();
			style19.Add(setter60);
			Setter setter62 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter63 = setter;
			setter63.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("AccentButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter63.Value = value27;
			context.PopParent();
			style19.Add(setter62);
			context.PopParent();
			style11.Add(style18);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_4
	{
		private class XamlClosure_5
		{
			private class DynamicSetters_6
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "RootBorder";
				service = border;
				context.AvaloniaNameScope.Register("RootBorder", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(20.0, GridUnitType.Pixel)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid5.ColumnDefinitions = columnDefinitions;
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.SetValue(Layoutable.HeightProperty, 32.0, BindingPriority.Template);
				grid9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				Controls children2 = grid9.Children;
				Ellipse ellipse;
				Ellipse ellipse2 = (ellipse = new Ellipse());
				((ISupportInitialize)ellipse2).BeginInit();
				children2.Add(ellipse2);
				Ellipse ellipse3;
				Ellipse ellipse4 = (ellipse3 = ellipse);
				context.PushParent(ellipse3);
				Ellipse ellipse5 = ellipse3;
				ellipse5.Name = "OuterEllipse";
				service = ellipse5;
				context.AvaloniaNameScope.Register("OuterEllipse", service);
				ellipse5.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				ellipse5.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RadioButtonOuterEllipseFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse5.Bind(fillProperty, binding);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RadioButtonOuterEllipseStroke");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse5.Bind(strokeProperty, binding2);
				StyledProperty<double> strokeThicknessProperty = Shape.StrokeThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("RadioButtonBorderThemeThickness");
				context.ProvideTargetProperty = Shape.StrokeThicknessProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse5.Bind(strokeThicknessProperty, binding3);
				ellipse5.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse4).EndInit();
				Controls children3 = grid9.Children;
				Ellipse ellipse6;
				Ellipse ellipse7 = (ellipse6 = new Ellipse());
				((ISupportInitialize)ellipse7).BeginInit();
				children3.Add(ellipse7);
				Ellipse ellipse8 = (ellipse3 = ellipse6);
				context.PushParent(ellipse3);
				Ellipse ellipse9 = ellipse3;
				ellipse9.Name = "CheckOuterEllipse";
				service = ellipse9;
				context.AvaloniaNameScope.Register("CheckOuterEllipse", service);
				ellipse9.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				ellipse9.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse9.Bind(fillProperty2, binding4);
				ellipse9.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedStroke");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse9.Bind(strokeProperty2, binding5);
				StyledProperty<double> strokeThicknessProperty2 = Shape.StrokeThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("RadioButtonBorderThemeThickness");
				context.ProvideTargetProperty = Shape.StrokeThicknessProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse9.Bind(strokeThicknessProperty2, binding6);
				ellipse9.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse8).EndInit();
				Controls children4 = grid9.Children;
				Ellipse ellipse10;
				Ellipse ellipse11 = (ellipse10 = new Ellipse());
				((ISupportInitialize)ellipse11).BeginInit();
				children4.Add(ellipse11);
				Ellipse ellipse12 = (ellipse3 = ellipse10);
				context.PushParent(ellipse3);
				Ellipse ellipse13 = ellipse3;
				ellipse13.Name = "CheckGlyph";
				service = ellipse13;
				context.AvaloniaNameScope.Register("CheckGlyph", service);
				ellipse13.SetValue(Layoutable.WidthProperty, 8.0, BindingPriority.Template);
				ellipse13.SetValue(Layoutable.HeightProperty, 8.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("RadioButtonCheckGlyphFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse13.Bind(fillProperty3, binding7);
				ellipse13.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty3 = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("RadioButtonCheckGlyphStroke");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse13.Bind(strokeProperty3, binding8);
				ellipse13.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children5 = grid5.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children5.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_6.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RadioButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RadioButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RadioButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("RadioButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.PaddingProperty;
			setter10.Value = new Thickness(8.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.HorizontalAlignmentProperty;
			setter11.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.VerticalAlignmentProperty;
			setter12.Value = VerticalAlignment.Center;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter13.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = ContentControl.VerticalContentAlignmentProperty;
			setter14.Value = VerticalAlignment.Center;
			controlTheme.Add(setter14);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			controlTheme.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(RadioButton);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_5.Build, context);
			context.PopParent();
			setter18.Value = value6;
			context.PopParent();
			controlTheme.Add(setter17);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("RadioButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value7;
			context.PopParent();
			style3.Add(setter19);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("RadioButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value8;
			context.PopParent();
			style5.Add(setter21);
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("RadioButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value9;
			context.PopParent();
			style5.Add(setter23);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("OuterEllipse");
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("RadioButtonOuterEllipseStrokePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value10;
			context.PopParent();
			style7.Add(setter25);
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("RadioButtonOuterEllipseFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value11;
			context.PopParent();
			style7.Add(setter27);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckOuterEllipse");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedStrokePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value12;
			context.PopParent();
			style9.Add(setter29);
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value13;
			context.PopParent();
			style9.Add(setter31);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckGlyph");
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("RadioButtonCheckGlyphStrokePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value14;
			context.PopParent();
			style11.Add(setter33);
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("RadioButtonCheckGlyphFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value15;
			context.PopParent();
			style11.Add(setter35);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("RadioButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value16;
			context.PopParent();
			style13.Add(setter37);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("RadioButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value17;
			context.PopParent();
			style15.Add(setter39);
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("RadioButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value18;
			context.PopParent();
			style15.Add(setter41);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("OuterEllipse");
			Setter setter43 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter44 = setter;
			setter44.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("RadioButtonOuterEllipseStrokePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter44.Value = value19;
			context.PopParent();
			style17.Add(setter43);
			Setter setter45 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter46 = setter;
			setter46.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("RadioButtonOuterEllipseFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter46.Value = value20;
			context.PopParent();
			style17.Add(setter45);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckOuterEllipse");
			Setter setter47 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter48 = setter;
			setter48.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedStrokePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter48.Value = value21;
			context.PopParent();
			style19.Add(setter47);
			Setter setter49 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter50 = setter;
			setter50.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter50.Value = value22;
			context.PopParent();
			style19.Add(setter49);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckGlyph");
			Setter setter51 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter52 = setter;
			setter52.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("RadioButtonCheckGlyphStrokePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value23;
			context.PopParent();
			style21.Add(setter51);
			Setter setter53 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter54 = setter;
			setter54.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("RadioButtonCheckGlyphFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter54.Value = value24;
			context.PopParent();
			style21.Add(setter53);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter55 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter56 = setter;
			setter56.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("RadioButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter56.Value = value25;
			context.PopParent();
			style23.Add(setter55);
			context.PopParent();
			controlTheme.Add(style22);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter57 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter58 = setter;
			setter58.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("RadioButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter58.Value = value26;
			context.PopParent();
			style25.Add(setter57);
			Setter setter59 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter60 = setter;
			setter60.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("RadioButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter60.Value = value27;
			context.PopParent();
			style25.Add(setter59);
			context.PopParent();
			controlTheme.Add(style24);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("OuterEllipse");
			Setter setter61 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter62 = setter;
			setter62.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("RadioButtonOuterEllipseStrokeDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value28 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter62.Value = value28;
			context.PopParent();
			style27.Add(setter61);
			Setter setter63 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter64 = setter;
			setter64.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension28 = new DynamicResourceExtension("RadioButtonOuterEllipseFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value29 = dynamicResourceExtension28.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter64.Value = value29;
			context.PopParent();
			style27.Add(setter63);
			context.PopParent();
			controlTheme.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckOuterEllipse");
			Setter setter65 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter66 = setter;
			setter66.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension29 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedStrokeDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value30 = dynamicResourceExtension29.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter66.Value = value30;
			context.PopParent();
			style29.Add(setter65);
			Setter setter67 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter68 = setter;
			setter68.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension30 = new DynamicResourceExtension("RadioButtonOuterEllipseCheckedFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value31 = dynamicResourceExtension30.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter68.Value = value31;
			context.PopParent();
			style29.Add(setter67);
			context.PopParent();
			controlTheme.Add(style28);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckGlyph");
			Setter setter69 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter70 = setter;
			setter70.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension31 = new DynamicResourceExtension("RadioButtonCheckGlyphFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value32 = dynamicResourceExtension31.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter70.Value = value32;
			context.PopParent();
			style31.Add(setter69);
			Setter setter71 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter72 = setter;
			setter72.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension32 = new DynamicResourceExtension("RadioButtonCheckGlyphStrokeDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value33 = dynamicResourceExtension32.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter72.Value = value33;
			context.PopParent();
			style31.Add(setter71);
			context.PopParent();
			controlTheme.Add(style30);
			Style style32 = new Style();
			style32.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckGlyph");
			Setter setter73 = new Setter();
			setter73.Property = Visual.OpacityProperty;
			setter73.Value = 1.0;
			style32.Add(setter73);
			controlTheme.Add(style32);
			Style style33 = new Style();
			style33.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("OuterEllipse");
			Setter setter74 = new Setter();
			setter74.Property = Visual.OpacityProperty;
			setter74.Value = 0.0;
			style33.Add(setter74);
			controlTheme.Add(style33);
			Style style34 = new Style();
			style34.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("CheckOuterEllipse");
			Setter setter75 = new Setter();
			setter75.Property = Visual.OpacityProperty;
			setter75.Value = 1.0;
			style34.Add(setter75);
			controlTheme.Add(style34);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_7
	{
		private class XamlClosure_8
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "PART_LayoutRoot";
				service = grid;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				Controls children = grid.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children.Add(textBox2);
				textBox.Name = "PART_TextBox";
				service = textBox;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox.Bind(TextBox.WatermarkProperty, new TemplateBinding(AutoCompleteBox.WatermarkProperty).ProvideValue());
				textBox.Bind(Layoutable.WidthProperty, new TemplateBinding(Layoutable.WidthProperty).ProvideValue());
				textBox.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				textBox.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				textBox.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBox.Bind(TemplatedControl.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBox.Bind(TemplatedControl.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBox.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				textBox.Bind(DataValidationErrors.ErrorsProperty, new TemplateBinding(DataValidationErrors.ErrorsProperty).ProvideValue());
				((ISupportInitialize)textBox).EndInit();
				Controls children2 = grid.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children2.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EWidth_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(minWidthProperty, binding);
				popup3.Bind(Layoutable.MaxHeightProperty, new TemplateBinding(AutoCompleteBox.MaxDropDownHeightProperty).ProvideValue());
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				popup3.Child = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "PART_SuggestionsContainer";
				service = border3;
				context.AvaloniaNameScope.Register("PART_SuggestionsContainer", service);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("AutoCompleteListMargin");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(paddingProperty, binding2);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("AutoCompleteListBorderThemeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding3 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(borderThicknessProperty, binding3);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("AutoCompleteBoxSuggestionsListBorderBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding4 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(borderBrushProperty, binding4);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("AutoCompleteBoxSuggestionsListBackground");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding5 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(backgroundProperty, binding5);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("OverlayCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding6 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(cornerRadiusProperty, binding6);
				ListBox listBox;
				ListBox listBox2 = (listBox = new ListBox());
				((ISupportInitialize)listBox2).BeginInit();
				border3.Child = listBox2;
				ListBox listBox3;
				ListBox listBox4 = (listBox3 = listBox);
				context.PushParent(listBox3);
				listBox3.Name = "PART_SelectingItemsControl";
				service = listBox3;
				context.AvaloniaNameScope.Register("PART_SelectingItemsControl", service);
				listBox3.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				listBox3.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				listBox3.Bind(ItemsControl.ItemTemplateProperty, new TemplateBinding(AutoCompleteBox.ItemTemplateProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("AutoCompleteListPadding");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding7 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox3.Bind(marginProperty, binding7);
				context.PopParent();
				((ISupportInitialize)listBox4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(AutoCompleteBox);
			Setter setter = new Setter();
			setter.Property = Layoutable.VerticalAlignmentProperty;
			setter.Value = VerticalAlignment.Top;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TextControlBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TextControlBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TextControlThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			controlTheme.Add(setter15);
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = AutoCompleteBox.MaxDropDownHeightProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("AutoCompleteListMaxHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter20 = setter2;
			setter20.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_8.Build, context);
			context.PopParent();
			setter20.Value = value9;
			context.PopParent();
			controlTheme.Add(setter19);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_9
	{
		private class XamlClosure_10
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Root";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Root", service);
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				Controls children = ((Panel)intermediateRoot).Children;
				CalendarItem calendarItem;
				CalendarItem calendarItem2 = (calendarItem = new CalendarItem());
				((ISupportInitialize)calendarItem2).BeginInit();
				children.Add(calendarItem2);
				calendarItem.Name = "PART_CalendarItem";
				service = calendarItem;
				context.AvaloniaNameScope.Register("PART_CalendarItem", service);
				calendarItem.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				calendarItem.Bind(CalendarItem.HeaderBackgroundProperty, new TemplateBinding(Avalonia.Controls.Calendar.HeaderBackgroundProperty).ProvideValue());
				((ISupportInitialize)calendarItem).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Avalonia.Controls.Calendar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarViewBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.BorderThicknessProperty;
			setter8.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = Layoutable.HorizontalAlignmentProperty;
			setter9.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.VerticalAlignmentProperty;
			setter10.Value = VerticalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = TemplatedControl.TemplateProperty;
			setter11.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_10.Build, context)
			};
			controlTheme.Add(setter11);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_11
	{
		private class XamlClosure_12
		{
			private class DynamicSetters_13
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "Root";
				service = border;
				context.AvaloniaNameScope.Register("Root", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.SetValue(Border.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				border.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				border.Child = contentPresenter2;
				contentPresenter.Name = "Content";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("Content", service);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_13.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Name = "Border";
				service = border3;
				context.AvaloniaNameScope.Register("Border", service);
				border3.SetValue(Border.BorderThicknessProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((ISupportInitialize)border3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarButton);
			Setter setter = new Setter();
			setter.Property = Button.ClickModeProperty;
			setter.Value = ClickMode.Release;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 40.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MinHeightProperty;
			setter3.Value = 40.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.MarginProperty;
			setter4.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.PaddingProperty;
			setter5.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter5);
			Setter setter6;
			Setter setter7 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter8 = setter6;
			setter8.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewCalendarItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter10 = setter6;
			setter10.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewCalendarItemRevealBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter12 = setter6;
			setter12.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarViewCalendarItemRevealBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			setter13.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = TemplatedControl.FontSizeProperty;
			setter14.Value = 20.0;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Visual.ClipToBoundsProperty;
			setter15.Value = false;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter16.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = ContentControl.VerticalContentAlignmentProperty;
			setter17.Value = VerticalAlignment.Center;
			controlTheme.Add(setter17);
			Setter setter18 = new Setter();
			setter18.Property = TemplatedControl.TemplateProperty;
			setter18.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_12.Build, context)
			};
			controlTheme.Add(setter18);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter19 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter20 = setter6;
			setter20.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CalendarViewHoverBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value4;
			context.PopParent();
			style3.Add(setter19);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter21 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter22 = setter6;
			setter22.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SystemAccentColorDark2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value5;
			context.PopParent();
			style5.Add(setter21);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter23 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter24 = setter6;
			setter24.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value6;
			context.PopParent();
			style9.Add(setter23);
			context.PopParent();
			style7.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Border");
			Setter setter25 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter26 = setter6;
			setter26.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("CalendarViewSelectedBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value7;
			context.PopParent();
			style11.Add(setter25);
			context.PopParent();
			style7.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("Content");
			Setter setter27 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter28 = setter6;
			setter28.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("CalendarViewTodayForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value8;
			context.PopParent();
			style13.Add(setter27);
			Setter setter29 = new Setter();
			setter29.Property = ContentPresenter.FontWeightProperty;
			setter29.Value = FontWeight.DemiBold;
			style13.Add(setter29);
			context.PopParent();
			style7.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Border");
			Setter setter30 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter31 = setter6;
			setter31.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value9;
			context.PopParent();
			style17.Add(setter30);
			context.PopParent();
			style15.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter32 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter33 = setter6;
			setter33.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value10;
			context.PopParent();
			style19.Add(setter32);
			context.PopParent();
			style15.Add(style18);
			context.PopParent();
			style7.Add(style14);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Border");
			Setter setter34 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter35 = setter6;
			setter35.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SystemAccentColorDark2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value11;
			context.PopParent();
			style23.Add(setter34);
			context.PopParent();
			style21.Add(style22);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter36 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter37 = setter6;
			setter37.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value12;
			context.PopParent();
			style25.Add(setter36);
			context.PopParent();
			style21.Add(style24);
			context.PopParent();
			style7.Add(style20);
			context.PopParent();
			controlTheme.Add(style6);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":inactive");
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter38 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter39 = setter6;
			setter39.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("CalendarViewOutOfScopeBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value13;
			context.PopParent();
			style29.Add(setter38);
			context.PopParent();
			style27.Add(style28);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter40 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter41 = setter6;
			setter41.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("CalendarViewOutOfScopeForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value14;
			context.PopParent();
			style31.Add(setter40);
			context.PopParent();
			style27.Add(style30);
			context.PopParent();
			controlTheme.Add(style26);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Class(":blackout").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter42 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter43 = setter6;
			setter43.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("CalendarViewBlackoutForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value15;
			context.PopParent();
			style33.Add(setter42);
			context.PopParent();
			controlTheme.Add(style32);
			Style style34 = (style = new Style());
			context.PushParent(style);
			Style style35 = style;
			style35.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter44 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter45 = setter6;
			setter45.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("CalendarViewWeekDayForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value16;
			context.PopParent();
			style35.Add(setter44);
			context.PopParent();
			controlTheme.Add(style34);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_14
	{
		private class XamlClosure_15
		{
			private class DynamicSetters_16
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "Root";
				service = border;
				context.AvaloniaNameScope.Register("Root", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.SetValue(Border.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				border.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				border.Child = contentControl2;
				contentControl.Name = "Content";
				service = contentControl;
				context.AvaloniaNameScope.Register("Content", service);
				contentControl.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_16.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentControl.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentControl.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentControl.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentControl.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentControl).EndInit();
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Name = "Border";
				service = border3;
				context.AvaloniaNameScope.Register("Border", service);
				border3.SetValue(Border.BorderThicknessProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((ISupportInitialize)border3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarDayButton);
			Setter setter = new Setter();
			setter.Property = Button.ClickModeProperty;
			setter.Value = ClickMode.Release;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 40.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MinHeightProperty;
			setter3.Value = 40.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.MarginProperty;
			setter4.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.PaddingProperty;
			setter5.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter5);
			Setter setter6;
			Setter setter7 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter8 = setter6;
			setter8.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewCalendarItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter10 = setter6;
			setter10.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewCalendarItemRevealBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter12 = setter6;
			setter12.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarViewCalendarItemRevealBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			setter13.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = TemplatedControl.FontSizeProperty;
			setter14.Value = 20.0;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Visual.ClipToBoundsProperty;
			setter15.Value = false;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter16.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = ContentControl.VerticalContentAlignmentProperty;
			setter17.Value = VerticalAlignment.Center;
			controlTheme.Add(setter17);
			Setter setter18 = new Setter();
			setter18.Property = TemplatedControl.TemplateProperty;
			setter18.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_15.Build, context)
			};
			controlTheme.Add(setter18);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter19 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter20 = setter6;
			setter20.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CalendarViewHoverBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value4;
			context.PopParent();
			style3.Add(setter19);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter21 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter22 = setter6;
			setter22.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("CalendarViewPressedBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value5;
			context.PopParent();
			style5.Add(setter21);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Border");
			Setter setter23 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter24 = setter6;
			setter24.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("CalendarViewSelectedBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value6;
			context.PopParent();
			style9.Add(setter23);
			context.PopParent();
			style7.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter25 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter26 = setter6;
			setter26.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("CalendarViewSelectedHoverBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value7;
			context.PopParent();
			style11.Add(setter25);
			context.PopParent();
			style7.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter27 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter28 = setter6;
			setter28.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("CalendarViewSelectedPressedBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value8;
			context.PopParent();
			style13.Add(setter27);
			context.PopParent();
			style7.Add(style12);
			context.PopParent();
			controlTheme.Add(style6);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":today");
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter29 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter30 = setter6;
			setter30.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value9;
			context.PopParent();
			style17.Add(setter29);
			context.PopParent();
			style15.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter31 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter32 = setter6;
			setter32.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SystemAccentColorDark1");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value10;
			context.PopParent();
			style19.Add(setter31);
			context.PopParent();
			style15.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Border");
			Setter setter33 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter34 = setter6;
			setter34.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SystemAccentColorDark2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value11;
			context.PopParent();
			style21.Add(setter33);
			context.PopParent();
			style15.Add(style20);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter35 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter36 = setter6;
			setter36.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("CalendarViewTodayForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value12;
			context.PopParent();
			style23.Add(setter35);
			Setter setter37 = new Setter();
			setter37.Property = TemplatedControl.FontWeightProperty;
			setter37.Value = FontWeight.DemiBold;
			style23.Add(setter37);
			context.PopParent();
			style15.Add(style22);
			context.PopParent();
			controlTheme.Add(style14);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":inactive");
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Root");
			Setter setter38 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter39 = setter6;
			setter39.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("CalendarViewOutOfScopeBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value13;
			context.PopParent();
			style27.Add(setter38);
			context.PopParent();
			style25.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter40 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter41 = setter6;
			setter41.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("CalendarViewOutOfScopeForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value14;
			context.PopParent();
			style29.Add(setter40);
			context.PopParent();
			style25.Add(style28);
			context.PopParent();
			controlTheme.Add(style24);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Class(":blackout").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter42 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter43 = setter6;
			setter43.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("CalendarViewBlackoutForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value15;
			context.PopParent();
			style31.Add(setter42);
			context.PopParent();
			controlTheme.Add(style30);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter44 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter45 = setter6;
			setter45.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("CalendarViewWeekDayForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value16;
			context.PopParent();
			style33.Add(setter44);
			context.PopParent();
			controlTheme.Add(style32);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_17
	{
		private class XamlClosure_18
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ScrollViewer();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ScrollViewer";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue((StyledProperty<ScrollBarVisibility>)ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue((StyledProperty<ScrollBarVisibility>)ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((ContentControl)intermediateRoot).Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Carousel);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_18.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_19
	{
		private class XamlClosure_20
		{
			private class DynamicSetters_21
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Grid grid2 = grid;
				grid2.Name = "RootGrid";
				service = grid2;
				context.AvaloniaNameScope.Register("RootGrid", service);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(20.0, GridUnitType.Pixel)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid2.ColumnDefinitions = columnDefinitions;
				Controls children = grid2.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_Border";
				service = border;
				context.AvaloniaNameScope.Register("PART_Border", service);
				border.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid2.Children;
				Grid grid3;
				Grid grid4 = (grid3 = new Grid());
				((ISupportInitialize)grid4).BeginInit();
				children2.Add(grid4);
				Grid grid5 = (grid = grid3);
				context.PushParent(grid);
				Grid grid6 = grid;
				grid6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				grid6.SetValue(Layoutable.HeightProperty, 32.0, BindingPriority.Template);
				Controls children3 = grid6.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children3.Add(border4);
				Border border5;
				Border border6 = (border5 = border3);
				context.PushParent(border5);
				border5.Name = "NormalRectangle";
				service = border5;
				context.AvaloniaNameScope.Register("NormalRectangle", service);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeUnchecked");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderBrushProperty, binding);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillUnchecked");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(backgroundProperty, binding2);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CheckBoxBorderThemeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderThicknessProperty, binding3);
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border5.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				border5.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				border5.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border6).EndInit();
				Controls children4 = grid6.Children;
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				children4.Add(viewbox2);
				Viewbox viewbox3;
				Viewbox viewbox4 = (viewbox3 = viewbox);
				context.PushParent(viewbox3);
				viewbox3.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				viewbox3.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children5 = panel3.Children;
				Panel panel5;
				Panel panel6 = (panel5 = new Panel());
				((ISupportInitialize)panel6).BeginInit();
				children5.Add(panel6);
				panel5.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
				panel5.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
				((ISupportInitialize)panel5).EndInit();
				Controls children6 = panel3.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children6.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "CheckGlyph";
				service = path3;
				context.AvaloniaNameScope.Register("CheckGlyph", service);
				path3.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundUnchecked");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding4);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Visual.FlowDirectionProperty, FlowDirection.LeftToRight, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)viewbox4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid5).EndInit();
				Controls children7 = grid2.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children7.Add(contentPresenter2);
				contentPresenter.Name = "ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_21.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.TextWrappingProperty, TextWrapping.Wrap, BindingPriority.Template);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CheckBox);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(8.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.HorizontalAlignmentProperty;
			setter2.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.VerticalAlignmentProperty;
			setter3.Value = VerticalAlignment.Center;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter4.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ContentControl.VerticalContentAlignmentProperty;
			setter5.Value = VerticalAlignment.Center;
			controlTheme.Add(setter5);
			Setter setter6;
			Setter setter7 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter8 = setter6;
			setter8.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter10 = setter6;
			setter10.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.MinHeightProperty;
			setter11.Value = 32.0;
			controlTheme.Add(setter11);
			Setter setter12 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter13 = setter6;
			setter13.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CheckBoxForegroundUnchecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value3;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter15 = setter6;
			setter15.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CheckBoxBackgroundUnchecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value4;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter17 = setter6;
			setter17.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("CheckBoxBorderBrushUnchecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value5;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter19 = setter6;
			setter19.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_20.Build, context);
			context.PopParent();
			setter19.Value = value6;
			context.PopParent();
			controlTheme.Add(setter18);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter20 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter21 = setter6;
			setter21.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("CheckBoxForegroundUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			style5.Add(setter20);
			context.PopParent();
			style3.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter22 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter23 = setter6;
			setter23.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("CheckBoxBackgroundUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value8;
			context.PopParent();
			style7.Add(setter22);
			Setter setter24 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter25 = setter6;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("CheckBoxBorderBrushUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value9;
			context.PopParent();
			style7.Add(setter24);
			context.PopParent();
			style3.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter26 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter27 = setter6;
			setter27.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value10;
			context.PopParent();
			style9.Add(setter26);
			Setter setter28 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter29 = setter6;
			setter29.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value11;
			context.PopParent();
			style9.Add(setter28);
			context.PopParent();
			style3.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter30 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter31 = setter6;
			setter31.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundUncheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value12;
			context.PopParent();
			style11.Add(setter30);
			context.PopParent();
			style3.Add(style10);
			context.PopParent();
			controlTheme.Add(style2);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter32 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter33 = setter6;
			setter33.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("CheckBoxForegroundUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value13;
			context.PopParent();
			style15.Add(setter32);
			context.PopParent();
			style13.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter34 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter35 = setter6;
			setter35.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("CheckBoxBackgroundUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value14;
			context.PopParent();
			style17.Add(setter34);
			Setter setter36 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter37 = setter6;
			setter37.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("CheckBoxBorderBrushUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value15;
			context.PopParent();
			style17.Add(setter36);
			context.PopParent();
			style13.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter38 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter39 = setter6;
			setter39.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value16;
			context.PopParent();
			style19.Add(setter38);
			Setter setter40 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter41 = setter6;
			setter41.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value17;
			context.PopParent();
			style19.Add(setter40);
			context.PopParent();
			style13.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter42 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter43 = setter6;
			setter43.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundUncheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value18;
			context.PopParent();
			style21.Add(setter42);
			context.PopParent();
			style13.Add(style20);
			context.PopParent();
			controlTheme.Add(style12);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter44 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter45 = setter6;
			setter45.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("CheckBoxForegroundUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value19;
			context.PopParent();
			style25.Add(setter44);
			context.PopParent();
			style23.Add(style24);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter46 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter47 = setter6;
			setter47.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("CheckBoxBackgroundUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value20;
			context.PopParent();
			style27.Add(setter46);
			Setter setter48 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter49 = setter6;
			setter49.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("CheckBoxBorderBrushUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value21;
			context.PopParent();
			style27.Add(setter48);
			context.PopParent();
			style23.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter50 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter51 = setter6;
			setter51.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value22;
			context.PopParent();
			style29.Add(setter50);
			Setter setter52 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter53 = setter6;
			setter53.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value23;
			context.PopParent();
			style29.Add(setter52);
			context.PopParent();
			style23.Add(style28);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter54 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter55 = setter6;
			setter55.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundUncheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value24;
			context.PopParent();
			style31.Add(setter54);
			context.PopParent();
			style23.Add(style30);
			context.PopParent();
			controlTheme.Add(style22);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Class(":checked");
			Setter setter56 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter57 = setter6;
			setter57.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("CheckBoxForegroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value25;
			context.PopParent();
			style33.Add(setter56);
			Setter setter58 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter59 = setter6;
			setter59.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("CheckBoxBackgroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter59.Value = value26;
			context.PopParent();
			style33.Add(setter58);
			Setter setter60 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter61 = setter6;
			setter61.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("CheckBoxBorderBrushChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter61.Value = value27;
			context.PopParent();
			style33.Add(setter60);
			Style style34 = (style = new Style());
			context.PushParent(style);
			Style style35 = style;
			style35.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter62 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter63 = setter6;
			setter63.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value28 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter63.Value = value28;
			context.PopParent();
			style35.Add(setter62);
			Setter setter64 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter65 = setter6;
			setter65.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension28 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value29 = dynamicResourceExtension28.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter65.Value = value29;
			context.PopParent();
			style35.Add(setter64);
			context.PopParent();
			style33.Add(style34);
			Style style36 = (style = new Style());
			context.PushParent(style);
			Style style37 = style;
			style37.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter66 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter67 = setter6;
			setter67.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension29 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value30 = dynamicResourceExtension29.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter67.Value = value30;
			context.PopParent();
			style37.Add(setter66);
			Setter setter68 = new Setter();
			setter68.Property = Path.DataProperty;
			setter68.Value = Geometry.Parse("M1507 31L438 1101L-119 543L-29 453L438 919L1417 -59L1507 31Z");
			style37.Add(setter68);
			Setter setter69 = new Setter();
			setter69.Property = Layoutable.WidthProperty;
			setter69.Value = 9.0;
			style37.Add(setter69);
			Setter setter70 = new Setter();
			setter70.Property = Visual.OpacityProperty;
			setter70.Value = 1.0;
			style37.Add(setter70);
			context.PopParent();
			style33.Add(style36);
			Style style38 = (style = new Style());
			context.PushParent(style);
			Style style39 = style;
			style39.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Style style40 = (style = new Style());
			context.PushParent(style);
			Style style41 = style;
			style41.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter71 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter72 = setter6;
			setter72.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension30 = new DynamicResourceExtension("CheckBoxForegroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value31 = dynamicResourceExtension30.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter72.Value = value31;
			context.PopParent();
			style41.Add(setter71);
			context.PopParent();
			style39.Add(style40);
			Style style42 = (style = new Style());
			context.PushParent(style);
			Style style43 = style;
			style43.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter73 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter74 = setter6;
			setter74.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension31 = new DynamicResourceExtension("CheckBoxBackgroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value32 = dynamicResourceExtension31.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter74.Value = value32;
			context.PopParent();
			style43.Add(setter73);
			Setter setter75 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter76 = setter6;
			setter76.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension32 = new DynamicResourceExtension("CheckBoxBorderBrushCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value33 = dynamicResourceExtension32.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter76.Value = value33;
			context.PopParent();
			style43.Add(setter75);
			context.PopParent();
			style39.Add(style42);
			Style style44 = (style = new Style());
			context.PushParent(style);
			Style style45 = style;
			style45.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter77 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter78 = setter6;
			setter78.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension33 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value34 = dynamicResourceExtension33.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter78.Value = value34;
			context.PopParent();
			style45.Add(setter77);
			Setter setter79 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter80 = setter6;
			setter80.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension34 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value35 = dynamicResourceExtension34.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter80.Value = value35;
			context.PopParent();
			style45.Add(setter79);
			context.PopParent();
			style39.Add(style44);
			Style style46 = (style = new Style());
			context.PushParent(style);
			Style style47 = style;
			style47.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter81 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter82 = setter6;
			setter82.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension35 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value36 = dynamicResourceExtension35.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter82.Value = value36;
			context.PopParent();
			style47.Add(setter81);
			context.PopParent();
			style39.Add(style46);
			context.PopParent();
			style33.Add(style38);
			Style style48 = (style = new Style());
			context.PushParent(style);
			Style style49 = style;
			style49.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Style style50 = (style = new Style());
			context.PushParent(style);
			Style style51 = style;
			style51.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter83 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter84 = setter6;
			setter84.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension36 = new DynamicResourceExtension("CheckBoxForegroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value37 = dynamicResourceExtension36.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter84.Value = value37;
			context.PopParent();
			style51.Add(setter83);
			context.PopParent();
			style49.Add(style50);
			Style style52 = (style = new Style());
			context.PushParent(style);
			Style style53 = style;
			style53.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter85 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter86 = setter6;
			setter86.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension37 = new DynamicResourceExtension("CheckBoxBackgroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value38 = dynamicResourceExtension37.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter86.Value = value38;
			context.PopParent();
			style53.Add(setter85);
			Setter setter87 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter88 = setter6;
			setter88.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension38 = new DynamicResourceExtension("CheckBoxBorderBrushCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value39 = dynamicResourceExtension38.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter88.Value = value39;
			context.PopParent();
			style53.Add(setter87);
			context.PopParent();
			style49.Add(style52);
			Style style54 = (style = new Style());
			context.PushParent(style);
			Style style55 = style;
			style55.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter89 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter90 = setter6;
			setter90.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension39 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value40 = dynamicResourceExtension39.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter90.Value = value40;
			context.PopParent();
			style55.Add(setter89);
			Setter setter91 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter92 = setter6;
			setter92.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension40 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value41 = dynamicResourceExtension40.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter92.Value = value41;
			context.PopParent();
			style55.Add(setter91);
			context.PopParent();
			style49.Add(style54);
			Style style56 = (style = new Style());
			context.PushParent(style);
			Style style57 = style;
			style57.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter93 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter94 = setter6;
			setter94.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension41 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value42 = dynamicResourceExtension41.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter94.Value = value42;
			context.PopParent();
			style57.Add(setter93);
			context.PopParent();
			style49.Add(style56);
			context.PopParent();
			style33.Add(style48);
			Style style58 = (style = new Style());
			context.PushParent(style);
			Style style59 = style;
			style59.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style60 = (style = new Style());
			context.PushParent(style);
			Style style61 = style;
			style61.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter95 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter96 = setter6;
			setter96.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension42 = new DynamicResourceExtension("CheckBoxForegroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value43 = dynamicResourceExtension42.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter96.Value = value43;
			context.PopParent();
			style61.Add(setter95);
			context.PopParent();
			style59.Add(style60);
			Style style62 = (style = new Style());
			context.PushParent(style);
			Style style63 = style;
			style63.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter97 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter98 = setter6;
			setter98.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension43 = new DynamicResourceExtension("CheckBoxBackgroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value44 = dynamicResourceExtension43.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter98.Value = value44;
			context.PopParent();
			style63.Add(setter97);
			Setter setter99 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter100 = setter6;
			setter100.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension44 = new DynamicResourceExtension("CheckBoxBorderBrushCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value45 = dynamicResourceExtension44.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter100.Value = value45;
			context.PopParent();
			style63.Add(setter99);
			context.PopParent();
			style59.Add(style62);
			Style style64 = (style = new Style());
			context.PushParent(style);
			Style style65 = style;
			style65.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter101 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter102 = setter6;
			setter102.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension45 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value46 = dynamicResourceExtension45.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter102.Value = value46;
			context.PopParent();
			style65.Add(setter101);
			Setter setter103 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter104 = setter6;
			setter104.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension46 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value47 = dynamicResourceExtension46.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter104.Value = value47;
			context.PopParent();
			style65.Add(setter103);
			context.PopParent();
			style59.Add(style64);
			Style style66 = (style = new Style());
			context.PushParent(style);
			Style style67 = style;
			style67.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter105 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter106 = setter6;
			setter106.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension47 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value48 = dynamicResourceExtension47.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter106.Value = value48;
			context.PopParent();
			style67.Add(setter105);
			context.PopParent();
			style59.Add(style66);
			context.PopParent();
			style33.Add(style58);
			context.PopParent();
			controlTheme.Add(style32);
			Style style68 = (style = new Style());
			context.PushParent(style);
			Style style69 = style;
			style69.Selector = ((Selector?)null).Nesting().Class(":indeterminate");
			Setter setter107 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter108 = setter6;
			setter108.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension48 = new DynamicResourceExtension("CheckBoxForegroundIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value49 = dynamicResourceExtension48.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter108.Value = value49;
			context.PopParent();
			style69.Add(setter107);
			Setter setter109 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter110 = setter6;
			setter110.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension49 = new DynamicResourceExtension("CheckBoxBackgroundIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value50 = dynamicResourceExtension49.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter110.Value = value50;
			context.PopParent();
			style69.Add(setter109);
			Setter setter111 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter112 = setter6;
			setter112.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension50 = new DynamicResourceExtension("CheckBoxBorderBrushIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value51 = dynamicResourceExtension50.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter112.Value = value51;
			context.PopParent();
			style69.Add(setter111);
			Style style70 = (style = new Style());
			context.PushParent(style);
			Style style71 = style;
			style71.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter113 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter114 = setter6;
			setter114.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension51 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value52 = dynamicResourceExtension51.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter114.Value = value52;
			context.PopParent();
			style71.Add(setter113);
			Setter setter115 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter116 = setter6;
			setter116.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension52 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value53 = dynamicResourceExtension52.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter116.Value = value53;
			context.PopParent();
			style71.Add(setter115);
			context.PopParent();
			style69.Add(style70);
			Style style72 = (style = new Style());
			context.PushParent(style);
			Style style73 = style;
			style73.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter117 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter118 = setter6;
			setter118.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension53 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value54 = dynamicResourceExtension53.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter118.Value = value54;
			context.PopParent();
			style73.Add(setter117);
			Setter setter119 = new Setter();
			setter119.Property = Path.DataProperty;
			setter119.Value = Geometry.Parse("M1536 1536v-1024h-1024v1024h1024z");
			style73.Add(setter119);
			Setter setter120 = new Setter();
			setter120.Property = Layoutable.WidthProperty;
			setter120.Value = 7.0;
			style73.Add(setter120);
			Setter setter121 = new Setter();
			setter121.Property = Visual.OpacityProperty;
			setter121.Value = 1.0;
			style73.Add(setter121);
			context.PopParent();
			style69.Add(style72);
			Style style74 = (style = new Style());
			context.PushParent(style);
			Style style75 = style;
			style75.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Style style76 = (style = new Style());
			context.PushParent(style);
			Style style77 = style;
			style77.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter122 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter123 = setter6;
			setter123.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension54 = new DynamicResourceExtension("CheckBoxForegroundIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value55 = dynamicResourceExtension54.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter123.Value = value55;
			context.PopParent();
			style77.Add(setter122);
			context.PopParent();
			style75.Add(style76);
			Style style78 = (style = new Style());
			context.PushParent(style);
			Style style79 = style;
			style79.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter124 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter125 = setter6;
			setter125.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension55 = new DynamicResourceExtension("CheckBoxBackgroundIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value56 = dynamicResourceExtension55.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter125.Value = value56;
			context.PopParent();
			style79.Add(setter124);
			Setter setter126 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter127 = setter6;
			setter127.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension56 = new DynamicResourceExtension("CheckBoxBorderBrushIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value57 = dynamicResourceExtension56.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter127.Value = value57;
			context.PopParent();
			style79.Add(setter126);
			context.PopParent();
			style75.Add(style78);
			Style style80 = (style = new Style());
			context.PushParent(style);
			Style style81 = style;
			style81.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter128 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter129 = setter6;
			setter129.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension57 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value58 = dynamicResourceExtension57.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter129.Value = value58;
			context.PopParent();
			style81.Add(setter128);
			Setter setter130 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter131 = setter6;
			setter131.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension58 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value59 = dynamicResourceExtension58.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter131.Value = value59;
			context.PopParent();
			style81.Add(setter130);
			context.PopParent();
			style75.Add(style80);
			Style style82 = (style = new Style());
			context.PushParent(style);
			Style style83 = style;
			style83.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter132 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter133 = setter6;
			setter133.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension59 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value60 = dynamicResourceExtension59.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter133.Value = value60;
			context.PopParent();
			style83.Add(setter132);
			context.PopParent();
			style75.Add(style82);
			context.PopParent();
			style69.Add(style74);
			Style style84 = (style = new Style());
			context.PushParent(style);
			Style style85 = style;
			style85.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Style style86 = (style = new Style());
			context.PushParent(style);
			Style style87 = style;
			style87.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter134 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter135 = setter6;
			setter135.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension60 = new DynamicResourceExtension("CheckBoxForegroundIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value61 = dynamicResourceExtension60.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter135.Value = value61;
			context.PopParent();
			style87.Add(setter134);
			context.PopParent();
			style85.Add(style86);
			Style style88 = (style = new Style());
			context.PushParent(style);
			Style style89 = style;
			style89.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter136 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter137 = setter6;
			setter137.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension61 = new DynamicResourceExtension("CheckBoxBackgroundIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value62 = dynamicResourceExtension61.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter137.Value = value62;
			context.PopParent();
			style89.Add(setter136);
			Setter setter138 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter139 = setter6;
			setter139.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension62 = new DynamicResourceExtension("CheckBoxBorderBrushIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value63 = dynamicResourceExtension62.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter139.Value = value63;
			context.PopParent();
			style89.Add(setter138);
			context.PopParent();
			style85.Add(style88);
			Style style90 = (style = new Style());
			context.PushParent(style);
			Style style91 = style;
			style91.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter140 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter141 = setter6;
			setter141.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension63 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value64 = dynamicResourceExtension63.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter141.Value = value64;
			context.PopParent();
			style91.Add(setter140);
			Setter setter142 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter143 = setter6;
			setter143.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension64 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value65 = dynamicResourceExtension64.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter143.Value = value65;
			context.PopParent();
			style91.Add(setter142);
			context.PopParent();
			style85.Add(style90);
			Style style92 = (style = new Style());
			context.PushParent(style);
			Style style93 = style;
			style93.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter144 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter145 = setter6;
			setter145.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension65 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value66 = dynamicResourceExtension65.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter145.Value = value66;
			context.PopParent();
			style93.Add(setter144);
			context.PopParent();
			style85.Add(style92);
			context.PopParent();
			style69.Add(style84);
			Style style94 = (style = new Style());
			context.PushParent(style);
			Style style95 = style;
			style95.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style96 = (style = new Style());
			context.PushParent(style);
			Style style97 = style;
			style97.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("ContentPresenter");
			Setter setter146 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter147 = setter6;
			setter147.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension66 = new DynamicResourceExtension("CheckBoxForegroundIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value67 = dynamicResourceExtension66.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter147.Value = value67;
			context.PopParent();
			style97.Add(setter146);
			context.PopParent();
			style95.Add(style96);
			Style style98 = (style = new Style());
			context.PushParent(style);
			Style style99 = style;
			style99.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Border");
			Setter setter148 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter149 = setter6;
			setter149.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension67 = new DynamicResourceExtension("CheckBoxBackgroundIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value68 = dynamicResourceExtension67.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter149.Value = value68;
			context.PopParent();
			style99.Add(setter148);
			Setter setter150 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter151 = setter6;
			setter151.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension68 = new DynamicResourceExtension("CheckBoxBorderBrushIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value69 = dynamicResourceExtension68.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter151.Value = value69;
			context.PopParent();
			style99.Add(setter150);
			context.PopParent();
			style95.Add(style98);
			Style style100 = (style = new Style());
			context.PushParent(style);
			Style style101 = style;
			style101.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("NormalRectangle");
			Setter setter152 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter153 = setter6;
			setter153.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension69 = new DynamicResourceExtension("CheckBoxCheckBackgroundStrokeIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value70 = dynamicResourceExtension69.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter153.Value = value70;
			context.PopParent();
			style101.Add(setter152);
			Setter setter154 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter155 = setter6;
			setter155.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension70 = new DynamicResourceExtension("CheckBoxCheckBackgroundFillIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value71 = dynamicResourceExtension70.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter155.Value = value71;
			context.PopParent();
			style101.Add(setter154);
			context.PopParent();
			style95.Add(style100);
			Style style102 = (style = new Style());
			context.PushParent(style);
			Style style103 = style;
			style103.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("CheckGlyph");
			Setter setter156 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter157 = setter6;
			setter157.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension71 = new DynamicResourceExtension("CheckBoxCheckGlyphForegroundIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value72 = dynamicResourceExtension71.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter157.Value = value72;
			context.PopParent();
			style103.Add(setter156);
			context.PopParent();
			style95.Add(style102);
			context.PopParent();
			style69.Add(style94);
			context.PopParent();
			controlTheme.Add(style68);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_22
	{
		private class XamlClosure_23
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Rectangle();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Rectangle rectangle = (Rectangle)intermediateRoot;
				context.PushParent(rectangle);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle.Bind(fillProperty, binding);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_24
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(GridSplitter);
			Setter setter = new Setter();
			setter.Property = InputElement.FocusableProperty;
			setter.Value = true;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 6.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MinHeightProperty;
			setter3.Value = 6.0;
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAltMediumLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter8 = setter4;
			setter8.Property = GridSplitter.PreviewContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_23.Build, context);
			context.PopParent();
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_24.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_25
	{
		private class XamlClosure_26
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(ItemsControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_26.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_27
	{
		private class XamlClosure_28
		{
			private class DynamicSetters_29
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_29.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Label);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(3.0, 3.0, 3.0, 3.0);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.TemplateProperty;
			setter2.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_28.Build, context)
			};
			controlTheme.Add(setter2);
			return controlTheme;
		}
	}

	private class XamlClosure_30
	{
		private class XamlClosure_31
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "border";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("border", service);
				((AvaloniaObject)intermediateRoot).Bind(Visual.ClipToBoundsProperty, new TemplateBinding(Visual.ClipToBoundsProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Name = "PART_ScrollViewer";
				service = scrollViewer;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				scrollViewer.Bind(ScrollViewer.VerticalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsTypeProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsTypeProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollInertiaEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollInertiaEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ListBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlBackgroundChromeMediumLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ListBoxBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter10.Value = ScrollBarVisibility.Disabled;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter11.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter12.Value = true;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = ScrollViewer.IsScrollInertiaEnabledProperty;
			setter13.Value = true;
			controlTheme.Add(setter13);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = TemplatedControl.TemplateProperty;
			setter16.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_31.Build, context)
			};
			controlTheme.Add(setter16);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_32
	{
		private class XamlClosure_33
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				Controls children = dockPanel.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				repeatButton5.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				repeatButton5.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				repeatButton5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				repeatButton5.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				repeatButton5.SetValue(Visual.RenderTransformProperty, null, BindingPriority.Template);
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Command("LineUp", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002EScrollViewer_002BLineUp_0_0021CommandExecuteTrampoline, null, null)
					.Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(commandProperty, binding);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				MultiBinding multiBinding;
				MultiBinding binding2 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				MultiBinding multiBinding2 = multiBinding;
				multiBinding2.Converter = MenuScrollingVisibilityConverter.Instance;
				multiBinding2.ConverterParameter = "0";
				IList<IBinding> bindings = multiBinding2.Bindings;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.VerticalScrollBarVisibilityProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings.Add(item);
				IList<IBinding> bindings2 = multiBinding2.Bindings;
				CompiledBindingExtension obj2 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.OffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EVector_002CAvalonia_002EBase_002EY_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item2 = obj2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings2.Add(item2);
				IList<IBinding> bindings3 = multiBinding2.Bindings;
				CompiledBindingExtension obj3 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ExtentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item3 = obj3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings3.Add(item3);
				IList<IBinding> bindings4 = multiBinding2.Bindings;
				CompiledBindingExtension obj4 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ViewportProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item4 = obj4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings4.Add(item4);
				context.PopParent();
				repeatButton5.Bind(isVisibleProperty, binding2);
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				repeatButton5.Content = viewbox2;
				Viewbox viewbox3;
				Viewbox viewbox4 = (viewbox3 = viewbox);
				context.PushParent(viewbox3);
				Viewbox viewbox5 = viewbox3;
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding3 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				viewbox5.Bind(widthProperty, binding3);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding4 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				viewbox5.Bind(heightProperty, binding4);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox5.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M 19.091797 14.970703 L 10 5.888672 L 0.908203 14.970703 L 0.029297 14.091797 L 10 4.111328 L 19.970703 14.091797 Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarButtonArrowForeground");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding5 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(fillProperty, binding5);
				path5.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)viewbox4).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children2 = dockPanel.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children2.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				repeatButton9.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				repeatButton9.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				repeatButton9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				repeatButton9.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				repeatButton9.SetValue(Visual.RenderTransformProperty, null, BindingPriority.Template);
				StyledProperty<ICommand?> commandProperty2 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Command("LineDown", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002EScrollViewer_002BLineDown_0_0021CommandExecuteTrampoline, null, null)
					.Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding6 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton9.Bind(commandProperty2, binding6);
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				MultiBinding binding7 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				MultiBinding multiBinding3 = multiBinding;
				multiBinding3.Converter = MenuScrollingVisibilityConverter.Instance;
				multiBinding3.ConverterParameter = "100";
				IList<IBinding> bindings5 = multiBinding3.Bindings;
				CompiledBindingExtension obj5 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.VerticalScrollBarVisibilityProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item5 = obj5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings5.Add(item5);
				IList<IBinding> bindings6 = multiBinding3.Bindings;
				CompiledBindingExtension obj6 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.OffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EVector_002CAvalonia_002EBase_002EY_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item6 = obj6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings6.Add(item6);
				IList<IBinding> bindings7 = multiBinding3.Bindings;
				CompiledBindingExtension obj7 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ExtentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item7 = obj7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings7.Add(item7);
				IList<IBinding> bindings8 = multiBinding3.Bindings;
				CompiledBindingExtension obj8 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ViewportProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item8 = obj8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings8.Add(item8);
				context.PopParent();
				repeatButton9.Bind(isVisibleProperty2, binding7);
				Viewbox viewbox6;
				Viewbox viewbox7 = (viewbox6 = new Viewbox());
				((ISupportInitialize)viewbox7).BeginInit();
				repeatButton9.Content = viewbox7;
				Viewbox viewbox8 = (viewbox3 = viewbox6);
				context.PushParent(viewbox3);
				Viewbox viewbox9 = viewbox3;
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding8 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				viewbox9.Bind(widthProperty2, binding8);
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding9 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				viewbox9.Bind(heightProperty2, binding9);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				viewbox9.Child = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Path.DataProperty, Geometry.Parse("M 18.935547 4.560547 L 19.814453 5.439453 L 10 15.253906 L 0.185547 5.439453 L 1.064453 4.560547 L 10 13.496094 Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarButtonArrowForeground");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding10 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(fillProperty2, binding10);
				path9.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				path9.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)viewbox8).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Controls children3 = dockPanel.Children;
				ScrollContentPresenter scrollContentPresenter;
				ScrollContentPresenter scrollContentPresenter2 = (scrollContentPresenter = new ScrollContentPresenter());
				((ISupportInitialize)scrollContentPresenter2).BeginInit();
				children3.Add(scrollContentPresenter2);
				ScrollContentPresenter scrollContentPresenter3;
				ScrollContentPresenter scrollContentPresenter4 = (scrollContentPresenter3 = scrollContentPresenter);
				context.PushParent(scrollContentPresenter3);
				scrollContentPresenter3.Name = "PART_ContentPresenter";
				service = scrollContentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				GestureRecognizerCollection gestureRecognizers = scrollContentPresenter3.GestureRecognizers;
				ScrollGestureRecognizer scrollGestureRecognizer = new ScrollGestureRecognizer();
				((ISupportInitialize)scrollGestureRecognizer).BeginInit();
				ScrollGestureRecognizer scrollGestureRecognizer2 = scrollGestureRecognizer;
				context.PushParent(scrollGestureRecognizer2);
				DirectProperty<ScrollGestureRecognizer, bool> canHorizontallyScrollProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanHorizontallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension binding11 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canHorizontallyScrollProperty, binding11);
				DirectProperty<ScrollGestureRecognizer, bool> canVerticallyScrollProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanVerticallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension binding12 = compiledBindingExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canVerticallyScrollProperty, binding12);
				context.PopParent();
				((ISupportInitialize)scrollGestureRecognizer).EndInit();
				gestureRecognizers.Add(scrollGestureRecognizer);
				context.PopParent();
				((ISupportInitialize)scrollContentPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollViewer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_33.Build, context);
			context.PopParent();
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class(":pointerover")
				.Child()
				.OfType(typeof(Viewbox))
				.Child()
				.OfType(typeof(Path));
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarButtonArrowForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_34
	{
		private class XamlClosure_35
		{
			private class DynamicSetters_36
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "LayoutRoot";
				service = border;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FlyoutBorderThemePadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				scrollViewer3.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_36.DynamicSetter_1(scrollViewer3, BindingPriority.Template, obj);
				scrollViewer3.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				ItemsPresenter itemsPresenter3;
				ItemsPresenter itemsPresenter4 = (itemsPresenter3 = itemsPresenter);
				context.PushParent(itemsPresenter3);
				itemsPresenter3.Name = "PART_ItemsPresenter";
				service = itemsPresenter3;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter3.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutScrollerMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsPresenter3.Bind(marginProperty, binding2);
				itemsPresenter3.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				itemsPresenter3.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)itemsPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuFlyoutPresenter);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutPresenterBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutPresenterBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutPresenterBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("MenuFlyoutPresenterThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.MaxWidthProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("FlyoutThemeMaxWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter14.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter15.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter15);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value8 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_35.Build, context);
			context.PopParent();
			setter19.Value = value8;
			context.PopParent();
			controlTheme.Add(setter18);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_37
	{
		private class XamlClosure_38
		{
			private class DynamicSetters_39
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				LayoutTransformControl layoutTransformControl = (LayoutTransformControl)intermediateRoot;
				context.PushParent(layoutTransformControl);
				layoutTransformControl.Name = "PART_LayoutTransformControl";
				service = layoutTransformControl;
				context.AvaloniaNameScope.Register("PART_LayoutTransformControl", service);
				layoutTransformControl.SetValue(LayoutTransformControl.UseRenderTransformProperty, value: true, BindingPriority.Template);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				layoutTransformControl.Child = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border5.SetValue(Border.BoxShadowProperty, BoxShadows.Parse("0 6 8 0 #4F000000"), BindingPriority.Template);
				border5.SetValue(Layoutable.MarginProperty, new Thickness(5.0, 5.0, 5.0, 10.0), BindingPriority.Template);
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				border5.Child = border7;
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border9.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border9.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border9.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border9.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				border9.Child = dockPanel2;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = dockPanel);
				context.PushParent(dockPanel3);
				Controls children = dockPanel3.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "PART_HeaderBar";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_HeaderBar", service);
				panel3.SetValue(Layoutable.HeightProperty, 4.0, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("NotificationCardProgressBackgroundBrush");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				panel3.Bind(backgroundProperty, binding);
				panel3.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children2 = dockPanel3.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children2.Add(contentControl2);
				contentControl.Name = "PART_Content";
				service = contentControl;
				context.AvaloniaNameScope.Register("PART_Content", service);
				contentControl.SetValue(Layoutable.MinHeightProperty, 64.0, BindingPriority.Template);
				DynamicSetters_39.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((ISupportInitialize)contentControl).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NotificationCard);
			IList<IAnimation> animations = controlTheme.Animations;
			Animation animation = new Animation();
			animation.Duration = TimeSpan.FromTicks(4500000L);
			animation.Easing = Easing.Parse("QuadraticEaseIn");
			animation.FillMode = FillMode.Forward;
			KeyFrames children = animation.Children;
			KeyFrame keyFrame = new KeyFrame();
			keyFrame.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters = keyFrame.Setters;
			Setter setter = new Setter();
			setter.Property = Visual.OpacityProperty;
			setter.Value = 0.0;
			setters.Add(setter);
			AvaloniaList<IAnimationSetter> setters2 = keyFrame.Setters;
			Setter setter2 = new Setter();
			setter2.Property = TranslateTransform.YProperty;
			setter2.Value = 20.0;
			setters2.Add(setter2);
			AvaloniaList<IAnimationSetter> setters3 = keyFrame.Setters;
			Setter setter3 = new Setter();
			setter3.Property = ScaleTransform.ScaleXProperty;
			setter3.Value = 0.85;
			setters3.Add(setter3);
			AvaloniaList<IAnimationSetter> setters4 = keyFrame.Setters;
			Setter setter4 = new Setter();
			setter4.Property = ScaleTransform.ScaleYProperty;
			setter4.Value = 0.85;
			setters4.Add(setter4);
			children.Add(keyFrame);
			KeyFrames children2 = animation.Children;
			KeyFrame keyFrame2 = new KeyFrame();
			keyFrame2.Cue = Cue.Parse("30%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters5 = keyFrame2.Setters;
			Setter setter5 = new Setter();
			setter5.Property = TranslateTransform.YProperty;
			setter5.Value = -20.0;
			setters5.Add(setter5);
			children2.Add(keyFrame2);
			KeyFrames children3 = animation.Children;
			KeyFrame keyFrame3 = new KeyFrame();
			keyFrame3.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters6 = keyFrame3.Setters;
			Setter setter6 = new Setter();
			setter6.Property = Visual.OpacityProperty;
			setter6.Value = 1.0;
			setters6.Add(setter6);
			AvaloniaList<IAnimationSetter> setters7 = keyFrame3.Setters;
			Setter setter7 = new Setter();
			setter7.Property = TranslateTransform.YProperty;
			setter7.Value = 0.0;
			setters7.Add(setter7);
			AvaloniaList<IAnimationSetter> setters8 = keyFrame3.Setters;
			Setter setter8 = new Setter();
			setter8.Property = ScaleTransform.ScaleXProperty;
			setter8.Value = 1.0;
			setters8.Add(setter8);
			AvaloniaList<IAnimationSetter> setters9 = keyFrame3.Setters;
			Setter setter9 = new Setter();
			setter9.Property = ScaleTransform.ScaleYProperty;
			setter9.Value = 1.0;
			setters9.Add(setter9);
			children3.Add(keyFrame3);
			animations.Add(animation);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.UseLayoutRoundingProperty;
			setter10.Value = true;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.WidthProperty;
			setter11.Value = 350.0;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.FontSizeProperty;
			setter12.Value = 14.0;
			controlTheme.Add(setter12);
			Setter setter13;
			Setter setter14 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter15 = setter13;
			setter15.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("NotificationCardForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = Visual.RenderTransformOriginProperty;
			setter16.Value = new RelativePoint(0.5, 0.75, RelativeUnit.Relative);
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = TemplatedControl.BorderThicknessProperty;
			setter17.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter17);
			Setter setter18 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter19 = setter13;
			setter19.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("NotificationCardBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value2;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter21 = setter13;
			setter21.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value3;
			context.PopParent();
			controlTheme.Add(setter20);
			Setter setter22 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter23 = setter13;
			setter23.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_38.Build, context);
			context.PopParent();
			setter23.Value = value4;
			context.PopParent();
			controlTheme.Add(setter22);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)NotificationCard.IsClosingProperty, (object?)true).Template()
				.OfType(typeof(LayoutTransformControl))
				.Name("PART_LayoutTransformControl");
			IList<IAnimation> animations2 = style.Animations;
			Animation animation2 = new Animation();
			animation2.Duration = TimeSpan.FromTicks(7500000L);
			animation2.Easing = Easing.Parse("QuadraticEaseOut");
			animation2.FillMode = FillMode.Forward;
			KeyFrames children4 = animation2.Children;
			KeyFrame keyFrame4 = new KeyFrame();
			keyFrame4.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters10 = keyFrame4.Setters;
			Setter setter24 = new Setter();
			setter24.Property = TranslateTransform.XProperty;
			setter24.Value = 0.0;
			setters10.Add(setter24);
			AvaloniaList<IAnimationSetter> setters11 = keyFrame4.Setters;
			Setter setter25 = new Setter();
			setter25.Property = ScaleTransform.ScaleYProperty;
			setter25.Value = 1.0;
			setters11.Add(setter25);
			children4.Add(keyFrame4);
			KeyFrames children5 = animation2.Children;
			KeyFrame keyFrame5 = new KeyFrame();
			keyFrame5.Cue = Cue.Parse("70%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters12 = keyFrame5.Setters;
			Setter setter26 = new Setter();
			setter26.Property = TranslateTransform.XProperty;
			setter26.Value = 800.0;
			setters12.Add(setter26);
			AvaloniaList<IAnimationSetter> setters13 = keyFrame5.Setters;
			Setter setter27 = new Setter();
			setter27.Property = ScaleTransform.ScaleYProperty;
			setter27.Value = 1.0;
			setters13.Add(setter27);
			children5.Add(keyFrame5);
			KeyFrames children6 = animation2.Children;
			KeyFrame keyFrame6 = new KeyFrame();
			keyFrame6.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters14 = keyFrame6.Setters;
			Setter setter28 = new Setter();
			setter28.Property = ScaleTransform.ScaleYProperty;
			setter28.Value = 0.0;
			setters14.Add(setter28);
			AvaloniaList<IAnimationSetter> setters15 = keyFrame6.Setters;
			Setter setter29 = new Setter();
			setter29.Property = TranslateTransform.XProperty;
			setter29.Value = 800.0;
			setters15.Add(setter29);
			children6.Add(keyFrame6);
			animations2.Add(animation2);
			Setter setter30 = new Setter();
			setter30.Property = Visual.RenderTransformOriginProperty;
			setter30.Value = new RelativePoint(0.5, 0.0, RelativeUnit.Relative);
			style.Add(setter30);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)NotificationCard.IsClosingProperty, (object?)true);
			IList<IAnimation> animations3 = style2.Animations;
			Animation animation3 = new Animation();
			animation3.Duration = TimeSpan.FromTicks(12500000L);
			animation3.Easing = Easing.Parse("QuadraticEaseOut");
			animation3.FillMode = FillMode.Forward;
			KeyFrames children7 = animation3.Children;
			KeyFrame keyFrame7 = new KeyFrame();
			keyFrame7.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters16 = keyFrame7.Setters;
			Setter setter31 = new Setter();
			setter31.Property = NotificationCard.IsClosedProperty;
			setter31.Value = true;
			setters16.Add(setter31);
			children7.Add(keyFrame7);
			animations3.Add(animation3);
			controlTheme.Add(style2);
			Style style3;
			Style style4 = (style3 = new Style());
			context.PushParent(style3);
			Style style5 = style3;
			style5.Selector = ((Selector?)null).Nesting().Class(":information").Template()
				.OfType(typeof(Panel))
				.Name("PART_HeaderBar");
			Setter setter32 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter33 = setter13;
			setter33.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("NotificationCardInformationBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value5;
			context.PopParent();
			style5.Add(setter32);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style3 = new Style());
			context.PushParent(style3);
			Style style7 = style3;
			style7.Selector = ((Selector?)null).Nesting().Class(":success").Template()
				.OfType(typeof(Panel))
				.Name("PART_HeaderBar");
			Setter setter34 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter35 = setter13;
			setter35.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("NotificationCardSuccessBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value6;
			context.PopParent();
			style7.Add(setter34);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style3 = new Style());
			context.PushParent(style3);
			Style style9 = style3;
			style9.Selector = ((Selector?)null).Nesting().Class(":warning").Template()
				.OfType(typeof(Panel))
				.Name("PART_HeaderBar");
			Setter setter36 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter37 = setter13;
			setter37.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("NotificationCardWarningBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value7;
			context.PopParent();
			style9.Add(setter36);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style3 = new Style());
			context.PushParent(style3);
			Style style11 = style3;
			style11.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Panel))
				.Name("PART_HeaderBar");
			Setter setter38 = (setter13 = new Setter());
			context.PushParent(setter13);
			Setter setter39 = setter13;
			setter39.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("NotificationCardErrorBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value8;
			context.PopParent();
			style11.Add(setter38);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_40
	{
		private class XamlClosure_41
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ButtonSpinner();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Spinner";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Spinner", service);
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.MinWidthProperty, 0.0, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.AllowSpinProperty, new TemplateBinding(NumericUpDown.AllowSpinProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.ShowButtonSpinnerProperty, new TemplateBinding(NumericUpDown.ShowButtonSpinnerProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(DataValidationErrors.ErrorsProperty, new TemplateBinding(DataValidationErrors.ErrorsProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.ButtonSpinnerLocationProperty, new TemplateBinding(NumericUpDown.ButtonSpinnerLocationProperty).ProvideValue());
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				((ContentControl)intermediateRoot).Content = textBox2;
				textBox.Name = "PART_TextBox";
				service = textBox;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				textBox.SetValue(TemplatedControl.BorderBrushProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				textBox.SetValue(Layoutable.MarginProperty, new Thickness(-1.0, -1.0, -1.0, -1.0), BindingPriority.Template);
				textBox.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox.SetValue(Layoutable.MinWidthProperty, 0.0, BindingPriority.Template);
				textBox.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				textBox.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBox.Bind(TextBox.WatermarkProperty, new TemplateBinding(NumericUpDown.WatermarkProperty).ProvideValue());
				textBox.Bind(TextBox.IsReadOnlyProperty, new TemplateBinding(NumericUpDown.IsReadOnlyProperty).ProvideValue());
				textBox.Bind(TextBox.VerticalContentAlignmentProperty, new TemplateBinding(NumericUpDown.VerticalContentAlignmentProperty).ProvideValue());
				textBox.Bind(TextBox.HorizontalContentAlignmentProperty, new TemplateBinding(NumericUpDown.HorizontalContentAlignmentProperty).ProvideValue());
				textBox.Bind(TextBox.TextProperty, new TemplateBinding(NumericUpDown.TextProperty).ProvideValue());
				textBox.SetValue(TextBox.AcceptsReturnProperty, value: false, BindingPriority.Template);
				textBox.SetValue(TextBox.TextWrappingProperty, TextWrapping.NoWrap, BindingPriority.Template);
				((ISupportInitialize)textBox).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NumericUpDown);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TextControlBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TextControlBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TextControlThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TextControlThemeMinWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TextControlThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value8;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value9;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = new Setter();
			setter20.Property = TemplatedControl.TemplateProperty;
			setter20.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_41.Build, context)
			};
			controlTheme.Add(setter20);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_42
	{
		private class XamlClosure_43
		{
			private class DynamicSetters_44
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(LayoutTransformControl.LayoutTransformProperty, new TemplateBinding(OverlayPopupHost.TransformProperty).ProvideValue());
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				((Decorator)intermediateRoot).Child = visualLayerManager2;
				visualLayerManager.IsPopup = true;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_44.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(OverlayPopupHost);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.FontWeightProperty;
			setter8.Value = FontWeight.Normal;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.FontStyleProperty;
			setter9.Value = FontStyle.Normal;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_43.Build, context)
			};
			controlTheme.Add(setter10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_45
	{
		private class XamlClosure_46
		{
			private class DynamicSetters_47
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(LayoutTransformControl.LayoutTransformProperty, new TemplateBinding(PopupRoot.TransformProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				((Decorator)intermediateRoot).Child = panel2;
				Controls children = panel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = panel.Children;
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				children2.Add(visualLayerManager2);
				visualLayerManager.IsPopup = true;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_47.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)panel).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(PopupRoot);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = null;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TopLevel.TransparencyLevelHintProperty;
			setter2.Value = (IReadOnlyList<WindowTransparencyLevel>)new WindowTransparencyLevel[1] { WindowTransparencyLevel.Transparent };
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter9 = setter3;
			setter9.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.FontWeightProperty;
			setter10.Value = FontWeight.Normal;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = TemplatedControl.FontStyleProperty;
			setter11.Value = FontStyle.Normal;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.TemplateProperty;
			setter12.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_46.Build, context)
			};
			controlTheme.Add(setter12);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_48
	{
		private class XamlClosure_49
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				((Decorator)intermediateRoot).Child = viewbox2;
				viewbox.Bind(Layoutable.HeightProperty, new TemplateBinding(Layoutable.HeightProperty).ProvideValue());
				viewbox.Bind(Layoutable.WidthProperty, new TemplateBinding(Layoutable.WidthProperty).ProvideValue());
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				path.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path.Bind(Path.DataProperty, new TemplateBinding(PathIcon.DataProperty).ProvideValue());
				path.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				((ISupportInitialize)viewbox).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(PathIcon);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("IconElementThemeHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("IconElementThemeWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_49.Build, context)
			};
			controlTheme.Add(setter7);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_50
	{
		private class XamlClosure_51
		{
			private class DynamicSetters_52
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DynamicSetters_52.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RepeatButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RepeatButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("RepeatButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.PaddingProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value6 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = TemplatedControl.FontWeightProperty;
			setter16.Value = FontWeight.Normal;
			controlTheme.Add(setter16);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Visual.RenderTransformProperty;
			setter20.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter19);
			Setter setter21 = new Setter();
			setter21.Property = TemplatedControl.TemplateProperty;
			setter21.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_51.Build, context)
			};
			controlTheme.Add(setter21);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("RepeatButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value8;
			context.PopParent();
			style3.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("RepeatButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value9;
			context.PopParent();
			style3.Add(setter24);
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("RepeatButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value10;
			context.PopParent();
			style3.Add(setter26);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Visual.RenderTransformProperty;
			setter29.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style5.Add(setter28);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("RepeatButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value11;
			context.PopParent();
			style7.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("RepeatButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value12;
			context.PopParent();
			style7.Add(setter32);
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("RepeatButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value13;
			context.PopParent();
			style7.Add(setter34);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("RepeatButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value14;
			context.PopParent();
			style9.Add(setter36);
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("RepeatButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value15;
			context.PopParent();
			style9.Add(setter38);
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("RepeatButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value16;
			context.PopParent();
			style9.Add(setter40);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_53
	{
		private class XamlClosure_54
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.ColumnDefinitions = columnDefinitions;
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.RowDefinitions = rowDefinitions;
				Controls children = grid.Children;
				ScrollContentPresenter scrollContentPresenter;
				ScrollContentPresenter scrollContentPresenter2 = (scrollContentPresenter = new ScrollContentPresenter());
				((ISupportInitialize)scrollContentPresenter2).BeginInit();
				children.Add(scrollContentPresenter2);
				ScrollContentPresenter scrollContentPresenter3;
				ScrollContentPresenter scrollContentPresenter4 = (scrollContentPresenter3 = scrollContentPresenter);
				context.PushParent(scrollContentPresenter3);
				scrollContentPresenter3.Name = "PART_ContentPresenter";
				service = scrollContentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				scrollContentPresenter3.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				scrollContentPresenter3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				scrollContentPresenter3.SetValue(Grid.RowSpanProperty, 2, BindingPriority.Template);
				scrollContentPresenter3.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				scrollContentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.HorizontalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsTypeProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.VerticalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsTypeProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.HorizontalSnapPointsAlignmentProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsAlignmentProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.VerticalSnapPointsAlignmentProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsAlignmentProperty).ProvideValue());
				scrollContentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollViewer.IsScrollInertiaEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollInertiaEnabledProperty).ProvideValue());
				GestureRecognizerCollection gestureRecognizers = scrollContentPresenter3.GestureRecognizers;
				ScrollGestureRecognizer scrollGestureRecognizer = new ScrollGestureRecognizer();
				((ISupportInitialize)scrollGestureRecognizer).BeginInit();
				ScrollGestureRecognizer scrollGestureRecognizer2 = scrollGestureRecognizer;
				context.PushParent(scrollGestureRecognizer2);
				DirectProperty<ScrollGestureRecognizer, bool> canHorizontallyScrollProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanHorizontallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canHorizontallyScrollProperty, binding);
				DirectProperty<ScrollGestureRecognizer, bool> canVerticallyScrollProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanVerticallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canVerticallyScrollProperty, binding2);
				DirectProperty<ScrollGestureRecognizer, bool> isScrollInertiaEnabledProperty = ScrollGestureRecognizer.IsScrollInertiaEnabledProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollViewer.IsScrollInertiaEnabledProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.IsScrollInertiaEnabledProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(isScrollInertiaEnabledProperty, binding3);
				context.PopParent();
				((ISupportInitialize)scrollGestureRecognizer).EndInit();
				gestureRecognizers.Add(scrollGestureRecognizer);
				context.PopParent();
				((ISupportInitialize)scrollContentPresenter4).EndInit();
				Controls children2 = grid.Children;
				ScrollBar scrollBar;
				ScrollBar scrollBar2 = (scrollBar = new ScrollBar());
				((ISupportInitialize)scrollBar2).BeginInit();
				children2.Add(scrollBar2);
				scrollBar.Name = "PART_HorizontalScrollBar";
				service = scrollBar;
				context.AvaloniaNameScope.Register("PART_HorizontalScrollBar", service);
				scrollBar.SetValue(ScrollBar.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				scrollBar.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				((ISupportInitialize)scrollBar).EndInit();
				Controls children3 = grid.Children;
				ScrollBar scrollBar3;
				ScrollBar scrollBar4 = (scrollBar3 = new ScrollBar());
				((ISupportInitialize)scrollBar4).BeginInit();
				children3.Add(scrollBar4);
				scrollBar3.Name = "PART_VerticalScrollBar";
				service = scrollBar3;
				context.AvaloniaNameScope.Register("PART_VerticalScrollBar", service);
				scrollBar3.SetValue(ScrollBar.OrientationProperty, Orientation.Vertical, BindingPriority.Template);
				scrollBar3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				((ISupportInitialize)scrollBar3).EndInit();
				Controls children4 = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children4.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "PART_ScrollBarsSeparator";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_ScrollBarsSeparator", service);
				panel3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				panel3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollViewerScrollBarsSeparatorBackground");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding4 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				panel3.Bind(backgroundProperty, binding4);
				panel3.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				StyledProperty<Transitions?> transitionsProperty = Animatable.TransitionsProperty;
				Transitions transitions = new Transitions();
				DoubleTransition doubleTransition = new DoubleTransition();
				doubleTransition.Property = Visual.OpacityProperty;
				doubleTransition.Duration = TimeSpan.FromTicks(1000000L);
				transitions.Add(doubleTransition);
				panel3.SetValue(transitionsProperty, transitions, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollViewer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_54.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)ScrollViewer.IsExpandedProperty, (object?)true).Template()
				.OfType(typeof(Panel))
				.Name("PART_ScrollBarsSeparator");
			Setter setter4 = new Setter();
			setter4.Property = Visual.OpacityProperty;
			setter4.Value = 1.0;
			style.Add(setter4);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_55
	{
		private class XamlClosure_56
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(Layoutable.MarginProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HeightProperty, new TemplateBinding(Layoutable.HeightProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Separator);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseMediumLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.FocusableProperty;
			setter4.Value = false;
			controlTheme.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutSeparatorThemeHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = Layoutable.HorizontalAlignmentProperty;
			setter7.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter7);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = Layoutable.MarginProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutSeparatorThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_56.Build, context)
			};
			controlTheme.Add(setter10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_57
	{
		private class XamlClosure_58
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_59
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new WrapPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TabStrip);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_58.Build, context)
			};
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = ItemsControl.ItemsPanelProperty;
			setter2.Value = new ItemsPanelTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_59.Build, context)
			};
			controlTheme.Add(setter2);
			return controlTheme;
		}
	}

	private class XamlClosure_60
	{
		private class XamlClosure_61
		{
			private class DynamicSetters_62
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DynamicSetters_62.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ToggleButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ToggleButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ToggleButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ToggleButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = TemplatedControl.FontWeightProperty;
			setter16.Value = FontWeight.Normal;
			controlTheme.Add(setter16);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Visual.RenderTransformProperty;
			setter20.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter19);
			Setter setter21 = new Setter();
			setter21.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			TransformOperationsTransition transformOperationsTransition = new TransformOperationsTransition();
			transformOperationsTransition.Property = Visual.RenderTransformProperty;
			transformOperationsTransition.Duration = TimeSpan.FromTicks(750000L);
			transitions.Add(transformOperationsTransition);
			setter21.Value = transitions;
			controlTheme.Add(setter21);
			Setter setter22 = new Setter();
			setter22.Property = TemplatedControl.TemplateProperty;
			setter22.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_61.Build, context)
			};
			controlTheme.Add(setter22);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ToggleButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value8;
			context.PopParent();
			style3.Add(setter23);
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ToggleButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value9;
			context.PopParent();
			style3.Add(setter25);
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ToggleButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value10;
			context.PopParent();
			style3.Add(setter27);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = Visual.RenderTransformProperty;
			setter30.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style5.Add(setter29);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ToggleButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value11;
			context.PopParent();
			style7.Add(setter31);
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ToggleButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value12;
			context.PopParent();
			style7.Add(setter33);
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ToggleButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value13;
			context.PopParent();
			style7.Add(setter35);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ToggleButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value14;
			context.PopParent();
			style9.Add(setter37);
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ToggleButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value15;
			context.PopParent();
			style9.Add(setter39);
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ToggleButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value16;
			context.PopParent();
			style9.Add(setter41);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":indeterminate");
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter43 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter44 = setter;
			setter44.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ToggleButtonBackgroundIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter44.Value = value17;
			context.PopParent();
			style13.Add(setter43);
			Setter setter45 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter46 = setter;
			setter46.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ToggleButtonBorderBrushIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter46.Value = value18;
			context.PopParent();
			style13.Add(setter45);
			Setter setter47 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter48 = setter;
			setter48.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ToggleButtonForegroundIndeterminate");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter48.Value = value19;
			context.PopParent();
			style13.Add(setter47);
			context.PopParent();
			style11.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter49 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter50 = setter;
			setter50.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ToggleButtonBackgroundIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter50.Value = value20;
			context.PopParent();
			style15.Add(setter49);
			Setter setter51 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter52 = setter;
			setter52.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ToggleButtonBorderBrushIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value21;
			context.PopParent();
			style15.Add(setter51);
			Setter setter53 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter54 = setter;
			setter54.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ToggleButtonForegroundIndeterminatePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter54.Value = value22;
			context.PopParent();
			style15.Add(setter53);
			context.PopParent();
			style11.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter55 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter56 = setter;
			setter56.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("ToggleButtonBackgroundIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter56.Value = value23;
			context.PopParent();
			style17.Add(setter55);
			Setter setter57 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter58 = setter;
			setter58.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("ToggleButtonBorderBrushIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter58.Value = value24;
			context.PopParent();
			style17.Add(setter57);
			Setter setter59 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter60 = setter;
			setter60.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("ToggleButtonForegroundIndeterminatePressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter60.Value = value25;
			context.PopParent();
			style17.Add(setter59);
			context.PopParent();
			style11.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter61 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter62 = setter;
			setter62.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("ToggleButtonBackgroundIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter62.Value = value26;
			context.PopParent();
			style19.Add(setter61);
			Setter setter63 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter64 = setter;
			setter64.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("ToggleButtonBorderBrushIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter64.Value = value27;
			context.PopParent();
			style19.Add(setter63);
			Setter setter65 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter66 = setter;
			setter66.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension28 = new DynamicResourceExtension("ToggleButtonForegroundIndeterminateDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value28 = dynamicResourceExtension28.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter66.Value = value28;
			context.PopParent();
			style19.Add(setter65);
			context.PopParent();
			style11.Add(style18);
			context.PopParent();
			controlTheme.Add(style10);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":checked");
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter67 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter68 = setter;
			setter68.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension29 = new DynamicResourceExtension("ToggleButtonBackgroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value29 = dynamicResourceExtension29.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter68.Value = value29;
			context.PopParent();
			style23.Add(setter67);
			Setter setter69 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter70 = setter;
			setter70.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension30 = new DynamicResourceExtension("ToggleButtonBorderBrushChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value30 = dynamicResourceExtension30.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter70.Value = value30;
			context.PopParent();
			style23.Add(setter69);
			Setter setter71 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter72 = setter;
			setter72.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension31 = new DynamicResourceExtension("ToggleButtonForegroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value31 = dynamicResourceExtension31.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter72.Value = value31;
			context.PopParent();
			style23.Add(setter71);
			context.PopParent();
			style21.Add(style22);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter73 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter74 = setter;
			setter74.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension32 = new DynamicResourceExtension("ToggleButtonBackgroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value32 = dynamicResourceExtension32.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter74.Value = value32;
			context.PopParent();
			style25.Add(setter73);
			Setter setter75 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter76 = setter;
			setter76.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension33 = new DynamicResourceExtension("ToggleButtonBorderBrushCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value33 = dynamicResourceExtension33.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter76.Value = value33;
			context.PopParent();
			style25.Add(setter75);
			Setter setter77 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter78 = setter;
			setter78.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension34 = new DynamicResourceExtension("ToggleButtonForegroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value34 = dynamicResourceExtension34.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter78.Value = value34;
			context.PopParent();
			style25.Add(setter77);
			context.PopParent();
			style21.Add(style24);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter79 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter80 = setter;
			setter80.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension35 = new DynamicResourceExtension("ToggleButtonBackgroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value35 = dynamicResourceExtension35.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter80.Value = value35;
			context.PopParent();
			style27.Add(setter79);
			Setter setter81 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter82 = setter;
			setter82.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension36 = new DynamicResourceExtension("ToggleButtonBorderBrushCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value36 = dynamicResourceExtension36.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter82.Value = value36;
			context.PopParent();
			style27.Add(setter81);
			Setter setter83 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter84 = setter;
			setter84.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension37 = new DynamicResourceExtension("ToggleButtonForegroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value37 = dynamicResourceExtension37.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter84.Value = value37;
			context.PopParent();
			style27.Add(setter83);
			context.PopParent();
			style21.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter85 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter86 = setter;
			setter86.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension38 = new DynamicResourceExtension("ToggleButtonBackgroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value38 = dynamicResourceExtension38.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter86.Value = value38;
			context.PopParent();
			style29.Add(setter85);
			Setter setter87 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter88 = setter;
			setter88.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension39 = new DynamicResourceExtension("ToggleButtonBorderBrushCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value39 = dynamicResourceExtension39.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter88.Value = value39;
			context.PopParent();
			style29.Add(setter87);
			Setter setter89 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter90 = setter;
			setter90.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension40 = new DynamicResourceExtension("ToggleButtonForegroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value40 = dynamicResourceExtension40.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter90.Value = value40;
			context.PopParent();
			style29.Add(setter89);
			context.PopParent();
			style21.Add(style28);
			context.PopParent();
			controlTheme.Add(style20);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_63
	{
		private class XamlClosure_64
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Controls children = ((Panel)intermediateRoot).Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				panel.Name = "PART_MouseTracker";
				service = panel;
				context.AvaloniaNameScope.Register("PART_MouseTracker", service);
				panel.SetValue(Layoutable.HeightProperty, 1.0, BindingPriority.Template);
				panel.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				((ISupportInitialize)panel).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Panel panel3;
				Panel panel4 = (panel3 = new Panel());
				((ISupportInitialize)panel4).BeginInit();
				children2.Add(panel4);
				panel3.Name = "PART_Container";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_Container", service);
				Controls children3 = panel3.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children3.Add(border2);
				border.Name = "PART_Background";
				service = border;
				context.AvaloniaNameScope.Register("PART_Background", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children4 = panel3.Children;
				CaptionButtons captionButtons;
				CaptionButtons captionButtons2 = (captionButtons = new CaptionButtons());
				((ISupportInitialize)captionButtons2).BeginInit();
				children4.Add(captionButtons2);
				captionButtons.Name = "PART_CaptionButtons";
				service = captionButtons;
				context.AvaloniaNameScope.Register("PART_CaptionButtons", service);
				captionButtons.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				captionButtons.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				captionButtons.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)captionButtons).EndInit();
				((ISupportInitialize)panel3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TitleBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.VerticalAlignmentProperty;
			setter4.Value = VerticalAlignment.Top;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.HorizontalAlignmentProperty;
			setter5.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.BackgroundProperty;
			setter6.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_64.Build, context)
			};
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":fullscreen");
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			style3.Add(setter8);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Border))
				.Name("PART_Background");
			Setter setter10 = new Setter();
			setter10.Property = InputElement.IsHitTestVisibleProperty;
			setter10.Value = true;
			style4.Add(setter10);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Panel))
				.Name("PART_MouseTracker");
			Setter setter11 = new Setter();
			setter11.Property = Panel.BackgroundProperty;
			setter11.Value = new ImmutableSolidColorBrush(16777215u);
			style5.Add(setter11);
			controlTheme.Add(style5);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Panel))
				.Name("PART_Container");
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Visual.RenderTransformProperty;
			setter13.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "translateY(-30px)");
			context.PopParent();
			style7.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			TransformOperationsTransition transformOperationsTransition = new TransformOperationsTransition();
			transformOperationsTransition.Property = Visual.RenderTransformProperty;
			transformOperationsTransition.Duration = TimeSpan.FromTicks(2500000L);
			transitions.Add(transformOperationsTransition);
			setter14.Value = transitions;
			style7.Add(setter14);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Class(":pointerover")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_Container");
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = Visual.RenderTransformProperty;
			setter16.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			style9.Add(setter15);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_65
	{
		private class XamlClosure_66
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children2.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter2";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter2", service);
				contentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TransitioningContentControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_66.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_67
	{
		private class XamlClosure_68
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TreeView);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderBrushProperty;
			setter2.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.BorderThicknessProperty;
			setter3.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.PaddingProperty;
			setter4.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter5.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter6.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter7.Value = true;
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.TemplateProperty;
			setter8.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_68.Build, context)
			};
			controlTheme.Add(setter8);
			return controlTheme;
		}
	}

	private class XamlClosure_69
	{
		private class XamlClosure_70
		{
			private class XamlClosure_71
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new StackPanel();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					StackPanel stackPanel = (StackPanel)intermediateRoot;
					context.PushParent(stackPanel);
					stackPanel.SetValue(Layoutable.MarginProperty, new Thickness(12.0, 12.0, 12.0, 12.0), BindingPriority.Template);
					stackPanel.SetValue(StackPanel.SpacingProperty, 8.0, BindingPriority.Template);
					AttachedProperty<IBrush?> foregroundProperty = TextElement.ForegroundProperty;
					DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
					context.ProvideTargetProperty = TextElement.ForegroundProperty;
					IBinding binding = dynamicResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					stackPanel.Bind(foregroundProperty, binding);
					Controls children = stackPanel.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					TextBlock textBlock5 = textBlock3;
					textBlock5.SetValue(TextBlock.FontWeightProperty, FontWeight.Medium, BindingPriority.Template);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENotifications_002EINotification_002CAvalonia_002EControls_002ETitle_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock5.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					Controls children2 = stackPanel.Children;
					TextBlock textBlock6;
					TextBlock textBlock7 = (textBlock6 = new TextBlock());
					((ISupportInitialize)textBlock7).BeginInit();
					children2.Add(textBlock7);
					TextBlock textBlock8 = (textBlock3 = textBlock6);
					context.PushParent(textBlock3);
					TextBlock textBlock9 = textBlock3;
					textBlock9.SetValue(Layoutable.MaxHeightProperty, 80.0, BindingPriority.Template);
					textBlock9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 12.0, 0.0), BindingPriority.Template);
					StyledProperty<string?> textProperty2 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENotifications_002EINotification_002CAvalonia_002EControls_002EMessage_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding3 = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock9.Bind(textProperty2, binding3);
					textBlock9.SetValue(TextBlock.TextWrappingProperty, TextWrapping.Wrap, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)textBlock8).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			private class XamlClosure_72
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new TextBlock();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					TextBlock textBlock = (TextBlock)intermediateRoot;
					context.PushParent(textBlock);
					textBlock.SetValue(Layoutable.MarginProperty, new Thickness(12.0, 12.0, 12.0, 12.0), BindingPriority.Template);
					StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
					DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
					context.ProvideTargetProperty = TextBlock.ForegroundProperty;
					IBinding binding = dynamicResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock.Bind(foregroundProperty, binding);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ReversibleStackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ReversibleStackPanel reversibleStackPanel = (ReversibleStackPanel)intermediateRoot;
				context.PushParent(reversibleStackPanel);
				reversibleStackPanel.Name = "PART_Items";
				service = reversibleStackPanel;
				context.AvaloniaNameScope.Register("PART_Items", service);
				DataTemplates dataTemplates = reversibleStackPanel.DataTemplates;
				DataTemplate dataTemplate;
				DataTemplate item = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				DataTemplate dataTemplate2 = dataTemplate;
				dataTemplate2.DataType = typeof(INotification);
				dataTemplate2.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_71.Build, context);
				context.PopParent();
				dataTemplates.Add(item);
				DataTemplates dataTemplates2 = reversibleStackPanel.DataTemplates;
				DataTemplate item2 = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				DataTemplate dataTemplate3 = dataTemplate;
				dataTemplate3.DataType = typeof(string);
				dataTemplate3.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_72.Build, context);
				context.PopParent();
				dataTemplates2.Add(item2);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(WindowNotificationManager);
			Setter setter = new Setter();
			setter.Property = Layoutable.MarginProperty;
			setter.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_70.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":topleft").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.VerticalAlignmentProperty;
			setter4.Value = VerticalAlignment.Top;
			style.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.HorizontalAlignmentProperty;
			setter5.Value = HorizontalAlignment.Left;
			style.Add(setter5);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":topright").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter6 = new Setter();
			setter6.Property = Layoutable.VerticalAlignmentProperty;
			setter6.Value = VerticalAlignment.Top;
			style2.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = Layoutable.HorizontalAlignmentProperty;
			setter7.Value = HorizontalAlignment.Right;
			style2.Add(setter7);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":bottomleft").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter8 = new Setter();
			setter8.Property = ReversibleStackPanel.ReverseOrderProperty;
			setter8.Value = true;
			style3.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = Layoutable.VerticalAlignmentProperty;
			setter9.Value = VerticalAlignment.Bottom;
			style3.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.HorizontalAlignmentProperty;
			setter10.Value = HorizontalAlignment.Left;
			style3.Add(setter10);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":bottomright").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter11 = new Setter();
			setter11.Property = ReversibleStackPanel.ReverseOrderProperty;
			setter11.Value = true;
			style4.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.VerticalAlignmentProperty;
			setter12.Value = VerticalAlignment.Bottom;
			style4.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.HorizontalAlignmentProperty;
			setter13.Value = HorizontalAlignment.Right;
			style4.Add(setter13);
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_73
	{
		private class XamlClosure_74
		{
			private class DynamicSetters_75
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border3).EndInit();
				Controls children3 = ((Panel)intermediateRoot).Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children3.Add(panel2);
				panel.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				panel.Bind(Layoutable.MarginProperty, new TemplateBinding(Window.WindowDecorationMarginProperty).ProvideValue());
				((ISupportInitialize)panel).EndInit();
				Controls children4 = ((Panel)intermediateRoot).Children;
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				children4.Add(visualLayerManager2);
				ChromeOverlayLayer chromeOverlayLayer = visualLayerManager.ChromeOverlayLayer;
				TitleBar titleBar;
				TitleBar titleBar2 = (titleBar = new TitleBar());
				((ISupportInitialize)titleBar2).BeginInit();
				chromeOverlayLayer.Add(titleBar2);
				((ISupportInitialize)titleBar).EndInit();
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_75.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Window);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemRegionBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TopLevel.TransparencyBackgroundFallbackProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlBackgroundAltHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TopLevel.SystemBarColorProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlBackgroundAltHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = TemplatedControl.TemplateProperty;
			setter14.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_74.Build, context)
			};
			controlTheme.Add(setter14);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_76
	{
		private class XamlClosure_77
		{
			private class DynamicSetters_78
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_78.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ComboBoxItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ComboBoxItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ComboBoxItemBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ComboBoxItemThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter8.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_77.Build, context)
			};
			controlTheme.Add(setter9);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ComboBoxItemBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			style3.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ComboBoxItemBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value5;
			context.PopParent();
			style3.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ComboBoxItemForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value6;
			context.PopParent();
			style3.Add(setter14);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ComboBoxItemBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			style5.Add(setter16);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ComboBoxItemBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style5.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ComboBoxItemForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style5.Add(setter20);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ComboBoxItemBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style7.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ComboBoxItemBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value11;
			context.PopParent();
			style7.Add(setter24);
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ComboBoxItemForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value12;
			context.PopParent();
			style7.Add(setter26);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ComboBoxItemBackgroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value13;
			context.PopParent();
			style11.Add(setter28);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ComboBoxItemBorderBrushSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value14;
			context.PopParent();
			style11.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ComboBoxItemForegroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value15;
			context.PopParent();
			style11.Add(setter32);
			context.PopParent();
			style9.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ComboBoxItemBackgroundSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value16;
			context.PopParent();
			style13.Add(setter34);
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ComboBoxItemBorderBrushSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value17;
			context.PopParent();
			style13.Add(setter36);
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ComboBoxItemForegroundSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value18;
			context.PopParent();
			style13.Add(setter38);
			context.PopParent();
			style9.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ComboBoxItemBackgroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value19;
			context.PopParent();
			style15.Add(setter40);
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ComboBoxItemBorderBrushSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value20;
			context.PopParent();
			style15.Add(setter42);
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ComboBoxItemForegroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value21;
			context.PopParent();
			style15.Add(setter44);
			context.PopParent();
			style9.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ComboBoxItemBackgroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value22;
			context.PopParent();
			style17.Add(setter46);
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("ComboBoxItemBorderBrushSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value23;
			context.PopParent();
			style17.Add(setter48);
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("ComboBoxItemForegroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value24;
			context.PopParent();
			style17.Add(setter50);
			context.PopParent();
			style9.Add(style16);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_79
	{
		private class XamlClosure_80
		{
			private class DynamicSetters_81
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_81.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(ContentControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_80.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_82
	{
		private class XamlClosure_83
		{
			private class DynamicSetters_84
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				border3.Child = visualLayerManager2;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_84.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)border3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(EmbeddableControlRoot);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemRegionBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TopLevel.SystemBarColorProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlBackgroundAltHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.TemplateProperty;
			setter12.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_83.Build, context)
			};
			controlTheme.Add(setter12);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_85
	{
		private class XamlClosure_86
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				return new GradientStops();
			}
		}

		private class XamlClosure_87
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				GradientStops gradientStops = new GradientStops();
				GradientStop gradientStop = new GradientStop();
				gradientStop.Offset = 0.0;
				gradientStop.Color = Color.FromUInt32(4294957679u);
				gradientStops.Add(gradientStop);
				GradientStop gradientStop2 = new GradientStop();
				gradientStop2.Offset = 1.0;
				gradientStop2.Color = Color.FromUInt32(4294886182u);
				gradientStops.Add(gradientStop2);
				return gradientStops;
			}
		}

		private class XamlClosure_88
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				DrawingGroup drawingGroup = new DrawingGroup();
				DrawingCollection children = drawingGroup.Children;
				GeometryDrawing geometryDrawing = new GeometryDrawing();
				geometryDrawing.Brush = new ImmutableSolidColorBrush(16777215u);
				geometryDrawing.Geometry = Geometry.Parse("F1M16,16L0,16 0,0 16,0z");
				children.Add(geometryDrawing);
				DrawingCollection children2 = drawingGroup.Children;
				GeometryDrawing geometryDrawing2 = new GeometryDrawing();
				geometryDrawing2.Brush = new ImmutableSolidColorBrush(4294375158u);
				geometryDrawing2.Geometry = Geometry.Parse("F1M14.5,0L6.39,0 5.39,2 2.504,2C1.677,2,1,2.673,1,3.5L1,10.582 1,10.586 1,15.414 3,13.414 3,16 7,16 7,13.414 9,15.414 9,13 14.5,13C15.327,13,16,12.327,16,11.5L16,1.5C16,0.673,15.327,0,14.5,0");
				children2.Add(geometryDrawing2);
				DrawingCollection children3 = drawingGroup.Children;
				GeometryDrawing geometryDrawing3 = new GeometryDrawing();
				geometryDrawing3.Brush = new ImmutableSolidColorBrush(4292654713u);
				geometryDrawing3.Geometry = Geometry.Parse("F1M14,3L7.508,3 8.008,2 8.012,2 14,2z M14.5,1L7.008,1 6.008,3 2.504,3C2.227,3,2,3.224,2,3.5L2,9.582 4.998,6.586 9,10.586 9,12 14.5,12C14.775,12,15,11.776,15,11.5L15,1.5C15,1.224,14.775,1,14.5,1");
				children3.Add(geometryDrawing3);
				DrawingCollection children4 = drawingGroup.Children;
				GeometryDrawing geometryDrawing4 = new GeometryDrawing();
				geometryDrawing4.Brush = new ImmutableSolidColorBrush(4278211228u);
				geometryDrawing4.Geometry = Geometry.Parse("F1M8,11L5,8 2,11 2,13 4,11 4,15 6,15 6,11 8,13z");
				children4.Add(geometryDrawing4);
				DrawingCollection children5 = drawingGroup.Children;
				GeometryDrawing geometryDrawing5 = new GeometryDrawing();
				geometryDrawing5.Brush = new ImmutableSolidColorBrush(4293980145u);
				geometryDrawing5.Geometry = Geometry.Parse("F1M8.0001,1.9996L7.5001,3.0006 14.0001,3.0006 14.0001,1.9996z");
				children5.Add(geometryDrawing5);
				return drawingGroup;
			}
		}

		private class XamlClosure_89
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				ResourceSelectorConverter resourceSelectorConverter = new ResourceSelectorConverter();
				DrawingGroup drawingGroup = new DrawingGroup();
				drawingGroup.Children.Add(new GeometryDrawing
				{
					Geometry = Geometry.Parse("M 0 0 L 16 16")
				});
				DrawingCollection children = drawingGroup.Children;
				GeometryDrawing geometryDrawing = new GeometryDrawing();
				geometryDrawing.Geometry = Geometry.Parse("M 0 3 C 0,1 0,1 2,1 L 5 1 C 5.5,1 6,1 6.5,1.5 L 8 3 L 14 3 C 16,3 16,3 16,5                         L 16,12 C 16,14 16,14 14,14                         L 2,14 C 0,14 0,14 0,12 Z");
				LinearGradientBrush linearGradientBrush = new LinearGradientBrush();
				linearGradientBrush.StartPoint = new RelativePoint(1.0, 4.0, RelativeUnit.Absolute);
				linearGradientBrush.EndPoint = new RelativePoint(23.0, 20.0, RelativeUnit.Absolute);
				GradientStops gradientStops = linearGradientBrush.GradientStops;
				GradientStop gradientStop = new GradientStop();
				gradientStop.Offset = 0.0;
				gradientStop.Color = Color.FromUInt32(4294950936u);
				gradientStops.Add(gradientStop);
				GradientStops gradientStops2 = linearGradientBrush.GradientStops;
				GradientStop gradientStop2 = new GradientStop();
				gradientStop2.Offset = 1.0;
				gradientStop2.Color = Color.FromUInt32(4292846381u);
				gradientStops2.Add(gradientStop2);
				geometryDrawing.Brush = linearGradientBrush;
				children.Add(geometryDrawing);
				DrawingCollection children2 = drawingGroup.Children;
				GeometryDrawing geometryDrawing2 = new GeometryDrawing();
				geometryDrawing2.Geometry = Geometry.Parse("M 0 4.5 L 8 4.5 L 8 9 L 0 9 Z");
				LinearGradientBrush linearGradientBrush2 = new LinearGradientBrush();
				linearGradientBrush2.StartPoint = new RelativePoint(0.0, 4.5, RelativeUnit.Absolute);
				linearGradientBrush2.EndPoint = new RelativePoint(0.0, 5.0, RelativeUnit.Absolute);
				GradientStops gradientStops3 = linearGradientBrush2.GradientStops;
				GradientStop gradientStop3 = new GradientStop();
				gradientStop3.Offset = 0.0;
				gradientStop3.Color = Color.FromUInt32(14131224u);
				gradientStops3.Add(gradientStop3);
				GradientStops gradientStops4 = linearGradientBrush2.GradientStops;
				GradientStop gradientStop4 = new GradientStop();
				gradientStop4.Offset = 1.0;
				gradientStop4.Color = Color.FromUInt32(2144837656u);
				gradientStops4.Add(gradientStop4);
				geometryDrawing2.Brush = linearGradientBrush2;
				children2.Add(geometryDrawing2);
				DrawingCollection children3 = drawingGroup.Children;
				GeometryDrawing geometryDrawing3 = new GeometryDrawing();
				geometryDrawing3.Geometry = Geometry.Parse("M 0 9 C 0,5 0,5 2,5 L 5 5 C 5.5,5 6,5 6.5,4.75 L 8 4 L 14 4 C 16,4 16,4 16,6                                                     L 16,11 C 16,13 16,13 14,13                                                     L 2,13 C 0,13 0,13 0,11 Z");
				LinearGradientBrush linearGradientBrush3 = new LinearGradientBrush();
				linearGradientBrush3.StartPoint = new RelativePoint(1.0, 6.0, RelativeUnit.Absolute);
				linearGradientBrush3.EndPoint = new RelativePoint(23.0, 19.0, RelativeUnit.Absolute);
				GradientStops gradientStops5 = linearGradientBrush3.GradientStops;
				GradientStop gradientStop5 = new GradientStop();
				gradientStop5.Offset = 0.0;
				gradientStop5.Color = Color.FromUInt32(4294960797u);
				gradientStops5.Add(gradientStop5);
				GradientStops gradientStops6 = linearGradientBrush3.GradientStops;
				GradientStop gradientStop6 = new GradientStop();
				gradientStop6.Offset = 1.0;
				gradientStop6.Color = Color.FromUInt32(4294953271u);
				gradientStops6.Add(gradientStop6);
				geometryDrawing3.Brush = linearGradientBrush3;
				children3.Add(geometryDrawing3);
				DrawingCollection children4 = drawingGroup.Children;
				GeometryDrawing geometryDrawing4 = new GeometryDrawing();
				geometryDrawing4.Geometry = Geometry.Parse("M 0 9 C 0,5 0,5 2,5 L 5 5 C 5.5,5 6,5 6.5,4.75 L 8 4 L 14 4                                                     L 8 4.25 C 6,5.25 5.5,5.25 5.125,5.25 L 2 5.25 C 0,5.25 0,5.25 0,9.25 z");
				geometryDrawing4.Brush = new ImmutableSolidColorBrush(2147483647u);
				children4.Add(geometryDrawing4);
				resourceSelectorConverter.Add("Icon_Folder", drawingGroup);
				DrawingGroup drawingGroup2 = new DrawingGroup();
				drawingGroup2.Children.Add(new GeometryDrawing
				{
					Geometry = Geometry.Parse("M 0 0 L 16 16")
				});
				DrawingCollection children5 = drawingGroup2.Children;
				GeometryDrawing geometryDrawing5 = new GeometryDrawing();
				geometryDrawing5.Geometry = Geometry.Parse("M 2 0 L 10 0 L 14 4 L 14 16 L 2 16 Z");
				geometryDrawing5.Brush = new ImmutableSolidColorBrush(4286150516u);
				children5.Add(geometryDrawing5);
				DrawingCollection children6 = drawingGroup2.Children;
				GeometryDrawing geometryDrawing6 = new GeometryDrawing();
				geometryDrawing6.Geometry = Geometry.Parse("M 3 1 L 9.7 1 L 13 4.3 L 13 15 L 3 15 Z");
				geometryDrawing6.Brush = new ImmutableSolidColorBrush(4294638330u);
				children6.Add(geometryDrawing6);
				DrawingCollection children7 = drawingGroup2.Children;
				GeometryDrawing geometryDrawing7 = new GeometryDrawing();
				geometryDrawing7.Geometry = Geometry.Parse("L 9 1 L 9 5 L 14 5 L 14 4 L 10 4 L 10 1 Z");
				geometryDrawing7.Brush = new ImmutableSolidColorBrush(4286150516u);
				children7.Add(geometryDrawing7);
				resourceSelectorConverter.Add("Icon_File", drawingGroup2);
				DrawingGroup drawingGroup3 = new DrawingGroup();
				drawingGroup3.Children.Add(new GeometryDrawing
				{
					Geometry = Geometry.Parse("M 0 0 L 16 16")
				});
				DrawingCollection children8 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing8 = new GeometryDrawing();
				geometryDrawing8.Geometry = Geometry.Parse("M 4 5 L 12 5 L 14.5 7.5 C 15,8 15,8 15,9 L 1 9 C 1,8 1,8 1.5 7.5 Z");
				geometryDrawing8.Brush = new ImmutableSolidColorBrush(4292994022u);
				children8.Add(geometryDrawing8);
				DrawingCollection children9 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing9 = new GeometryDrawing();
				geometryDrawing9.Geometry = Geometry.Parse("M 12 5 L 14.5 7.5 C 15,8 15,8 15,9 L 10 9 L 10 5 Z");
				LinearGradientBrush linearGradientBrush4 = new LinearGradientBrush();
				linearGradientBrush4.StartPoint = new RelativePoint(12.0, 5.0, RelativeUnit.Absolute);
				linearGradientBrush4.EndPoint = new RelativePoint(11.5, 5.5, RelativeUnit.Absolute);
				GradientStops gradientStops7 = linearGradientBrush4.GradientStops;
				GradientStop gradientStop7 = new GradientStop();
				gradientStop7.Offset = 0.0;
				gradientStop7.Color = Color.FromUInt32(4291678161u);
				gradientStops7.Add(gradientStop7);
				GradientStops gradientStops8 = linearGradientBrush4.GradientStops;
				GradientStop gradientStop8 = new GradientStop();
				gradientStop8.Offset = 1.0;
				gradientStop8.Color = Color.FromUInt32(13488081u);
				gradientStops8.Add(gradientStop8);
				geometryDrawing9.Brush = linearGradientBrush4;
				children9.Add(geometryDrawing9);
				DrawingCollection children10 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing10 = new GeometryDrawing();
				geometryDrawing10.Geometry = Geometry.Parse("M 4 5 L 1.5 7.5 C 1,8 1,8 1,9 L 4 9 L 6 9 L 6 5 Z");
				LinearGradientBrush linearGradientBrush5 = new LinearGradientBrush();
				linearGradientBrush5.StartPoint = new RelativePoint(4.0, 5.0, RelativeUnit.Absolute);
				linearGradientBrush5.EndPoint = new RelativePoint(4.5, 5.5, RelativeUnit.Absolute);
				GradientStops gradientStops9 = linearGradientBrush5.GradientStops;
				GradientStop gradientStop9 = new GradientStop();
				gradientStop9.Offset = 0.0;
				gradientStop9.Color = Color.FromUInt32(4291678161u);
				gradientStops9.Add(gradientStop9);
				GradientStops gradientStops10 = linearGradientBrush5.GradientStops;
				GradientStop gradientStop10 = new GradientStop();
				gradientStop10.Offset = 1.0;
				gradientStop10.Color = Color.FromUInt32(13488081u);
				gradientStops10.Add(gradientStop10);
				geometryDrawing10.Brush = linearGradientBrush5;
				children10.Add(geometryDrawing10);
				DrawingCollection children11 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing11 = new GeometryDrawing();
				geometryDrawing11.Geometry = Geometry.Parse("M 1 9 C 1,8 1,8 2,8 L 14 8                                                     C 15,8 15,8 15,9 L 15 11                                                     C 15,12 15,12 14,12 L 2 12                                                     C 1,12 1,12 1,11 Z");
				LinearGradientBrush linearGradientBrush6 = new LinearGradientBrush();
				linearGradientBrush6.StartPoint = new RelativePoint(0.0, 8.0, RelativeUnit.Absolute);
				linearGradientBrush6.EndPoint = new RelativePoint(0.0, 12.0, RelativeUnit.Absolute);
				GradientStops gradientStops11 = linearGradientBrush6.GradientStops;
				GradientStop gradientStop11 = new GradientStop();
				gradientStop11.Offset = 0.0;
				gradientStop11.Color = Color.FromUInt32(4285756276u);
				gradientStops11.Add(gradientStop11);
				GradientStops gradientStops12 = linearGradientBrush6.GradientStops;
				GradientStop gradientStop12 = new GradientStop();
				gradientStop12.Offset = 1.0;
				gradientStop12.Color = Color.FromUInt32(4289243304u);
				gradientStops12.Add(gradientStop12);
				geometryDrawing11.Brush = linearGradientBrush6;
				children11.Add(geometryDrawing11);
				DrawingCollection children12 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing12 = new GeometryDrawing();
				geometryDrawing12.Geometry = Geometry.Parse("M 2 9 C 2,8 2,8 3,8 L 13 8                                                     C 14,8 14,8 14,9 L 14 10                                                     C 14,11 14,11 13,11 L 3 11                                                     C 2,11 2,11 2,10 Z");
				LinearGradientBrush linearGradientBrush7 = new LinearGradientBrush();
				linearGradientBrush7.StartPoint = new RelativePoint(0.0, 8.0, RelativeUnit.Absolute);
				linearGradientBrush7.EndPoint = new RelativePoint(0.0, 11.0, RelativeUnit.Absolute);
				GradientStops gradientStops13 = linearGradientBrush7.GradientStops;
				GradientStop gradientStop13 = new GradientStop();
				gradientStop13.Offset = 0.0;
				gradientStop13.Color = Color.FromUInt32(4281545523u);
				gradientStops13.Add(gradientStop13);
				GradientStops gradientStops14 = linearGradientBrush7.GradientStops;
				GradientStop gradientStop14 = new GradientStop();
				gradientStop14.Offset = 1.0;
				gradientStop14.Color = Color.FromUInt32(4284111450u);
				gradientStops14.Add(gradientStop14);
				geometryDrawing12.Brush = linearGradientBrush7;
				children12.Add(geometryDrawing12);
				DrawingCollection children13 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing13 = new GeometryDrawing();
				geometryDrawing13.Geometry = new EllipseGeometry
				{
					Rect = Rect.Parse("2.5,8.5,2,2")
				};
				RadialGradientBrush radialGradientBrush = new RadialGradientBrush();
				radialGradientBrush.GradientOrigin = new RelativePoint(3.5, 9.5, RelativeUnit.Absolute);
				radialGradientBrush.Center = new RelativePoint(3.5, 9.5, RelativeUnit.Absolute);
				GradientStops gradientStops15 = radialGradientBrush.GradientStops;
				GradientStop gradientStop15 = new GradientStop();
				gradientStop15.Offset = 0.8;
				gradientStop15.Color = Color.FromUInt32(1073872641u);
				gradientStops15.Add(gradientStop15);
				GradientStops gradientStops16 = radialGradientBrush.GradientStops;
				GradientStop gradientStop16 = new GradientStop();
				gradientStop16.Offset = 1.0;
				gradientStop16.Color = Color.FromUInt32(130817u);
				gradientStops16.Add(gradientStop16);
				geometryDrawing13.Brush = radialGradientBrush;
				children13.Add(geometryDrawing13);
				DrawingCollection children14 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing14 = new GeometryDrawing();
				geometryDrawing14.Geometry = new EllipseGeometry
				{
					Rect = Rect.Parse("3,9,1,1")
				};
				RadialGradientBrush radialGradientBrush2 = new RadialGradientBrush();
				radialGradientBrush2.GradientOrigin = new RelativePoint(3.5, 9.5, RelativeUnit.Absolute);
				radialGradientBrush2.Center = new RelativePoint(3.25, 9.75, RelativeUnit.Absolute);
				GradientStops gradientStops17 = radialGradientBrush2.GradientStops;
				GradientStop gradientStop17 = new GradientStop();
				gradientStop17.Offset = 0.0;
				gradientStop17.Color = Color.FromUInt32(4290183094u);
				gradientStops17.Add(gradientStop17);
				GradientStops gradientStops18 = radialGradientBrush2.GradientStops;
				GradientStop gradientStop18 = new GradientStop();
				gradientStop18.Offset = 1.0;
				gradientStop18.Color = Color.FromUInt32(4278320897u);
				gradientStops18.Add(gradientStop18);
				geometryDrawing14.Brush = radialGradientBrush2;
				children14.Add(geometryDrawing14);
				DrawingCollection children15 = drawingGroup3.Children;
				GeometryDrawing geometryDrawing15 = new GeometryDrawing();
				geometryDrawing15.Geometry = Geometry.Parse("M 3.23483495705 9.76516504295 A 0.375,0.375 180 1 0 3.76516504295,9.23483495705 A 0.4375,0.4375 135 0 1 3.23483495705,9.76516504295 Z");
				geometryDrawing15.Brush = new ImmutableSolidColorBrush(4278235904u);
				children15.Add(geometryDrawing15);
				resourceSelectorConverter.Add("Icon_Volume", drawingGroup3);
				return resourceSelectorConverter;
			}
		}

		private class XamlClosure_90
		{
			private class XamlClosure_91
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new StackPanel();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					StackPanel stackPanel = (StackPanel)intermediateRoot;
					context.PushParent(stackPanel);
					stackPanel.SetValue(StackPanel.SpacingProperty, 4.0, BindingPriority.Template);
					stackPanel.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
					stackPanel.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
					Controls children = stackPanel.Children;
					Image image;
					Image image2 = (image = new Image());
					((ISupportInitialize)image2).BeginInit();
					children.Add(image2);
					Image image3;
					Image image4 = (image3 = image);
					context.PushParent(image3);
					image3.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
					image3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
					StyledProperty<IImage?> sourceProperty = Image.SourceProperty;
					DrawingImage drawingImage;
					DrawingImage value = (drawingImage = new DrawingImage());
					context.PushParent(drawingImage);
					StyledProperty<Drawing?> drawingProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension compiledBindingExtension;
					CompiledBindingExtension compiledBindingExtension2 = (compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EIconKey_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build()));
					context.PushParent(compiledBindingExtension);
					StaticResourceExtension staticResourceExtension = new StaticResourceExtension("Icons");
					context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
					object? obj = staticResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					compiledBindingExtension.Converter = (IValueConverter)obj;
					context.PopParent();
					context.ProvideTargetProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension binding = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					drawingImage.Bind(drawingProperty, binding);
					context.PopParent();
					image3.SetValue(sourceProperty, value, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)image4).EndInit();
					Controls children2 = stackPanel.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children2.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EDisplayName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension3.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock3.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			private class DynamicSetters_92
			{
				public static void DynamicSetter_1(SelectingItemsControl P_0, CompiledBindingExtension P_1)
				{
					if (P_1 != null)
					{
						IBinding binding = P_1;
						P_0.Bind(SelectingItemsControl.SelectedItemProperty, binding);
					}
					else
					{
						P_0.SelectedItem = P_1;
					}
				}
			}

			private class XamlClosure_93
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Border();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					((AvaloniaObject)intermediateRoot).SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
					((AvaloniaObject)intermediateRoot).SetValue(Border.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
					((AvaloniaObject)intermediateRoot).SetValue(Border.BackgroundProperty, (IBrush)new ImmutableSolidColorBrush(16777216u), BindingPriority.Template);
					Rectangle rectangle;
					Rectangle rectangle2 = (rectangle = new Rectangle());
					((ISupportInitialize)rectangle2).BeginInit();
					((Decorator)intermediateRoot).Child = rectangle2;
					rectangle.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
					rectangle.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
					rectangle.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
					((ISupportInitialize)rectangle).EndInit();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			private class XamlClosure_94
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Grid();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					Grid grid = (Grid)intermediateRoot;
					context.PushParent(grid);
					grid.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
					ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition = new ColumnDefinition();
					columnDefinition.SetValue(DefinitionBase.SharedSizeGroupProperty, "Icon", BindingPriority.Template);
					columnDefinitions.Add(columnDefinition);
					ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition2 = new ColumnDefinition();
					columnDefinition2.SetValue(DefinitionBase.SharedSizeGroupProperty, "Name", BindingPriority.Template);
					columnDefinitions2.Add(columnDefinition2);
					ColumnDefinitions columnDefinitions3 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition3 = new ColumnDefinition();
					columnDefinition3.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions3.Add(columnDefinition3);
					ColumnDefinitions columnDefinitions4 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition4 = new ColumnDefinition();
					columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "Modified", BindingPriority.Template);
					columnDefinitions4.Add(columnDefinition4);
					ColumnDefinitions columnDefinitions5 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition5 = new ColumnDefinition();
					columnDefinition5.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions5.Add(columnDefinition5);
					ColumnDefinitions columnDefinitions6 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition6 = new ColumnDefinition();
					columnDefinition6.SetValue(DefinitionBase.SharedSizeGroupProperty, "Type", BindingPriority.Template);
					columnDefinitions6.Add(columnDefinition6);
					ColumnDefinitions columnDefinitions7 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition7 = new ColumnDefinition();
					columnDefinition7.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions7.Add(columnDefinition7);
					ColumnDefinitions columnDefinitions8 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition8 = new ColumnDefinition();
					columnDefinition8.SetValue(DefinitionBase.SharedSizeGroupProperty, "Size", BindingPriority.Template);
					columnDefinitions8.Add(columnDefinition8);
					ColumnDefinitions columnDefinitions9 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition9 = new ColumnDefinition();
					columnDefinition9.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions9.Add(columnDefinition9);
					Controls children = grid.Children;
					Image image;
					Image image2 = (image = new Image());
					((ISupportInitialize)image2).BeginInit();
					children.Add(image2);
					Image image3;
					Image image4 = (image3 = image);
					context.PushParent(image3);
					image3.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
					image3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
					StyledProperty<IImage?> sourceProperty = Image.SourceProperty;
					DrawingImage drawingImage;
					DrawingImage value = (drawingImage = new DrawingImage());
					context.PushParent(drawingImage);
					StyledProperty<Drawing?> drawingProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension compiledBindingExtension;
					CompiledBindingExtension compiledBindingExtension2 = (compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EIconKey_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build()));
					context.PushParent(compiledBindingExtension);
					StaticResourceExtension staticResourceExtension = new StaticResourceExtension("Icons");
					context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
					object? obj = staticResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					compiledBindingExtension.Converter = (IValueConverter)obj;
					context.PopParent();
					context.ProvideTargetProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension binding = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					drawingImage.Bind(drawingProperty, binding);
					context.PopParent();
					image3.SetValue(sourceProperty, value, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)image4).EndInit();
					Controls children2 = grid.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children2.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					TextBlock textBlock5 = textBlock3;
					textBlock5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EDisplayName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension3.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock5.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					Controls children3 = grid.Children;
					TextBlock textBlock6;
					TextBlock textBlock7 = (textBlock6 = new TextBlock());
					((ISupportInitialize)textBlock7).BeginInit();
					children3.Add(textBlock7);
					TextBlock textBlock8 = (textBlock3 = textBlock6);
					context.PushParent(textBlock3);
					TextBlock textBlock9 = textBlock3;
					textBlock9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
					StyledProperty<string?> textProperty2 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EModified_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding3 = compiledBindingExtension4.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock9.Bind(textProperty2, binding3);
					context.PopParent();
					((ISupportInitialize)textBlock8).EndInit();
					Controls children4 = grid.Children;
					TextBlock textBlock10;
					TextBlock textBlock11 = (textBlock10 = new TextBlock());
					((ISupportInitialize)textBlock11).BeginInit();
					children4.Add(textBlock11);
					TextBlock textBlock12 = (textBlock3 = textBlock10);
					context.PushParent(textBlock3);
					TextBlock textBlock13 = textBlock3;
					textBlock13.SetValue(Grid.ColumnProperty, 5, BindingPriority.Template);
					StyledProperty<string?> textProperty3 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EType_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding4 = compiledBindingExtension5.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock13.Bind(textProperty3, binding4);
					context.PopParent();
					((ISupportInitialize)textBlock12).EndInit();
					Controls children5 = grid.Children;
					TextBlock textBlock14;
					TextBlock textBlock15 = (textBlock14 = new TextBlock());
					((ISupportInitialize)textBlock15).BeginInit();
					children5.Add(textBlock15);
					TextBlock textBlock16 = (textBlock3 = textBlock14);
					context.PushParent(textBlock3);
					TextBlock textBlock17 = textBlock3;
					textBlock17.SetValue(Grid.ColumnProperty, 7, BindingPriority.Template);
					textBlock17.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
					StyledProperty<string?> textProperty4 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension();
					compiledBindingExtension6.Path = new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002ESize_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build();
					compiledBindingExtension6.Converter = new FileSizeStringConverter();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding5 = compiledBindingExtension6.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock17.Bind(textProperty4, binding5);
					context.PopParent();
					((ISupportInitialize)textBlock16).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				DockPanel dockPanel2 = dockPanel;
				Controls children = dockPanel2.Children;
				ListBox listBox;
				ListBox listBox2 = (listBox = new ListBox());
				((ISupportInitialize)listBox2).BeginInit();
				children.Add(listBox2);
				ListBox listBox3;
				ListBox listBox4 = (listBox3 = listBox);
				context.PushParent(listBox3);
				ListBox listBox5 = listBox3;
				listBox5.Name = "PART_QuickLinks";
				service = listBox5;
				context.AvaloniaNameScope.Register("PART_QuickLinks", service);
				listBox5.SetValue(DockPanel.DockProperty, Dock.Left, BindingPriority.Template);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EQuickLinks_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox5.Bind(itemsSourceProperty, binding);
				DirectProperty<SelectingItemsControl, int> selectedIndexProperty = SelectingItemsControl.SelectedIndexProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EQuickLinksSelectedIndex_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = SelectingItemsControl.SelectedIndexProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox5.Bind(selectedIndexProperty, binding2);
				listBox5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<IDataTemplate?> itemTemplateProperty = ItemsControl.ItemTemplateProperty;
				DataTemplate dataTemplate;
				DataTemplate value = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_91.Build, context);
				context.PopParent();
				listBox5.SetValue(itemTemplateProperty, value, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)listBox4).EndInit();
				Controls children2 = dockPanel2.Children;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = new DockPanel());
				((ISupportInitialize)dockPanel4).BeginInit();
				children2.Add(dockPanel4);
				DockPanel dockPanel5 = (dockPanel = dockPanel3);
				context.PushParent(dockPanel);
				DockPanel dockPanel6 = dockPanel;
				dockPanel6.Name = "NavBar";
				service = dockPanel6;
				context.AvaloniaNameScope.Register("NavBar", service);
				dockPanel6.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				dockPanel6.SetValue(Layoutable.MarginProperty, new Thickness(8.0, 5.0, 8.0, 0.0), BindingPriority.Template);
				dockPanel6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				Controls children3 = dockPanel6.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlHighlightAltBaseMediumLowBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding3 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding3);
				rectangle5.SetValue(Layoutable.HeightProperty, 1.0, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 0.0), BindingPriority.Template);
				rectangle5.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children4 = dockPanel6.Children;
				DockPanel dockPanel7;
				DockPanel dockPanel8 = (dockPanel7 = new DockPanel());
				((ISupportInitialize)dockPanel8).BeginInit();
				children4.Add(dockPanel8);
				DockPanel dockPanel9 = (dockPanel = dockPanel7);
				context.PushParent(dockPanel);
				DockPanel dockPanel10 = dockPanel;
				dockPanel10.SetValue(Layoutable.MarginProperty, new Thickness(4.0, 0.0, 4.0, 0.0), BindingPriority.Template);
				Controls children5 = dockPanel10.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children5.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("GoUp", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BGoUp_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding4 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(commandProperty, binding4);
				button5.SetValue(DockPanel.DockProperty, Dock.Left, BindingPriority.Template);
				button5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 8.0, 0.0), BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.SetValue(Path.DataProperty, Geometry.Parse("M 0 7 L 7 0 L 14 7 M 7 0 L 7 16"), BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding5 = compiledBindingExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding5);
				path5.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 1.0, 0.0, -1.0), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children6 = dockPanel10.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children6.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				StyledProperty<ICommand?> commandProperty2 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Refresh", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BRefresh_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding6 = compiledBindingExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(commandProperty2, binding6);
				button9.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				button9.SetValue(Layoutable.MarginProperty, new Thickness(8.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.SetValue(Path.DataProperty, Geometry.Parse("M18.62 3.32c.39 0 .7.29.76.66v3c0 .39-.28.7-.66.76h-3a.77.77 0 0 1-.1-1.52h1.08a7.42 7.42 0 1 0 2.65 4.37.77.77 0 1 1 1.5-.3 8.94 8.94 0 1 1-3-5.12V4.09c0-.43.35-.77.77-.77Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.FillProperty;
				CompiledBindingExtension binding7 = compiledBindingExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(fillProperty2, binding7);
				path9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.MarginProperty, new Thickness(-2.0, -4.0, 0.0, 0.0), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				Controls children7 = dockPanel10.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children7.Add(textBox2);
				TextBox textBox3;
				TextBox textBox4 = (textBox3 = textBox);
				context.PushParent(textBox3);
				TextBox textBox5 = textBox3;
				textBox5.Name = "Location";
				service = textBox5;
				context.AvaloniaNameScope.Register("Location", service);
				StyledProperty<string?> textProperty = TextBox.TextProperty;
				CompiledBindingExtension compiledBindingExtension7 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ELocation_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = TextBox.TextProperty;
				CompiledBindingExtension binding8 = compiledBindingExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox5.Bind(textProperty, binding8);
				List<KeyBinding> keyBindings = textBox5.KeyBindings;
				KeyBinding keyBinding;
				KeyBinding item = (keyBinding = new KeyBinding());
				context.PushParent(keyBinding);
				StyledProperty<ICommand> commandProperty3 = KeyBinding.CommandProperty;
				CompiledBindingExtension compiledBindingExtension8 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("EnterPressed", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BEnterPressed_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = KeyBinding.CommandProperty;
				CompiledBindingExtension binding9 = compiledBindingExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				keyBinding.Bind(commandProperty3, binding9);
				keyBinding.SetValue(KeyBinding.GestureProperty, KeyGesture.Parse("Enter"), BindingPriority.Template);
				context.PopParent();
				keyBindings.Add(item);
				context.PopParent();
				((ISupportInitialize)textBox4).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel9).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel5).EndInit();
				Controls children8 = dockPanel2.Children;
				DockPanel dockPanel11;
				DockPanel dockPanel12 = (dockPanel11 = new DockPanel());
				((ISupportInitialize)dockPanel12).BeginInit();
				children8.Add(dockPanel12);
				DockPanel dockPanel13 = (dockPanel = dockPanel11);
				context.PushParent(dockPanel);
				DockPanel dockPanel14 = dockPanel;
				dockPanel14.SetValue(Layoutable.MarginProperty, new Thickness(8.0, 0.0, 8.0, 5.0), BindingPriority.Template);
				dockPanel14.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				Controls children9 = dockPanel14.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children9.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlHighlightAltBaseMediumLowBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding10 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty3, binding10);
				rectangle9.SetValue(Layoutable.HeightProperty, 1.0, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 5.0), BindingPriority.Template);
				rectangle9.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children10 = dockPanel14.Children;
				DockPanel dockPanel15;
				DockPanel dockPanel16 = (dockPanel15 = new DockPanel());
				((ISupportInitialize)dockPanel16).BeginInit();
				children10.Add(dockPanel16);
				DockPanel dockPanel17 = (dockPanel = dockPanel15);
				context.PushParent(dockPanel);
				DockPanel dockPanel18 = dockPanel;
				dockPanel18.SetValue(Layoutable.MarginProperty, new Thickness(4.0, 0.0, 4.0, 0.0), BindingPriority.Template);
				Controls children11 = dockPanel18.Children;
				DockPanel dockPanel19;
				DockPanel dockPanel20 = (dockPanel19 = new DockPanel());
				((ISupportInitialize)dockPanel20).BeginInit();
				children11.Add(dockPanel20);
				DockPanel dockPanel21 = (dockPanel = dockPanel19);
				context.PushParent(dockPanel);
				DockPanel dockPanel22 = dockPanel;
				dockPanel22.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				dockPanel22.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 4.0), BindingPriority.Template);
				Controls children12 = dockPanel22.Children;
				ComboBox comboBox;
				ComboBox comboBox2 = (comboBox = new ComboBox());
				((ISupportInitialize)comboBox2).BeginInit();
				children12.Add(comboBox2);
				ComboBox comboBox3;
				ComboBox comboBox4 = (comboBox3 = comboBox);
				context.PushParent(comboBox3);
				comboBox3.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension9 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EShowFilters_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding11 = compiledBindingExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				comboBox3.Bind(isVisibleProperty, binding11);
				StyledProperty<IEnumerable?> itemsSourceProperty2 = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension10 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EFilters_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding12 = compiledBindingExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				comboBox3.Bind(itemsSourceProperty2, binding12);
				CompiledBindingExtension compiledBindingExtension11 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectedFilter_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = SelectingItemsControl.SelectedItemProperty;
				CompiledBindingExtension compiledBindingExtension12 = compiledBindingExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_92.DynamicSetter_1(comboBox3, compiledBindingExtension12);
				context.PopParent();
				((ISupportInitialize)comboBox4).EndInit();
				Controls children13 = dockPanel22.Children;
				TextBox textBox6;
				TextBox textBox7 = (textBox6 = new TextBox());
				((ISupportInitialize)textBox7).BeginInit();
				children13.Add(textBox7);
				TextBox textBox8 = (textBox3 = textBox6);
				context.PushParent(textBox3);
				TextBox textBox9 = textBox3;
				StyledProperty<string?> textProperty2 = TextBox.TextProperty;
				CompiledBindingExtension compiledBindingExtension13 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EFileName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = TextBox.TextProperty;
				CompiledBindingExtension binding13 = compiledBindingExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox9.Bind(textProperty2, binding13);
				textBox9.SetValue(TextBox.WatermarkProperty, "File name", BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension14 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectingFolder_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox9.Bind(isVisibleProperty2, binding14);
				context.PopParent();
				((ISupportInitialize)textBox8).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel21).EndInit();
				Controls children14 = dockPanel18.Children;
				CheckBox checkBox;
				CheckBox checkBox2 = (checkBox = new CheckBox());
				((ISupportInitialize)checkBox2).BeginInit();
				children14.Add(checkBox2);
				CheckBox checkBox3;
				CheckBox checkBox4 = (checkBox3 = checkBox);
				context.PushParent(checkBox3);
				StyledProperty<bool?> isCheckedProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension compiledBindingExtension15 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EShowHiddenFiles_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension binding15 = compiledBindingExtension15.ProvideValue(context);
				context.ProvideTargetProperty = null;
				checkBox3.Bind(isCheckedProperty, binding15);
				checkBox3.SetValue(ContentControl.ContentProperty, "Show hidden files", BindingPriority.Template);
				checkBox3.SetValue(DockPanel.DockProperty, Dock.Left, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)checkBox4).EndInit();
				Controls children15 = dockPanel18.Children;
				UniformGrid uniformGrid;
				UniformGrid uniformGrid2 = (uniformGrid = new UniformGrid());
				((ISupportInitialize)uniformGrid2).BeginInit();
				children15.Add(uniformGrid2);
				UniformGrid uniformGrid3;
				UniformGrid uniformGrid4 = (uniformGrid3 = uniformGrid);
				context.PushParent(uniformGrid3);
				uniformGrid3.Name = "Finalize";
				service = uniformGrid3;
				context.AvaloniaNameScope.Register("Finalize", service);
				uniformGrid3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				uniformGrid3.SetValue(UniformGrid.RowsProperty, 1, BindingPriority.Template);
				Controls children16 = uniformGrid3.Children;
				Button button10;
				Button button11 = (button10 = new Button());
				((ISupportInitialize)button11).BeginInit();
				children16.Add(button11);
				Button button12 = (button3 = button10);
				context.PushParent(button3);
				Button button13 = button3;
				StyledProperty<ICommand?> commandProperty4 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension16 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Ok", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BOk_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding16 = compiledBindingExtension16.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button13.Bind(commandProperty4, binding16);
				button13.SetValue(Layoutable.MinWidthProperty, 80.0, BindingPriority.Template);
				button13.Content = "OK";
				context.PopParent();
				((ISupportInitialize)button12).EndInit();
				Controls children17 = uniformGrid3.Children;
				Button button14;
				Button button15 = (button14 = new Button());
				((ISupportInitialize)button15).BeginInit();
				children17.Add(button15);
				Button button16 = (button3 = button14);
				context.PushParent(button3);
				Button button17 = button3;
				StyledProperty<ICommand?> commandProperty5 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension17 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Cancel", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BCancel_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding17 = compiledBindingExtension17.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button17.Bind(commandProperty5, binding17);
				button17.SetValue(Layoutable.MinWidthProperty, 80.0, BindingPriority.Template);
				button17.Content = "Cancel";
				context.PopParent();
				((ISupportInitialize)button16).EndInit();
				context.PopParent();
				((ISupportInitialize)uniformGrid4).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel17).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel13).EndInit();
				Controls children18 = dockPanel2.Children;
				DockPanel dockPanel23;
				DockPanel dockPanel24 = (dockPanel23 = new DockPanel());
				((ISupportInitialize)dockPanel24).BeginInit();
				children18.Add(dockPanel24);
				DockPanel dockPanel25 = (dockPanel = dockPanel23);
				context.PushParent(dockPanel);
				DockPanel dockPanel26 = dockPanel;
				dockPanel26.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				Controls children19 = dockPanel26.Children;
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				children19.Add(grid2);
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				grid3.SetValue(Layoutable.MarginProperty, new Thickness(15.0, 5.0, 0.0, 0.0), BindingPriority.Template);
				grid3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(20.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition.SetValue(DefinitionBase.SharedSizeGroupProperty, "Icon", BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(275.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition2.SetValue(DefinitionBase.SharedSizeGroupProperty, "Name", BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition3.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				ColumnDefinitions columnDefinitions4 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(200.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "Modified", BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition4);
				ColumnDefinitions columnDefinitions5 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition5 = new ColumnDefinition();
				columnDefinition5.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition5.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions5.Add(columnDefinition5);
				ColumnDefinitions columnDefinitions6 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition6 = new ColumnDefinition();
				columnDefinition6.SetValue(ColumnDefinition.WidthProperty, new GridLength(150.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition6.SetValue(DefinitionBase.SharedSizeGroupProperty, "Type", BindingPriority.Template);
				columnDefinitions6.Add(columnDefinition6);
				ColumnDefinitions columnDefinitions7 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition7 = new ColumnDefinition();
				columnDefinition7.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition7.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions7.Add(columnDefinition7);
				ColumnDefinitions columnDefinitions8 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition8 = new ColumnDefinition();
				columnDefinition8.SetValue(ColumnDefinition.WidthProperty, new GridLength(200.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition8.SetValue(DefinitionBase.SharedSizeGroupProperty, "Size", BindingPriority.Template);
				columnDefinitions8.Add(columnDefinition8);
				ColumnDefinitions columnDefinitions9 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition9 = new ColumnDefinition();
				columnDefinition9.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition9.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions9.Add(columnDefinition9);
				Styles styles = grid3.Styles;
				Style style;
				Style item2 = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(GridSplitter));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = TemplatedControl.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlHighlightAltBaseMediumLowBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value2 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value2;
				context.PopParent();
				style.Add(setter2);
				Setter setter3 = new Setter();
				setter3.Property = TemplatedControl.TemplateProperty;
				setter3.Value = new ControlTemplate
				{
					Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_93.Build, context)
				};
				style.Add(setter3);
				context.PopParent();
				styles.Add(item2);
				Controls children20 = grid3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children20.Add(textBlock2);
				textBlock.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				textBlock.SetValue(TextBlock.TextProperty, "Name", BindingPriority.Template);
				((ISupportInitialize)textBlock).EndInit();
				Controls children21 = grid3.Children;
				GridSplitter gridSplitter;
				GridSplitter gridSplitter2 = (gridSplitter = new GridSplitter());
				((ISupportInitialize)gridSplitter2).BeginInit();
				children21.Add(gridSplitter2);
				gridSplitter.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				((ISupportInitialize)gridSplitter).EndInit();
				Controls children22 = grid3.Children;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = new TextBlock());
				((ISupportInitialize)textBlock4).BeginInit();
				children22.Add(textBlock4);
				textBlock3.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				textBlock3.SetValue(TextBlock.TextProperty, "Date Modified", BindingPriority.Template);
				((ISupportInitialize)textBlock3).EndInit();
				Controls children23 = grid3.Children;
				GridSplitter gridSplitter3;
				GridSplitter gridSplitter4 = (gridSplitter3 = new GridSplitter());
				((ISupportInitialize)gridSplitter4).BeginInit();
				children23.Add(gridSplitter4);
				gridSplitter3.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				((ISupportInitialize)gridSplitter3).EndInit();
				Controls children24 = grid3.Children;
				TextBlock textBlock5;
				TextBlock textBlock6 = (textBlock5 = new TextBlock());
				((ISupportInitialize)textBlock6).BeginInit();
				children24.Add(textBlock6);
				textBlock5.SetValue(Grid.ColumnProperty, 5, BindingPriority.Template);
				textBlock5.SetValue(TextBlock.TextProperty, "Type", BindingPriority.Template);
				((ISupportInitialize)textBlock5).EndInit();
				Controls children25 = grid3.Children;
				GridSplitter gridSplitter5;
				GridSplitter gridSplitter6 = (gridSplitter5 = new GridSplitter());
				((ISupportInitialize)gridSplitter6).BeginInit();
				children25.Add(gridSplitter6);
				gridSplitter5.SetValue(Grid.ColumnProperty, 6, BindingPriority.Template);
				((ISupportInitialize)gridSplitter5).EndInit();
				Controls children26 = grid3.Children;
				TextBlock textBlock7;
				TextBlock textBlock8 = (textBlock7 = new TextBlock());
				((ISupportInitialize)textBlock8).BeginInit();
				children26.Add(textBlock8);
				textBlock7.SetValue(Grid.ColumnProperty, 7, BindingPriority.Template);
				textBlock7.SetValue(TextBlock.TextProperty, "Size", BindingPriority.Template);
				((ISupportInitialize)textBlock7).EndInit();
				Controls children27 = grid3.Children;
				GridSplitter gridSplitter7;
				GridSplitter gridSplitter8 = (gridSplitter7 = new GridSplitter());
				((ISupportInitialize)gridSplitter8).BeginInit();
				children27.Add(gridSplitter8);
				gridSplitter7.SetValue(Grid.ColumnProperty, 8, BindingPriority.Template);
				((ISupportInitialize)gridSplitter7).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				Controls children28 = dockPanel26.Children;
				ListBox listBox6;
				ListBox listBox7 = (listBox6 = new ListBox());
				((ISupportInitialize)listBox7).BeginInit();
				children28.Add(listBox7);
				ListBox listBox8 = (listBox3 = listBox6);
				context.PushParent(listBox3);
				ListBox listBox9 = listBox3;
				listBox9.Name = "PART_Files";
				service = listBox9;
				context.AvaloniaNameScope.Register("PART_Files", service);
				StyledProperty<IEnumerable?> itemsSourceProperty3 = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension18 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding18 = compiledBindingExtension18.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(itemsSourceProperty3, binding18);
				listBox9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 5.0), BindingPriority.Template);
				StyledProperty<SelectionMode> selectionModeProperty = ListBox.SelectionModeProperty;
				CompiledBindingExtension compiledBindingExtension19 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectionMode_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ListBox.SelectionModeProperty;
				CompiledBindingExtension binding19 = compiledBindingExtension19.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(selectionModeProperty, binding19);
				DirectProperty<SelectingItemsControl, IList?> selectedItemsProperty = ListBox.SelectedItemsProperty;
				CompiledBindingExtension compiledBindingExtension20 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectedItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ListBox.SelectedItemsProperty;
				CompiledBindingExtension binding20 = compiledBindingExtension20.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(selectedItemsProperty, binding20);
				listBox9.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				listBox9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				StyledProperty<IDataTemplate?> itemTemplateProperty2 = ItemsControl.ItemTemplateProperty;
				DataTemplate value3 = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				DataTemplate dataTemplate2 = dataTemplate;
				dataTemplate2.DataType = typeof(ManagedFileChooserItemViewModel);
				dataTemplate2.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_94.Build, context);
				context.PopParent();
				listBox9.SetValue(itemTemplateProperty2, value3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)listBox8).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel25).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_95
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "border";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("border", service);
				((AvaloniaObject)intermediateRoot).SetValue(Border.BoxShadowProperty, BoxShadows.Parse("inset -6 0 3 -3 #20000000"), BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Name = "PART_ScrollViewer";
				service = scrollViewer;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_96
		{
			private class DynamicSetters_97
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "LayoutRoot";
				service = border2;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				border2.SetValue(Border.CornerRadiusProperty, new CornerRadius(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				border2.SetValue(Layoutable.MarginProperty, new Thickness(10.0, 0.0, 10.0, 0.0), BindingPriority.Template);
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border2.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.Name = "SelectedLine";
				service = border6;
				context.AvaloniaNameScope.Register("SelectedLine", service);
				border6.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				border6.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 6.0, 2.0, 6.0), BindingPriority.Template);
				border6.SetValue(Border.CornerRadiusProperty, new CornerRadius(0.5, 0.5, 0.5, 0.5), BindingPriority.Template);
				border6.SetValue(Layoutable.WidthProperty, 3.0, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlHighlightAccentBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding);
				border6.Bind(Visual.IsVisibleProperty, new TemplateBinding(ListBoxItem.IsSelectedProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				Controls children2 = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(ContentPresenter.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.BorderBrushProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_97.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			ControlTheme controlTheme2 = controlTheme;
			controlTheme2.TargetType = typeof(ManagedFileChooser);
			ResourceDictionary resourceDictionary = new ResourceDictionary();
			resourceDictionary.AddDeferred("IconRes.FolderBackGradientStops", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_86.Build, context));
			resourceDictionary.AddDeferred("IconRes.FolderFrontGradientStops", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_87.Build, context));
			resourceDictionary.AddDeferred("LevelUp", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_88.Build, context));
			resourceDictionary.AddDeferred("Icons", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_89.Build, context));
			controlTheme2.Resources = resourceDictionary;
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_90.Build, context);
			context.PopParent();
			setter3.Value = value;
			context.PopParent();
			controlTheme2.Add(setter2);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ListBox))
				.Name("QuickLinks");
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.MarginProperty;
			setter4.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style3.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlBackgroundChromeMediumBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style3.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			setter7.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style3.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = Layoutable.WidthProperty;
			setter8.Value = 240.0;
			style3.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.PaddingProperty;
			setter9.Value = new Thickness(0.0, 20.0, 0.0, 20.0);
			style3.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_95.Build, context)
			};
			style3.Add(setter10);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ItemsControl.ItemContainerThemeProperty;
			ControlTheme value3 = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			ControlTheme controlTheme3 = controlTheme;
			controlTheme3.TargetType = typeof(ListBoxItem);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.HeightProperty;
			setter13.Value = 32.0;
			controlTheme3.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = TemplatedControl.PaddingProperty;
			setter14.Value = new Thickness(30.0, 6.0, 30.0, 6.0);
			controlTheme3.Add(setter14);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_96.Build, context);
			context.PopParent();
			setter16.Value = value4;
			context.PopParent();
			controlTheme3.Add(setter15);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("LayoutRoot");
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlBackgroundAltMediumBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value5;
			context.PopParent();
			style5.Add(setter17);
			context.PopParent();
			controlTheme3.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("LayoutRoot");
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlBackgroundAltMediumHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value6;
			context.PopParent();
			style7.Add(setter19);
			context.PopParent();
			controlTheme3.Add(style6);
			context.PopParent();
			setter12.Value = value3;
			context.PopParent();
			style3.Add(setter11);
			context.PopParent();
			controlTheme2.Add(style2);
			Style style8 = new Style();
			style8.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().Template().OfType(typeof(DockPanel))
					.Name("NavBar")
					.Descendant()
					.OfType(typeof(Button)),
				((Selector?)null).Nesting().Template().OfType(typeof(DockPanel))
					.Name("NavBar")
					.Descendant()
					.OfType(typeof(TextBox))
			});
			Setter setter21 = new Setter();
			setter21.Property = Layoutable.HeightProperty;
			setter21.Value = 30.0;
			style8.Add(setter21);
			controlTheme2.Add(style8);
			Style style9 = new Style();
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(DockPanel))
				.Name("NavBar")
				.Descendant()
				.OfType(typeof(Button));
			Setter setter22 = new Setter();
			setter22.Property = Layoutable.VerticalAlignmentProperty;
			setter22.Value = VerticalAlignment.Stretch;
			style9.Add(setter22);
			Setter setter23 = new Setter();
			setter23.Property = Layoutable.WidthProperty;
			setter23.Value = 40.0;
			style9.Add(setter23);
			Setter setter24 = new Setter();
			setter24.Property = TemplatedControl.BorderThicknessProperty;
			setter24.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style9.Add(setter24);
			controlTheme2.Add(style9);
			Style style10 = new Style();
			style10.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(DockPanel))
				.Name("NavBar")
				.Descendant()
				.OfType(typeof(Button))
				.Not(((Selector?)null).Class(":pointerover"))
				.Not(((Selector?)null).Class(":pressed"));
			Setter setter25 = new Setter();
			setter25.Property = TemplatedControl.BackgroundProperty;
			setter25.Value = new ImmutableSolidColorBrush(16777215u);
			style10.Add(setter25);
			controlTheme2.Add(style10);
			Style style11 = new Style();
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(UniformGrid))
				.Name("Finalize")
				.Child()
				.OfType(typeof(Button));
			Setter setter26 = new Setter();
			setter26.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter26.Value = HorizontalAlignment.Center;
			style11.Add(setter26);
			Setter setter27 = new Setter();
			setter27.Property = Layoutable.HorizontalAlignmentProperty;
			setter27.Value = HorizontalAlignment.Stretch;
			style11.Add(setter27);
			Setter setter28 = new Setter();
			setter28.Property = Layoutable.MarginProperty;
			setter28.Value = new Thickness(4.0, 0.0, 0.0, 0.0);
			style11.Add(setter28);
			controlTheme2.Add(style11);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_98
	{
		private class XamlClosure_99
		{
			private class DynamicSetters_100
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_100.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				children2.Add(grid2);
				grid.Name = "PART_RefreshVisualizerPresenter";
				service = grid;
				context.AvaloniaNameScope.Register("PART_RefreshVisualizerPresenter", service);
				((ISupportInitialize)grid).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(RefreshContainer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_99.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_101
	{
		private class XamlClosure_102
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Root";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Root", service);
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.MinHeightProperty, 80.0, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				Styles styles = ((StyledElement)intermediateRoot).Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(PathIcon)).Name("PART_Icon");
				Setter setter = new Setter();
				setter.Property = PathIcon.DataProperty;
				setter.Value = Geometry.Parse("M18.6195264,3.31842271 C19.0080059,3.31842271 19.3290603,3.60710385 19.3798716,3.9816481 L19.3868766,4.08577298 L19.3868766,6.97963208 C19.3868766,7.36811161 19.0981955,7.68916605 18.7236513,7.73997735 L18.6195264,7.74698235 L15.7256673,7.74698235 C15.3018714,7.74698235 14.958317,7.40342793 14.958317,6.97963208 C14.958317,6.59115255 15.2469981,6.27009811 15.6215424,6.21928681 L15.7256673,6.21228181 L16.7044011,6.21182461 C13.7917384,3.87107476 9.52212532,4.05209336 6.81933829,6.75488039 C3.92253872,9.65167996 3.92253872,14.34832 6.81933829,17.2451196 C9.71613786,20.1419192 14.4127779,20.1419192 17.3095775,17.2451196 C19.0725398,15.4821573 19.8106555,12.9925923 19.3476248,10.58925 C19.2674502,10.173107 19.5398064,9.77076216 19.9559494,9.69058758 C20.3720923,9.610413 20.7744372,9.88276918 20.8546118,10.2989121 C21.4129973,13.1971899 20.5217103,16.2033812 18.3947747,18.3303168 C14.8986373,21.8264542 9.23027854,21.8264542 5.73414113,18.3303168 C2.23800371,14.8341794 2.23800371,9.16582064 5.73414113,5.66968323 C9.05475132,2.34907304 14.3349409,2.18235834 17.8523166,5.16953912 L17.8521761,4.08577298 C17.8521761,3.66197713 18.1957305,3.31842271 18.6195264,3.31842271 Z");
				style.Add(setter);
				styles.Add(style);
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RefreshVisualizer);
			Setter setter = new Setter();
			setter.Property = InputElement.IsTabStopProperty;
			setter.Value = false;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = InputElement.IsHitTestVisibleProperty;
			setter2.Value = false;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HeightProperty;
			setter3.Value = 100.0;
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RefreshVisualizerBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter8 = setter4;
			setter8.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RefreshVisualizerForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_102.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_103
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ThemeVariantScope);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TextElement.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TextElement.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_104
	{
		private class XamlClosure_105
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlFocusVisualPrimaryThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border2.Bind(borderThicknessProperty, binding);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlFocusVisualPrimaryBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border2.Bind(borderBrushProperty, binding2);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlFocusVisualMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border2.Bind(marginProperty, binding3);
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				border2.Child = border4;
				Border border5 = (border = border3);
				context.PushParent(border);
				Border target = border;
				StyledProperty<Thickness> borderThicknessProperty2 = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SystemControlFocusVisualSecondaryThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(borderThicknessProperty2, binding4);
				StyledProperty<IBrush?> borderBrushProperty2 = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SystemControlFocusVisualSecondaryBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(borderBrushProperty2, binding5);
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(AdornerLayer);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = AdornerLayer.DefaultFocusAdornerProperty;
			FocusAdornerTemplate focusAdornerTemplate;
			FocusAdornerTemplate value = (focusAdornerTemplate = new FocusAdornerTemplate());
			context.PushParent(focusAdornerTemplate);
			focusAdornerTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_105.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_106
	{
		private class XamlClosure_107
		{
			private class DynamicSetters_108
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "ToggleButtonBackground";
				service = border2;
				context.AvaloniaNameScope.Register("ToggleButtonBackground", service);
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border2.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.Name = "ToggleButtonGrid";
				service = grid3;
				context.AvaloniaNameScope.Register("ToggleButtonGrid", service);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_108.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = grid3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.Name = "ExpandCollapseChevronBorder";
				service = border6;
				context.AvaloniaNameScope.Register("ExpandCollapseChevronBorder", service);
				border6.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ExpanderChevronButtonSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(widthProperty, binding);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ExpanderChevronButtonSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(heightProperty, binding2);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ExpanderChevronMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(marginProperty, binding3);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(cornerRadiusProperty, binding4);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ExpanderChevronBorderBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderBrushProperty, binding5);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ExpanderChevronBorderThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderThicknessProperty, binding6);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ExpanderChevronBackground");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding7);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				border6.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "ExpandCollapseChevron";
				service = path3;
				context.AvaloniaNameScope.Register("ExpandCollapseChevron", service);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Visual.RenderTransformOriginProperty, new RelativePoint(0.5, 0.5, RelativeUnit.Relative), BindingPriority.Template);
				path3.SetValue(Shape.StretchProperty, Stretch.None, BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ExpanderChevronForeground");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding8);
				path3.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
				path3.SetValue(Visual.RenderTransformProperty, new RotateTransform(), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ExpanderHeaderBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ExpanderHeaderBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ExpanderHeaderBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ExpanderHeaderForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.PaddingProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ExpanderHeaderPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value5 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.HorizontalAlignmentProperty;
			setter12.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = ContentControl.HorizontalContentAlignmentProperty;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("ExpanderHeaderHorizontalContentAlignment");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value6 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentControl.VerticalContentAlignmentProperty;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("ExpanderHeaderVerticalContentAlignment");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value7 = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			controlTheme.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value8 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_107.Build, context);
			context.PopParent();
			setter18.Value = value8;
			context.PopParent();
			controlTheme.Add(setter17);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			IList<IAnimation> animations = style.Animations;
			Animation animation = new Animation();
			animation.FillMode = FillMode.Both;
			animation.Duration = TimeSpan.FromTicks(625000L);
			KeyFrames children = animation.Children;
			KeyFrame keyFrame = new KeyFrame();
			keyFrame.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters = keyFrame.Setters;
			Setter setter19 = new Setter();
			setter19.Property = RotateTransform.AngleProperty;
			setter19.Value = 180.0;
			setters.Add(setter19);
			children.Add(keyFrame);
			animations.Add(animation);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Not(((Selector?)null).Class(":checked")).Template()
				.OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			IList<IAnimation> animations2 = style2.Animations;
			Animation animation2 = new Animation();
			animation2.FillMode = FillMode.Both;
			animation2.Duration = TimeSpan.FromTicks(625000L);
			KeyFrames children2 = animation2.Children;
			KeyFrame keyFrame2 = new KeyFrame();
			keyFrame2.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters2 = keyFrame2.Setters;
			Setter setter20 = new Setter();
			setter20.Property = RotateTransform.AngleProperty;
			setter20.Value = 180.0;
			setters2.Add(setter20);
			children2.Add(keyFrame2);
			KeyFrames children3 = animation2.Children;
			KeyFrame keyFrame3 = new KeyFrame();
			keyFrame3.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters3 = keyFrame3.Setters;
			Setter setter21 = new Setter();
			setter21.Property = RotateTransform.AngleProperty;
			setter21.Value = 0.0;
			setters3.Add(setter21);
			children3.Add(keyFrame3);
			animations2.Add(animation2);
			controlTheme.Add(style2);
			Style style3;
			Style style4 = (style3 = new Style());
			context.PushParent(style3);
			Style style5 = style3;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("ToggleButtonBackground");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ExpanderHeaderBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value9;
			context.PopParent();
			style5.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ExpanderHeaderBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value10;
			context.PopParent();
			style5.Add(setter24);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style3 = new Style());
			context.PushParent(style3);
			Style style7 = style3;
			style7.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ExpanderHeaderForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value11;
			context.PopParent();
			style7.Add(setter26);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style3 = new Style());
			context.PushParent(style3);
			Style style9 = style3;
			style9.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("ExpandCollapseChevronBorder");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ExpanderChevronBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value12;
			context.PopParent();
			style9.Add(setter28);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ExpanderChevronBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value13;
			context.PopParent();
			style9.Add(setter30);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style3 = new Style());
			context.PushParent(style3);
			Style style11 = style3;
			style11.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ExpanderChevronForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value14;
			context.PopParent();
			style11.Add(setter32);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style3 = new Style());
			context.PushParent(style3);
			Style style13 = style3;
			style13.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("ToggleButtonBackground");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ExpanderHeaderBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value15;
			context.PopParent();
			style13.Add(setter34);
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ExpanderHeaderBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value16;
			context.PopParent();
			style13.Add(setter36);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style3 = new Style());
			context.PushParent(style3);
			Style style15 = style3;
			style15.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ExpanderHeaderForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value17;
			context.PopParent();
			style15.Add(setter38);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = (style3 = new Style());
			context.PushParent(style3);
			Style style17 = style3;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("ExpandCollapseChevronBorder");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ExpanderChevronBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value18;
			context.PopParent();
			style17.Add(setter40);
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ExpanderChevronBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value19;
			context.PopParent();
			style17.Add(setter42);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style3 = new Style());
			context.PushParent(style3);
			Style style19 = style3;
			style19.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ExpanderChevronForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value20;
			context.PopParent();
			style19.Add(setter44);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style3 = new Style());
			context.PushParent(style3);
			Style style21 = style3;
			style21.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("ToggleButtonBackground");
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ExpanderHeaderBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value21;
			context.PopParent();
			style21.Add(setter46);
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ExpanderHeaderBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value22;
			context.PopParent();
			style21.Add(setter48);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = (style3 = new Style());
			context.PushParent(style3);
			Style style23 = style3;
			style23.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ExpanderHeaderForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value23;
			context.PopParent();
			style23.Add(setter50);
			context.PopParent();
			controlTheme.Add(style22);
			Style style24 = (style3 = new Style());
			context.PushParent(style3);
			Style style25 = style3;
			style25.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("ExpandCollapseChevronBorder");
			Setter setter52 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter53 = setter;
			setter53.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ExpanderChevronBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value24;
			context.PopParent();
			style25.Add(setter52);
			Setter setter54 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter55 = setter;
			setter55.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ExpanderChevronBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value25;
			context.PopParent();
			style25.Add(setter54);
			context.PopParent();
			controlTheme.Add(style24);
			Style style26 = (style3 = new Style());
			context.PushParent(style3);
			Style style27 = style3;
			style27.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ExpanderChevronForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value26;
			context.PopParent();
			style27.Add(setter56);
			context.PopParent();
			controlTheme.Add(style26);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_109
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter = new Setter();
			setter.Property = Path.DataProperty;
			setter.Value = Geometry.Parse("M 0 7 L 7 0 L 14 7");
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_110
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter = new Setter();
			setter.Property = Path.DataProperty;
			setter.Value = Geometry.Parse("M 0 0 L 7 7 L 14 0");
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_111
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter = new Setter();
			setter.Property = Path.DataProperty;
			setter.Value = Geometry.Parse("M 7 0 L 0 7 L 7 14");
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_112
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("ExpandCollapseChevron");
			Setter setter = new Setter();
			setter.Property = Path.DataProperty;
			setter.Value = Geometry.Parse("M 0 0 L 7 7 L 0 14");
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_113
	{
		private class XamlClosure_114
		{
			private class DynamicSetters_115
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.MinWidthProperty, new TemplateBinding(Layoutable.MinWidthProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.MaxWidthProperty, new TemplateBinding(Layoutable.MaxWidthProperty).ProvideValue());
				Controls children = ((Panel)intermediateRoot).Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				toggleButton.Name = "ExpanderHeader";
				service = toggleButton;
				context.AvaloniaNameScope.Register("ExpanderHeader", service);
				toggleButton.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				toggleButton.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				toggleButton.Bind(InputElement.IsEnabledProperty, new TemplateBinding(InputElement.IsEnabledProperty).ProvideValue());
				DynamicSetters_115.DynamicSetter_1(toggleButton, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				toggleButton.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(HeaderedContentControl.HeaderTemplateProperty).ProvideValue());
				toggleButton.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				((ISupportInitialize)toggleButton).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children2.Add(border2);
				border.Name = "ExpanderContent";
				service = border;
				context.AvaloniaNameScope.Register("ExpanderContent", service);
				border.Bind(Visual.IsVisibleProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				border.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				border.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				border.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_115.DynamicSetter_2(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)border).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Expander);
			Setter setter = new Setter();
			setter.Property = InputElement.IsTabStopProperty;
			setter.Value = false;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FlyoutThemeMinWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = Layoutable.MinHeightProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ExpanderMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ExpanderContentBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ExpanderContentBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ExpanderContentDownBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = TemplatedControl.PaddingProperty;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("ExpanderContentPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value6 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.HorizontalAlignmentProperty;
			setter15.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = Layoutable.VerticalAlignmentProperty;
			setter16.Value = VerticalAlignment.Center;
			controlTheme.Add(setter16);
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = new Setter();
			setter19.Property = TemplatedControl.TemplateProperty;
			setter19.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_114.Build, context)
			};
			controlTheme.Add(setter19);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ToggleButton))
				.Name("ExpanderHeader")
				.Class(":pressed");
			Setter setter20 = new Setter();
			setter20.Property = Visual.RenderTransformProperty;
			setter20.Value = null;
			style.Add(setter20);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().Class(":left").Template()
					.OfType(typeof(ToggleButton))
					.Name("ExpanderHeader"),
				((Selector?)null).Nesting().Class(":right").Template()
					.OfType(typeof(ToggleButton))
					.Name("ExpanderHeader")
			});
			Setter setter21 = new Setter();
			setter21.Property = Layoutable.VerticalAlignmentProperty;
			setter21.Value = VerticalAlignment.Stretch;
			style2.Add(setter21);
			controlTheme.Add(style2);
			Style style3;
			Style style4 = (style3 = new Style());
			context.PushParent(style3);
			Style style5 = style3;
			style5.Selector = ((Selector?)null).Nesting().Not(((Selector?)null).Class(":expanded")).Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter22 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter23 = setter2;
			setter23.Property = TemplatedControl.CornerRadiusProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Expander), 0).Property(TemplatedControl.CornerRadiusProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value8 = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value8;
			context.PopParent();
			style5.Add(setter22);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style3 = new Style());
			context.PushParent(style3);
			Style style7 = style3;
			style7.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":up")
				.Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter24 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter25 = setter2;
			setter25.Property = TemplatedControl.CornerRadiusProperty;
			TemplateBinding templateBinding;
			TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding3 = templateBinding;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("BottomCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding3.Converter = (IValueConverter)obj;
			context.PopParent();
			setter25.Value = templateBinding2.ProvideValue();
			context.PopParent();
			style7.Add(setter24);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style3 = new Style());
			context.PushParent(style3);
			Style style9 = style3;
			style9.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":up")
				.Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter26 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter27 = setter2;
			setter27.Property = Border.CornerRadiusProperty;
			TemplateBinding templateBinding4 = (templateBinding = new TemplateBinding(Border.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding5 = templateBinding;
			StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("TopCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj2 = staticResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding5.Converter = (IValueConverter)obj2;
			context.PopParent();
			setter27.Value = templateBinding4.ProvideValue();
			context.PopParent();
			style9.Add(setter26);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style3 = new Style());
			context.PushParent(style3);
			Style style11 = style3;
			style11.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":down")
				.Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter28 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter29 = setter2;
			setter29.Property = TemplatedControl.CornerRadiusProperty;
			TemplateBinding templateBinding6 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding7 = templateBinding;
			StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("TopCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj3 = staticResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding7.Converter = (IValueConverter)obj3;
			context.PopParent();
			setter29.Value = templateBinding6.ProvideValue();
			context.PopParent();
			style11.Add(setter28);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style3 = new Style());
			context.PushParent(style3);
			Style style13 = style3;
			style13.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":down")
				.Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter30 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter31 = setter2;
			setter31.Property = Border.CornerRadiusProperty;
			TemplateBinding templateBinding8 = (templateBinding = new TemplateBinding(Border.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding9 = templateBinding;
			StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("BottomCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj4 = staticResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding9.Converter = (IValueConverter)obj4;
			context.PopParent();
			setter31.Value = templateBinding8.ProvideValue();
			context.PopParent();
			style13.Add(setter30);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style3 = new Style());
			context.PushParent(style3);
			Style style15 = style3;
			style15.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":left")
				.Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter32 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter33 = setter2;
			setter33.Property = TemplatedControl.CornerRadiusProperty;
			TemplateBinding templateBinding10 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding11 = templateBinding;
			StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("RightCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj5 = staticResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding11.Converter = (IValueConverter)obj5;
			context.PopParent();
			setter33.Value = templateBinding10.ProvideValue();
			context.PopParent();
			style15.Add(setter32);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = (style3 = new Style());
			context.PushParent(style3);
			Style style17 = style3;
			style17.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":left")
				.Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter34 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter35 = setter2;
			setter35.Property = Border.CornerRadiusProperty;
			TemplateBinding templateBinding12 = (templateBinding = new TemplateBinding(Border.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding13 = templateBinding;
			StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("LeftCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj6 = staticResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding13.Converter = (IValueConverter)obj6;
			context.PopParent();
			setter35.Value = templateBinding12.ProvideValue();
			context.PopParent();
			style17.Add(setter34);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style3 = new Style());
			context.PushParent(style3);
			Style style19 = style3;
			style19.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":right")
				.Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter36 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter37 = setter2;
			setter37.Property = TemplatedControl.CornerRadiusProperty;
			TemplateBinding templateBinding14 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding15 = templateBinding;
			StaticResourceExtension staticResourceExtension9 = new StaticResourceExtension("LeftCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj7 = staticResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding15.Converter = (IValueConverter)obj7;
			context.PopParent();
			setter37.Value = templateBinding14.ProvideValue();
			context.PopParent();
			style19.Add(setter36);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style3 = new Style());
			context.PushParent(style3);
			Style style21 = style3;
			style21.Selector = ((Selector?)null).Nesting().Class(":expanded").Class(":right")
				.Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter38 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter39 = setter2;
			setter39.Property = Border.CornerRadiusProperty;
			TemplateBinding templateBinding16 = (templateBinding = new TemplateBinding(Border.CornerRadiusProperty));
			context.PushParent(templateBinding);
			TemplateBinding templateBinding17 = templateBinding;
			StaticResourceExtension staticResourceExtension10 = new StaticResourceExtension("RightCornerRadiusFilterConverter");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj8 = staticResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding17.Converter = (IValueConverter)obj8;
			context.PopParent();
			setter39.Value = templateBinding16.ProvideValue();
			context.PopParent();
			style21.Add(setter38);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = new Style();
			style22.Selector = ((Selector?)null).Nesting().Class(":left").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter40 = new Setter();
			setter40.Property = DockPanel.DockProperty;
			setter40.Value = Dock.Right;
			style22.Add(setter40);
			controlTheme.Add(style22);
			Style style23 = new Style();
			style23.Selector = ((Selector?)null).Nesting().Class(":up").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter41 = new Setter();
			setter41.Property = DockPanel.DockProperty;
			setter41.Value = Dock.Bottom;
			style23.Add(setter41);
			controlTheme.Add(style23);
			Style style24 = new Style();
			style24.Selector = ((Selector?)null).Nesting().Class(":right").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter42 = new Setter();
			setter42.Property = DockPanel.DockProperty;
			setter42.Value = Dock.Left;
			style24.Add(setter42);
			controlTheme.Add(style24);
			Style style25 = new Style();
			style25.Selector = ((Selector?)null).Nesting().Class(":down").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter43 = new Setter();
			setter43.Property = DockPanel.DockProperty;
			setter43.Value = Dock.Top;
			style25.Add(setter43);
			controlTheme.Add(style25);
			Style style26 = (style3 = new Style());
			context.PushParent(style3);
			Style style27 = style3;
			style27.Selector = ((Selector?)null).Nesting().Class(":left").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter44 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter45 = setter2;
			setter45.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension11 = new StaticResourceExtension("FluentExpanderToggleButtonLeftTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value9 = staticResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value9;
			context.PopParent();
			style27.Add(setter44);
			context.PopParent();
			controlTheme.Add(style26);
			Style style28 = (style3 = new Style());
			context.PushParent(style3);
			Style style29 = style3;
			style29.Selector = ((Selector?)null).Nesting().Class(":up").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter46 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter47 = setter2;
			setter47.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension12 = new StaticResourceExtension("FluentExpanderToggleButtonUpTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value10 = staticResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value10;
			context.PopParent();
			style29.Add(setter46);
			context.PopParent();
			controlTheme.Add(style28);
			Style style30 = (style3 = new Style());
			context.PushParent(style3);
			Style style31 = style3;
			style31.Selector = ((Selector?)null).Nesting().Class(":right").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter48 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter49 = setter2;
			setter49.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension13 = new StaticResourceExtension("FluentExpanderToggleButtonRightTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value11 = staticResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value11;
			context.PopParent();
			style31.Add(setter48);
			context.PopParent();
			controlTheme.Add(style30);
			Style style32 = (style3 = new Style());
			context.PushParent(style3);
			Style style33 = style3;
			style33.Selector = ((Selector?)null).Nesting().Class(":down").Template()
				.OfType(typeof(ToggleButton))
				.Name("ExpanderHeader");
			Setter setter50 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter51 = setter2;
			setter51.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension14 = new StaticResourceExtension("FluentExpanderToggleButtonDownTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value12 = staticResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value12;
			context.PopParent();
			style33.Add(setter50);
			context.PopParent();
			controlTheme.Add(style32);
			Style style34 = (style3 = new Style());
			context.PushParent(style3);
			Style style35 = style3;
			style35.Selector = ((Selector?)null).Nesting().Class(":left").Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter52 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter53 = setter2;
			setter53.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ExpanderContentLeftBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value13;
			context.PopParent();
			style35.Add(setter52);
			context.PopParent();
			controlTheme.Add(style34);
			Style style36 = (style3 = new Style());
			context.PushParent(style3);
			Style style37 = style3;
			style37.Selector = ((Selector?)null).Nesting().Class(":up").Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter54 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter55 = setter2;
			setter55.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ExpanderContentUpBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value14;
			context.PopParent();
			style37.Add(setter54);
			context.PopParent();
			controlTheme.Add(style36);
			Style style38 = (style3 = new Style());
			context.PushParent(style3);
			Style style39 = style3;
			style39.Selector = ((Selector?)null).Nesting().Class(":right").Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter56 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter57 = setter2;
			setter57.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ExpanderContentRightBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value15;
			context.PopParent();
			style39.Add(setter56);
			context.PopParent();
			controlTheme.Add(style38);
			Style style40 = (style3 = new Style());
			context.PushParent(style3);
			Style style41 = style3;
			style41.Selector = ((Selector?)null).Nesting().Class(":down").Template()
				.OfType(typeof(Border))
				.Name("ExpanderContent");
			Setter setter58 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter59 = setter2;
			setter59.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ExpanderContentDownBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter59.Value = value16;
			context.PopParent();
			style41.Add(setter58);
			context.PopParent();
			controlTheme.Add(style40);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_116
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new StringFormatConverter();
		}
	}

	private class XamlClosure_117
	{
		private class XamlClosure_118
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "ProgressBarRoot";
				service = border;
				context.AvaloniaNameScope.Register("ProgressBarRoot", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				Panel panel5;
				Panel panel6 = (panel5 = new Panel());
				((ISupportInitialize)panel6).BeginInit();
				children.Add(panel6);
				panel5.Name = "DeterminateRoot";
				service = panel5;
				context.AvaloniaNameScope.Register("DeterminateRoot", service);
				panel5.SetValue(Visual.OpacityProperty, 1.0, BindingPriority.Template);
				StyledProperty<Transitions?> transitionsProperty = Animatable.TransitionsProperty;
				Transitions transitions = new Transitions();
				DoubleTransition doubleTransition = new DoubleTransition();
				doubleTransition.Property = Visual.OpacityProperty;
				doubleTransition.Duration = TimeSpan.FromTicks(1970000L);
				transitions.Add(doubleTransition);
				panel5.SetValue(transitionsProperty, transitions, BindingPriority.Template);
				Controls children2 = panel5.Children;
				Border border2;
				Border border3 = (border2 = new Border());
				((ISupportInitialize)border3).BeginInit();
				children2.Add(border3);
				border2.Name = "PART_Indicator";
				service = border2;
				context.AvaloniaNameScope.Register("PART_Indicator", service);
				border2.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)border2).EndInit();
				((ISupportInitialize)panel5).EndInit();
				Controls children3 = panel3.Children;
				Panel panel7;
				Panel panel8 = (panel7 = new Panel());
				((ISupportInitialize)panel8).BeginInit();
				children3.Add(panel8);
				panel7.Name = "IndeterminateRoot";
				service = panel7;
				context.AvaloniaNameScope.Register("IndeterminateRoot", service);
				panel7.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				StyledProperty<Transitions?> transitionsProperty2 = Animatable.TransitionsProperty;
				Transitions transitions2 = new Transitions();
				DoubleTransition doubleTransition2 = new DoubleTransition();
				doubleTransition2.Property = Visual.OpacityProperty;
				doubleTransition2.Duration = TimeSpan.FromTicks(1970000L);
				transitions2.Add(doubleTransition2);
				panel7.SetValue(transitionsProperty2, transitions2, BindingPriority.Template);
				Controls children4 = panel7.Children;
				Border border4;
				Border border5 = (border4 = new Border());
				((ISupportInitialize)border5).BeginInit();
				children4.Add(border5);
				border4.Name = "IndeterminateProgressBarIndicator";
				service = border4;
				context.AvaloniaNameScope.Register("IndeterminateProgressBarIndicator", service);
				border4.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border4.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				border4.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)border4).EndInit();
				Controls children5 = panel7.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children5.Add(border7);
				border6.Name = "IndeterminateProgressBarIndicator2";
				service = border6;
				context.AvaloniaNameScope.Register("IndeterminateProgressBarIndicator2", service);
				border6.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border6.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				border6.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)border6).EndInit();
				((ISupportInitialize)panel7).EndInit();
				Controls children6 = panel3.Children;
				LayoutTransformControl layoutTransformControl;
				LayoutTransformControl layoutTransformControl2 = (layoutTransformControl = new LayoutTransformControl());
				((ISupportInitialize)layoutTransformControl2).BeginInit();
				children6.Add(layoutTransformControl2);
				LayoutTransformControl layoutTransformControl3;
				LayoutTransformControl layoutTransformControl4 = (layoutTransformControl3 = layoutTransformControl);
				context.PushParent(layoutTransformControl3);
				layoutTransformControl3.Name = "PART_LayoutTransformControl";
				service = layoutTransformControl3;
				context.AvaloniaNameScope.Register("PART_LayoutTransformControl", service);
				layoutTransformControl3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				layoutTransformControl3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				layoutTransformControl3.Bind(Visual.IsVisibleProperty, new TemplateBinding(ProgressBar.ShowProgressTextProperty).ProvideValue());
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				layoutTransformControl3.Child = textBlock2;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
				context.ProvideTargetProperty = TextBlock.ForegroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(foregroundProperty, binding);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				MultiBinding multiBinding;
				MultiBinding binding2 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("StringFormatConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				multiBinding.Converter = (IMultiValueConverter)obj;
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = ProgressBar.ProgressTextFormatProperty
				}.ProvideValue());
				IList<IBinding> bindings = multiBinding.Bindings;
				CompiledBindingExtension obj2 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(RangeBase.ValueProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item = obj2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings.Add(item);
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = ProgressBar.PercentageProperty
				}.ProvideValue());
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = RangeBase.MinimumProperty
				}.ProvideValue());
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = RangeBase.MaximumProperty
				}.ProvideValue());
				context.PopParent();
				textBlock3.Bind(textProperty, binding2);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				context.PopParent();
				((ISupportInitialize)layoutTransformControl4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ProgressBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlHighlightAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlBackgroundBaseLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ProgressBarBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SystemControlHighlightTransparentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ProgressBarThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.VerticalAlignmentProperty;
			setter14.Value = VerticalAlignment.Center;
			controlTheme.Add(setter14);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(ProgressBar);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_118.Build, context);
			context.PopParent();
			setter16.Value = value7;
			context.PopParent();
			controlTheme.Add(setter15);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":horizontal").Template()
				.OfType(typeof(Border))
				.Name("PART_Indicator");
			Setter setter17 = new Setter();
			setter17.Property = Layoutable.HorizontalAlignmentProperty;
			setter17.Value = HorizontalAlignment.Left;
			style.Add(setter17);
			Setter setter18 = new Setter();
			setter18.Property = Layoutable.VerticalAlignmentProperty;
			setter18.Value = VerticalAlignment.Stretch;
			style.Add(setter18);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(Border))
				.Name("PART_Indicator");
			Setter setter19 = new Setter();
			setter19.Property = Layoutable.HorizontalAlignmentProperty;
			setter19.Value = HorizontalAlignment.Stretch;
			style2.Add(setter19);
			Setter setter20 = new Setter();
			setter20.Property = Layoutable.VerticalAlignmentProperty;
			setter20.Value = VerticalAlignment.Bottom;
			style2.Add(setter20);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter21 = new Setter();
			setter21.Property = Layoutable.MinWidthProperty;
			setter21.Value = 200.0;
			style3.Add(setter21);
			Setter setter22 = new Setter();
			setter22.Property = Layoutable.MinHeightProperty;
			setter22.Value = 4.0;
			style3.Add(setter22);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter23 = new Setter();
			setter23.Property = Layoutable.MinWidthProperty;
			setter23.Value = 4.0;
			style4.Add(setter23);
			Setter setter24 = new Setter();
			setter24.Property = Layoutable.MinHeightProperty;
			setter24.Value = 200.0;
			style4.Add(setter24);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(LayoutTransformControl))
				.Name("PART_LayoutTransformControl");
			Setter setter25 = new Setter();
			setter25.Property = LayoutTransformControl.LayoutTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, 90.0, BindingPriority.Template);
			setter25.Value = rotateTransform;
			style5.Add(setter25);
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":indeterminate").Template()
				.OfType(typeof(Panel))
				.Name("DeterminateRoot");
			Setter setter26 = new Setter();
			setter26.Property = Visual.OpacityProperty;
			setter26.Value = 0.0;
			style6.Add(setter26);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = ((Selector?)null).Nesting().Class(":indeterminate").Template()
				.OfType(typeof(Panel))
				.Name("IndeterminateRoot");
			Setter setter27 = new Setter();
			setter27.Property = Visual.OpacityProperty;
			setter27.Value = 1.0;
			style7.Add(setter27);
			controlTheme.Add(style7);
			Style style8;
			Style style9 = (style8 = new Style());
			context.PushParent(style8);
			Style style10 = style8;
			style10.Selector = ((Selector?)null).Nesting().Class(":horizontal").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator");
			IList<IAnimation> animations = style10.Animations;
			Animation animation;
			Animation item = (animation = new Animation());
			context.PushParent(animation);
			Animation animation2 = animation;
			animation2.IterationCount = IterationCount.Parse("Infinite");
			animation2.Duration = TimeSpan.FromTicks(20000000L);
			KeyFrames children = animation2.Children;
			KeyFrame keyFrame;
			KeyFrame item2 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame2 = keyFrame;
			keyFrame2.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame2.KeyTime = TimeSpan.FromTicks(0L);
			AvaloniaList<IAnimationSetter> setters = keyFrame2.Setters;
			Setter item3 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value8 = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value8;
			context.PopParent();
			setters.Add(item3);
			context.PopParent();
			children.Add(item2);
			KeyFrames children2 = animation2.Children;
			KeyFrame item4 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame3 = keyFrame;
			keyFrame3.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame3.KeyTime = TimeSpan.FromTicks(15000000L);
			AvaloniaList<IAnimationSetter> setters2 = keyFrame3.Setters;
			Setter item5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value9 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value9;
			context.PopParent();
			setters2.Add(item5);
			context.PopParent();
			children2.Add(item4);
			KeyFrames children3 = animation2.Children;
			KeyFrame item6 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame4 = keyFrame;
			keyFrame4.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame4.KeyTime = TimeSpan.FromTicks(20000000L);
			AvaloniaList<IAnimationSetter> setters3 = keyFrame4.Setters;
			Setter item7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value10 = compiledBindingExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value10;
			context.PopParent();
			setters3.Add(item7);
			context.PopParent();
			children3.Add(item6);
			context.PopParent();
			animations.Add(item);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style8 = new Style());
			context.PushParent(style8);
			Style style12 = style8;
			style12.Selector = ((Selector?)null).Nesting().Class(":horizontal").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator2");
			IList<IAnimation> animations2 = style12.Animations;
			Animation item8 = (animation = new Animation());
			context.PushParent(animation);
			Animation animation3 = animation;
			animation3.IterationCount = IterationCount.Parse("Infinite");
			animation3.Duration = TimeSpan.FromTicks(20000000L);
			KeyFrames children4 = animation3.Children;
			KeyFrame item9 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame5 = keyFrame;
			keyFrame5.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame5.KeyTime = TimeSpan.FromTicks(0L);
			AvaloniaList<IAnimationSetter> setters4 = keyFrame5.Setters;
			Setter item10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value11 = compiledBindingExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value11;
			context.PopParent();
			setters4.Add(item10);
			context.PopParent();
			children4.Add(item9);
			KeyFrames children5 = animation3.Children;
			KeyFrame item11 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame6 = keyFrame;
			keyFrame6.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame6.KeyTime = TimeSpan.FromTicks(7500000L);
			AvaloniaList<IAnimationSetter> setters5 = keyFrame6.Setters;
			Setter item12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value12 = compiledBindingExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value12;
			context.PopParent();
			setters5.Add(item12);
			context.PopParent();
			children5.Add(item11);
			KeyFrames children6 = animation3.Children;
			KeyFrame item13 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame7 = keyFrame;
			keyFrame7.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame7.KeyTime = TimeSpan.FromTicks(20000000L);
			AvaloniaList<IAnimationSetter> setters6 = keyFrame7.Setters;
			Setter item14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value13 = compiledBindingExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value13;
			context.PopParent();
			setters6.Add(item14);
			context.PopParent();
			children6.Add(item13);
			context.PopParent();
			animations2.Add(item8);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = (style8 = new Style());
			context.PushParent(style8);
			Style style14 = style8;
			style14.Selector = ((Selector?)null).Nesting().Class(":vertical").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator");
			IList<IAnimation> animations3 = style14.Animations;
			Animation item15 = (animation = new Animation());
			context.PushParent(animation);
			Animation animation4 = animation;
			animation4.IterationCount = IterationCount.Parse("Infinite");
			animation4.Duration = TimeSpan.FromTicks(20000000L);
			KeyFrames children7 = animation4.Children;
			KeyFrame item16 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame8 = keyFrame;
			keyFrame8.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame8.KeyTime = TimeSpan.FromTicks(0L);
			AvaloniaList<IAnimationSetter> setters7 = keyFrame8.Setters;
			Setter item17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension7 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value14 = compiledBindingExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value14;
			context.PopParent();
			setters7.Add(item17);
			context.PopParent();
			children7.Add(item16);
			KeyFrames children8 = animation4.Children;
			KeyFrame item18 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame9 = keyFrame;
			keyFrame9.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame9.KeyTime = TimeSpan.FromTicks(15000000L);
			AvaloniaList<IAnimationSetter> setters8 = keyFrame9.Setters;
			Setter item19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension8 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value15 = compiledBindingExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value15;
			context.PopParent();
			setters8.Add(item19);
			context.PopParent();
			children8.Add(item18);
			KeyFrames children9 = animation4.Children;
			KeyFrame item20 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame10 = keyFrame;
			keyFrame10.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame10.KeyTime = TimeSpan.FromTicks(20000000L);
			AvaloniaList<IAnimationSetter> setters9 = keyFrame10.Setters;
			Setter item21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension9 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerAnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value16 = compiledBindingExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value16;
			context.PopParent();
			setters9.Add(item21);
			context.PopParent();
			children9.Add(item20);
			context.PopParent();
			animations3.Add(item15);
			context.PopParent();
			controlTheme.Add(style13);
			Style style15 = (style8 = new Style());
			context.PushParent(style8);
			Style style16 = style8;
			style16.Selector = ((Selector?)null).Nesting().Class(":vertical").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator2");
			IList<IAnimation> animations4 = style16.Animations;
			Animation item22 = (animation = new Animation());
			context.PushParent(animation);
			Animation animation5 = animation;
			animation5.IterationCount = IterationCount.Parse("Infinite");
			animation5.Duration = TimeSpan.FromTicks(20000000L);
			KeyFrames children10 = animation5.Children;
			KeyFrame item23 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame11 = keyFrame;
			keyFrame11.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame11.KeyTime = TimeSpan.FromTicks(0L);
			AvaloniaList<IAnimationSetter> setters10 = keyFrame11.Setters;
			Setter item24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension10 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value17 = compiledBindingExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value17;
			context.PopParent();
			setters10.Add(item24);
			context.PopParent();
			children10.Add(item23);
			KeyFrames children11 = animation5.Children;
			KeyFrame item25 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame12 = keyFrame;
			keyFrame12.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame12.KeyTime = TimeSpan.FromTicks(7500000L);
			AvaloniaList<IAnimationSetter> setters11 = keyFrame12.Setters;
			Setter item26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension11 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationStartPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value18 = compiledBindingExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value18;
			context.PopParent();
			setters11.Add(item26);
			context.PopParent();
			children11.Add(item25);
			KeyFrames children12 = animation5.Children;
			KeyFrame item27 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame13 = keyFrame;
			keyFrame13.KeySpline = KeySpline.Parse("0.4,0,0.6,1", CultureInfo.InvariantCulture);
			keyFrame13.KeyTime = TimeSpan.FromTicks(20000000L);
			AvaloniaList<IAnimationSetter> setters12 = keyFrame13.Setters;
			Setter item28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension12 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2AnimationEndPositionProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value19 = compiledBindingExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value19;
			context.PopParent();
			setters12.Add(item28);
			context.PopParent();
			children12.Add(item27);
			context.PopParent();
			animations4.Add(item22);
			context.PopParent();
			controlTheme.Add(style15);
			Style style17 = (style8 = new Style());
			context.PushParent(style8);
			Style style18 = style8;
			style18.Selector = ((Selector?)null).Nesting().Class(":horizontal").Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = Layoutable.WidthProperty;
			CompiledBindingExtension compiledBindingExtension13 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value20 = compiledBindingExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value20;
			context.PopParent();
			style18.Add(setter40);
			context.PopParent();
			controlTheme.Add(style17);
			Style style19 = (style8 = new Style());
			context.PushParent(style8);
			Style style20 = style8;
			style20.Selector = ((Selector?)null).Nesting().Class(":horizontal").Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator2");
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = Layoutable.WidthProperty;
			CompiledBindingExtension compiledBindingExtension14 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2WidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value21 = compiledBindingExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value21;
			context.PopParent();
			style20.Add(setter42);
			context.PopParent();
			controlTheme.Add(style19);
			Style style21 = (style8 = new Style());
			context.PushParent(style8);
			Style style22 = style8;
			style22.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Layoutable.HeightProperty;
			CompiledBindingExtension compiledBindingExtension15 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.ContainerWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value22 = compiledBindingExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value22;
			context.PopParent();
			style22.Add(setter44);
			context.PopParent();
			controlTheme.Add(style21);
			Style style23 = (style8 = new Style());
			context.PushParent(style8);
			Style style24 = style8;
			style24.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(Border))
				.Name("IndeterminateProgressBarIndicator2");
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = Layoutable.HeightProperty;
			CompiledBindingExtension compiledBindingExtension16 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.Container2WidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value23 = compiledBindingExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value23;
			context.PopParent();
			style24.Add(setter46);
			context.PopParent();
			controlTheme.Add(style23);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_119
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Indent = 1.0;
			marginMultiplierConverter.Left = true;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_120
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Indent = 1.0;
			marginMultiplierConverter.Right = true;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_121
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M0,9 L10,0 20,9 19,10 10,2 1,10 z");
		}
	}

	private class XamlClosure_122
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M0,1 L10,10 20,1 19,0 10,8 1,0 z");
		}
	}

	private class XamlClosure_123
	{
		private class XamlClosure_124
		{
			private class DynamicSetters_125
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_125.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = Layoutable.MinWidthProperty;
			setter.Value = 34.0;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.TemplateProperty;
			setter2.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_124.Build, context)
			};
			controlTheme.Add(setter2);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RepeatButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			style3.Add(setter4);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RepeatButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			style5.Add(setter6);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter8 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter9 = setter3;
			setter9.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("RepeatButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			style7.Add(setter8);
			Setter setter10 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter11 = setter3;
			setter11.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("RepeatButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			style7.Add(setter10);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_126
	{
		private class XamlClosure_127
		{
			private class DynamicSetters_128
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(PathIcon P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(PathIcon.DataProperty, binding);
						return;
					}
					if (P_2 is Geometry)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(PathIcon.DataProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(PathIcon.DataProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				dataValidationErrors.Content = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border3.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				border3.Child = dockPanel2;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = dockPanel);
				context.PushParent(dockPanel3);
				Controls children = dockPanel3.Children;
				StackPanel stackPanel;
				StackPanel stackPanel2 = (stackPanel = new StackPanel());
				((ISupportInitialize)stackPanel2).BeginInit();
				children.Add(stackPanel2);
				StackPanel stackPanel3;
				StackPanel stackPanel4 = (stackPanel3 = stackPanel);
				context.PushParent(stackPanel3);
				stackPanel3.Name = "PART_SpinnerPanel";
				service = stackPanel3;
				context.AvaloniaNameScope.Register("PART_SpinnerPanel", service);
				stackPanel3.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				stackPanel3.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				stackPanel3.Bind(Visual.IsVisibleProperty, new TemplateBinding(ButtonSpinner.ShowButtonSpinnerProperty).ProvideValue());
				Controls children2 = stackPanel3.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children2.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_IncreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentButtonSpinnerRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_128.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				repeatButton5.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				repeatButton5.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding3 = templateBinding;
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("ButtonSpinnerLeftThickness");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding3.Converter = (IValueConverter)obj2;
				context.PopParent();
				repeatButton5.Bind(borderThicknessProperty, templateBinding2.ProvideValue());
				repeatButton5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				repeatButton5.SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton5.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				repeatButton5.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				repeatButton5.SetValue(Layoutable.MinWidthProperty, 34.0, BindingPriority.Template);
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				repeatButton5.Content = pathIcon2;
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				PathIcon pathIcon5 = pathIcon3;
				pathIcon5.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
				pathIcon5.SetValue(Layoutable.HeightProperty, 8.0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("ButtonSpinnerIncreaseButtonIcon");
				context.ProvideTargetProperty = PathIcon.DataProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_128.DynamicSetter_2(pathIcon5, BindingPriority.Template, obj3);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children3 = stackPanel3.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children3.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_DecreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentButtonSpinnerRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_128.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj4);
				repeatButton9.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				repeatButton9.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty2 = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding4 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding5 = templateBinding;
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("ButtonSpinnerLeftThickness");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding5.Converter = (IValueConverter)obj5;
				context.PopParent();
				repeatButton9.Bind(borderThicknessProperty2, templateBinding4.ProvideValue());
				repeatButton9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				repeatButton9.SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton9.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				repeatButton9.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				repeatButton9.SetValue(Layoutable.MinWidthProperty, 34.0, BindingPriority.Template);
				PathIcon pathIcon6;
				PathIcon pathIcon7 = (pathIcon6 = new PathIcon());
				((ISupportInitialize)pathIcon7).BeginInit();
				repeatButton9.Content = pathIcon7;
				PathIcon pathIcon8 = (pathIcon3 = pathIcon6);
				context.PushParent(pathIcon3);
				PathIcon pathIcon9 = pathIcon3;
				pathIcon9.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
				pathIcon9.SetValue(Layoutable.HeightProperty, 8.0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("ButtonSpinnerDecreaseButtonIcon");
				context.ProvideTargetProperty = PathIcon.DataProperty;
				object? obj6 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_128.DynamicSetter_2(pathIcon9, BindingPriority.Template, obj6);
				context.PopParent();
				((ISupportInitialize)pathIcon8).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)stackPanel4).EndInit();
				Controls children4 = dockPanel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children4.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_128.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ButtonSpinner);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.PaddingProperty;
			setter4.Value = new Thickness(10.0, 0.0, 10.0, 0.0);
			controlTheme.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TextControlBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TextControlBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TextControlThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TextControlThemeMinWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			controlTheme.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = new Setter();
			setter19.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter19.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter19);
			Setter setter20 = new Setter();
			setter20.Property = ContentControl.VerticalContentAlignmentProperty;
			setter20.Value = VerticalAlignment.Center;
			controlTheme.Add(setter20);
			Setter setter21 = new Setter();
			setter21.Property = InputElement.FocusableProperty;
			setter21.Value = true;
			controlTheme.Add(setter21);
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_127.Build, context);
			context.PopParent();
			setter23.Value = value9;
			context.PopParent();
			controlTheme.Add(setter22);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":left");
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(StackPanel))
				.Name("PART_SpinnerPanel");
			Setter setter24 = new Setter();
			setter24.Property = DockPanel.DockProperty;
			setter24.Value = Dock.Left;
			style4.Add(setter24);
			style3.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton));
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = TemplatedControl.BorderThicknessProperty;
			TemplateBinding templateBinding;
			TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
			context.PushParent(templateBinding);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ButtonSpinnerRightThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			templateBinding.Converter = (IValueConverter)obj;
			context.PopParent();
			setter26.Value = templateBinding2.ProvideValue();
			context.PopParent();
			style6.Add(setter25);
			context.PopParent();
			style3.Add(style5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class(":error");
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SystemErrorTextColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value10;
			context.PopParent();
			style8.Add(setter27);
			context.PopParent();
			controlTheme.Add(style7);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_129
	{
		private class XamlClosure_130
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.SetValue(Layoutable.HeightProperty, 24.0, BindingPriority.Template);
				grid.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				grid.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				grid.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				grid.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 4;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid.ColumnDefinitions = columnDefinitions;
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 4;
				rowDefinitions.Add(new RowDefinition(new GridLength(23.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
				grid.RowDefinitions = rowDefinitions;
				grid.SetValue(Visual.ClipToBoundsProperty, value: false, BindingPriority.Template);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -1.0, 0.0, 0.0), BindingPriority.Template);
				border.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
				border.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				border.SetValue(Border.BorderThicknessProperty, new Thickness(0.5, 0.0, 0.5, 0.5), BindingPriority.Template);
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				border.SetValue(Border.CornerRadiusProperty, new CornerRadius(0.0, 0.0, 2.0, 2.0), BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
				border3.SetValue(Grid.RowSpanProperty, 1, BindingPriority.Template);
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				border3.SetValue(Border.BorderThicknessProperty, new Thickness(0.5, 0.5, 0.5, 0.5), BindingPriority.Template);
				border3.SetValue(Border.CornerRadiusProperty, new CornerRadius(2.0, 2.0, 0.0, 0.0), BindingPriority.Template);
				((ISupportInitialize)border3).EndInit();
				Controls children3 = grid.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children3.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				textBlock3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -1.0, 0.0, 0.0), BindingPriority.Template);
				textBlock3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				textBlock3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				textBlock3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				textBlock3.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
				textBlock3.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				textBlock3.Bind(TextBlock.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				StyledProperty<double> fontSizeProperty = TextBlock.FontSizeProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarDatePickerCurrentDayFontSize");
				context.ProvideTargetProperty = TextBlock.FontSizeProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(fontSizeProperty, binding);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				compiledBindingExtension.Source = DateTime.Today;
				compiledBindingExtension.Path = new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.System_002EDateTime_002CSystem_002ERuntime_002EDay_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build();
				context.ProvideTargetProperty = TextBlock.TextProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(textProperty, binding2);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children4 = grid.Children;
				Ellipse ellipse;
				Ellipse ellipse2 = (ellipse = new Ellipse());
				((ISupportInitialize)ellipse2).BeginInit();
				children4.Add(ellipse2);
				ellipse.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				ellipse.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				ellipse.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				ellipse.SetValue(Shape.StrokeThicknessProperty, 0.0, BindingPriority.Template);
				ellipse.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
				ellipse.SetValue(Layoutable.WidthProperty, 3.0, BindingPriority.Template);
				ellipse.SetValue(Layoutable.HeightProperty, 3.0, BindingPriority.Template);
				((ISupportInitialize)ellipse).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarDatePickerCalendarGlyphForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.MarginProperty;
			setter4.Value = new Thickness(2.0, 0.0, 4.0, 0.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.WidthProperty;
			setter5.Value = 20.0;
			controlTheme.Add(setter5);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_130.Build, context);
			context.PopParent();
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_131
	{
		private class XamlClosure_132
		{
			private class DynamicSetters_133
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				dataValidationErrors.Content = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "LayoutRoot";
				service = panel3;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				panel3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				panel3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Controls children = panel3.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)border).EndInit();
				Controls children2 = panel3.Children;
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				children2.Add(grid2);
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children3 = grid3.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children3.Add(textBox2);
				TextBox textBox3;
				TextBox textBox4 = (textBox3 = textBox);
				context.PushParent(textBox3);
				textBox3.Name = "PART_TextBox";
				service = textBox3;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox3.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				textBox3.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				textBox3.SetValue(TemplatedControl.BorderBrushProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				textBox3.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				textBox3.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				textBox3.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				textBox3.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox3.Bind(TextBox.WatermarkProperty, new TemplateBinding(CalendarDatePicker.WatermarkProperty).ProvideValue());
				textBox3.Bind(TextBox.UseFloatingWatermarkProperty, new TemplateBinding(CalendarDatePicker.UseFloatingWatermarkProperty).ProvideValue());
				textBox3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				textBox3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				textBox3.Bind(TextBox.VerticalContentAlignmentProperty, new TemplateBinding(CalendarDatePicker.VerticalContentAlignmentProperty).ProvideValue());
				textBox3.Bind(TextBox.HorizontalContentAlignmentProperty, new TemplateBinding(CalendarDatePicker.HorizontalContentAlignmentProperty).ProvideValue());
				textBox3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				Styles styles = textBox3.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(TextBox)).Name("PART_TextBox").Class(":focus")
					.Template()
					.OfType(typeof(Border))
					.Name("PART_BorderElement");
				Setter setter = new Setter();
				setter.Property = Border.BackgroundProperty;
				setter.Value = new ImmutableSolidColorBrush(16777215u);
				style.Add(setter);
				Setter setter2 = new Setter();
				setter2.Property = Border.BorderBrushProperty;
				setter2.Value = new ImmutableSolidColorBrush(16777215u);
				style.Add(setter2);
				Setter setter3 = new Setter();
				setter3.Property = Border.BorderThicknessProperty;
				setter3.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
				style.Add(setter3);
				styles.Add(style);
				Styles styles2 = textBox3.Styles;
				Style style2;
				Style item = (style2 = new Style());
				context.PushParent(style2);
				Style style3 = style2;
				style3.Selector = ((Selector?)null).OfType(typeof(TextBox)).Name("PART_TextBox").Class(":disabled");
				Style style4 = new Style();
				style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
					.Name("PART_BorderElement");
				Setter setter4 = new Setter();
				setter4.Property = Border.BackgroundProperty;
				setter4.Value = new ImmutableSolidColorBrush(16777215u);
				style4.Add(setter4);
				Setter setter5 = new Setter();
				setter5.Property = Border.BorderBrushProperty;
				setter5.Value = new ImmutableSolidColorBrush(16777215u);
				style4.Add(setter5);
				style3.Add(style4);
				Style style5 = (style2 = new Style());
				context.PushParent(style2);
				Style style6 = style2;
				style6.Selector = Selectors.Or(new List<Selector>
				{
					((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
						.Name("PART_Watermark"),
					((Selector?)null).Nesting().Descendant().OfType(typeof(TextBlock))
						.Name("PART_FloatingWatermark")
				});
				Setter setter6;
				Setter setter7 = (setter6 = new Setter());
				context.PushParent(setter6);
				setter6.Property = TextElement.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarDatePickerTextForegroundDisabled");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter6.Value = value;
				context.PopParent();
				style6.Add(setter7);
				context.PopParent();
				style3.Add(style5);
				context.PopParent();
				styles2.Add(item);
				context.PopParent();
				((ISupportInitialize)textBox4).EndInit();
				Controls children4 = grid3.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children4.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				button3.Name = "PART_Button";
				service = button3;
				context.AvaloniaNameScope.Register("PART_Button", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentCalendarDatePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_133.DynamicSetter_1(button3, BindingPriority.Template, obj);
				button3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				button3.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children5 = grid3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children5.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				Avalonia.Controls.Calendar calendar;
				Avalonia.Controls.Calendar calendar2 = (calendar = new Avalonia.Controls.Calendar());
				((ISupportInitialize)calendar2).BeginInit();
				popup.Child = calendar2;
				calendar.Name = "PART_Calendar";
				service = calendar;
				context.AvaloniaNameScope.Register("PART_Calendar", service);
				calendar.Bind(Avalonia.Controls.Calendar.FirstDayOfWeekProperty, new TemplateBinding(CalendarDatePicker.FirstDayOfWeekProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.IsTodayHighlightedProperty, new TemplateBinding(CalendarDatePicker.IsTodayHighlightedProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.SelectedDateProperty, new TemplateBinding(CalendarDatePicker.SelectedDateProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateProperty, new TemplateBinding(CalendarDatePicker.DisplayDateProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateStartProperty, new TemplateBinding(CalendarDatePicker.DisplayDateStartProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateEndProperty, new TemplateBinding(CalendarDatePicker.DisplayDateEndProperty).ProvideValue());
				((ISupportInitialize)calendar).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarDatePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarDatePickerBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarDatePickerForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarDatePickerBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CalendarDatePickerBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("CalendarDatePickerMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = CalendarDatePicker.HorizontalContentAlignmentProperty;
			setter16.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = CalendarDatePicker.VerticalContentAlignmentProperty;
			setter17.Value = VerticalAlignment.Center;
			controlTheme.Add(setter17);
			Setter setter18 = new Setter();
			setter18.Property = TemplatedControl.PaddingProperty;
			setter18.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter18);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_132.Build, context);
			context.PopParent();
			setter20.Value = value7;
			context.PopParent();
			controlTheme.Add(setter19);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("CalendarDatePickerBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value8;
			context.PopParent();
			style3.Add(setter21);
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("CalendarDatePickerBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value9;
			context.PopParent();
			style3.Add(setter23);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("CalendarDatePickerBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value10;
			context.PopParent();
			style5.Add(setter25);
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("CalendarDatePickerBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value11;
			context.PopParent();
			style5.Add(setter27);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Background");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("CalendarDatePickerBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value12;
			context.PopParent();
			style9.Add(setter29);
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("CalendarDatePickerBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value13;
			context.PopParent();
			style9.Add(setter31);
			context.PopParent();
			style7.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Button))
				.Name("PART_Button");
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("CalendarDatePickerCalendarGlyphForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value14;
			context.PopParent();
			style11.Add(setter33);
			context.PopParent();
			style7.Add(style10);
			context.PopParent();
			controlTheme.Add(style6);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":focus-within").Not(((Selector?)null).OfType(typeof(CalendarDatePicker)).Class(":focus"))
				.Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TextControlBackgroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value15;
			context.PopParent();
			style13.Add(setter35);
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("TextControlBorderBrushFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value16;
			context.PopParent();
			style13.Add(setter37);
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("TextControlBorderThemeThicknessFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value17;
			context.PopParent();
			style13.Add(setter39);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value18;
			context.PopParent();
			style15.Add(setter41);
			context.PopParent();
			controlTheme.Add(style14);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_134
	{
		private class XamlClosure_135
		{
			private class DynamicSetters_136
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ContentPresenter contentPresenter = (ContentPresenter)intermediateRoot;
				context.PushParent(contentPresenter);
				contentPresenter.Name = "Text";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("Text", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<IBrush?> borderBrushProperty = ContentPresenter.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewNavigationButtonBorderBrush");
				context.ProvideTargetProperty = ContentPresenter.BorderBrushProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter.Bind(borderBrushProperty, binding);
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_136.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = Layoutable.HorizontalAlignmentProperty;
			setter.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.VerticalAlignmentProperty;
			setter2.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = ContentControl.VerticalContentAlignmentProperty;
			setter3.Value = VerticalAlignment.Center;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.FontSizeProperty;
			setter4.Value = 20.0;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewNavigationButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter9 = setter5;
			setter9.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_135.Build, context);
			context.PopParent();
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("Text");
			Setter setter10 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter11 = setter5;
			setter11.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewNavigationButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			style3.Add(setter10);
			Setter setter12 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter13 = setter5;
			setter13.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarViewNavigationButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			style3.Add(setter12);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("Text");
			Setter setter14 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter15 = setter5;
			setter15.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("CalendarViewNavigationButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style5.Add(setter14);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter16 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter17 = setter5;
			setter17.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("CalendarViewWeekDayForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value6;
			context.PopParent();
			style7.Add(setter16);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_137
	{
		private class XamlClosure_138
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new TextBlock();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				TextBlock textBlock = (TextBlock)intermediateRoot;
				context.PushParent(textBlock);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				context.ProvideTargetProperty = TextBlock.TextProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock.Bind(textProperty, binding);
				textBlock.HorizontalAlignment = HorizontalAlignment.Center;
				textBlock.VerticalAlignment = VerticalAlignment.Center;
				textBlock.FontSize = 12.0;
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_139
		{
			private class DynamicSetters_140
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border2.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				grid5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(40.0, GridUnitType.Pixel)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid5.RowDefinitions = rowDefinitions;
				grid5.SetValue(Layoutable.MinWidthProperty, 294.0, BindingPriority.Template);
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(5.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid9.ColumnDefinitions = columnDefinitions;
				Controls children2 = grid9.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children2.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_HeaderButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_HeaderButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentCalendarButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_140.DynamicSetter_1(button5, BindingPriority.Template, obj);
				button5.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button5.SetValue(TemplatedControl.PaddingProperty, new Thickness(12.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				button5.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children3 = grid9.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children3.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_PreviousButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_PreviousButton", service);
				button9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentCalendarButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_140.DynamicSetter_1(button9, BindingPriority.Template, obj2);
				button9.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button9.SetValue(TemplatedControl.PaddingProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				button9.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button9.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("CalendarViewForeground");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding);
				path5.SetValue(Shape.StrokeThicknessProperty, 1.5, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M 0,9 L 9,0 L 18,9"), BindingPriority.Template);
				path5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				Controls children4 = grid9.Children;
				Button button10;
				Button button11 = (button10 = new Button());
				((ISupportInitialize)button11).BeginInit();
				children4.Add(button11);
				Button button12 = (button3 = button10);
				context.PushParent(button3);
				Button button13 = button3;
				button13.Name = "PART_NextButton";
				service = button13;
				context.AvaloniaNameScope.Register("PART_NextButton", service);
				button13.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentCalendarButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_140.DynamicSetter_1(button13, BindingPriority.Template, obj3);
				button13.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button13.SetValue(TemplatedControl.PaddingProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				button13.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button13.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewForeground");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(strokeProperty2, binding2);
				path9.SetValue(Shape.StrokeThicknessProperty, 1.5, BindingPriority.Template);
				path9.SetValue(Path.DataProperty, Geometry.Parse("M 0,0 L 9,9 L 18,0"), BindingPriority.Template);
				path9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children5 = grid5.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children5.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.Name = "BackgroundLayer";
				service = border6;
				context.AvaloniaNameScope.Register("BackgroundLayer", service);
				border6.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border6.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 38.0, 0.0, 0.0), BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_MonthView").Property(Visual.IsVisibleProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(isVisibleProperty, binding3);
				border6.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				Controls children6 = grid5.Children;
				Grid grid10;
				Grid grid11 = (grid10 = new Grid());
				((ISupportInitialize)grid11).BeginInit();
				children6.Add(grid11);
				grid10.Name = "PART_MonthView";
				service = grid10;
				context.AvaloniaNameScope.Register("PART_MonthView", service);
				grid10.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				grid10.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				grid10.SetValue(Layoutable.MinHeightProperty, 290.0, BindingPriority.Template);
				RowDefinitions rowDefinitions2 = grid10.RowDefinitions;
				RowDefinition rowDefinition = new RowDefinition();
				rowDefinition.SetValue(RowDefinition.HeightProperty, new GridLength(38.0, GridUnitType.Pixel), BindingPriority.Template);
				rowDefinitions2.Add(rowDefinition);
				RowDefinitions rowDefinitions3 = grid10.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions3.Add(rowDefinition2);
				RowDefinitions rowDefinitions4 = grid10.RowDefinitions;
				RowDefinition rowDefinition3 = new RowDefinition();
				rowDefinition3.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions4.Add(rowDefinition3);
				RowDefinitions rowDefinitions5 = grid10.RowDefinitions;
				RowDefinition rowDefinition4 = new RowDefinition();
				rowDefinition4.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions5.Add(rowDefinition4);
				RowDefinitions rowDefinitions6 = grid10.RowDefinitions;
				RowDefinition rowDefinition5 = new RowDefinition();
				rowDefinition5.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions6.Add(rowDefinition5);
				RowDefinitions rowDefinitions7 = grid10.RowDefinitions;
				RowDefinition rowDefinition6 = new RowDefinition();
				rowDefinition6.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions7.Add(rowDefinition6);
				RowDefinitions rowDefinitions8 = grid10.RowDefinitions;
				RowDefinition rowDefinition7 = new RowDefinition();
				rowDefinition7.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions8.Add(rowDefinition7);
				ColumnDefinitions columnDefinitions2 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition);
				ColumnDefinitions columnDefinitions3 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions4 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition3);
				ColumnDefinitions columnDefinitions5 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions5.Add(columnDefinition4);
				ColumnDefinitions columnDefinitions6 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition5 = new ColumnDefinition();
				columnDefinition5.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions6.Add(columnDefinition5);
				ColumnDefinitions columnDefinitions7 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition6 = new ColumnDefinition();
				columnDefinition6.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions7.Add(columnDefinition6);
				ColumnDefinitions columnDefinitions8 = grid10.ColumnDefinitions;
				ColumnDefinition columnDefinition7 = new ColumnDefinition();
				columnDefinition7.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions8.Add(columnDefinition7);
				((ISupportInitialize)grid10).EndInit();
				Controls children7 = grid5.Children;
				Grid grid12;
				Grid grid13 = (grid12 = new Grid());
				((ISupportInitialize)grid13).BeginInit();
				children7.Add(grid13);
				grid12.Name = "PART_YearView";
				service = grid12;
				context.AvaloniaNameScope.Register("PART_YearView", service);
				grid12.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				grid12.SetValue(Layoutable.MinHeightProperty, 290.0, BindingPriority.Template);
				grid12.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				grid12.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				RowDefinitions rowDefinitions9 = grid12.RowDefinitions;
				RowDefinition rowDefinition8 = new RowDefinition();
				rowDefinition8.SetValue(RowDefinition.HeightProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				rowDefinitions9.Add(rowDefinition8);
				RowDefinitions rowDefinitions10 = grid12.RowDefinitions;
				RowDefinition rowDefinition9 = new RowDefinition();
				rowDefinition9.SetValue(RowDefinition.HeightProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				rowDefinitions10.Add(rowDefinition9);
				RowDefinitions rowDefinitions11 = grid12.RowDefinitions;
				RowDefinition rowDefinition10 = new RowDefinition();
				rowDefinition10.SetValue(RowDefinition.HeightProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				rowDefinitions11.Add(rowDefinition10);
				ColumnDefinitions columnDefinitions9 = grid12.ColumnDefinitions;
				ColumnDefinition columnDefinition8 = new ColumnDefinition();
				columnDefinition8.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions9.Add(columnDefinition8);
				ColumnDefinitions columnDefinitions10 = grid12.ColumnDefinitions;
				ColumnDefinition columnDefinition9 = new ColumnDefinition();
				columnDefinition9.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions10.Add(columnDefinition9);
				ColumnDefinitions columnDefinitions11 = grid12.ColumnDefinitions;
				ColumnDefinition columnDefinition10 = new ColumnDefinition();
				columnDefinition10.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions11.Add(columnDefinition10);
				ColumnDefinitions columnDefinitions12 = grid12.ColumnDefinitions;
				ColumnDefinition columnDefinition11 = new ColumnDefinition();
				columnDefinition11.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions12.Add(columnDefinition11);
				((ISupportInitialize)grid12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = CalendarItem.DayTitleTemplateProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_138.Build, context);
			context.PopParent();
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_139.Build, context);
			context.PopParent();
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Button))
				.Class(":pointerover")
				.Child()
				.OfType(typeof(Path));
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("CalendarViewNavigationButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			style3.Add(setter8);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Button))
				.Class(":pressed")
				.Child()
				.OfType(typeof(Path));
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("CalendarViewNavigationButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			style5.Add(setter10);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_141
	{
		private class XamlClosure_142
		{
			private class DynamicSetters_143
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.BackgroundProperty, (IBrush)new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				DynamicSetters_143.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(4293256677u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderBrushProperty;
			setter2.Value = new ImmutableSolidColorBrush(4291480266u);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.ForegroundProperty;
			setter3.Value = new ImmutableSolidColorBrush(4278190080u);
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.WidthProperty;
			setter4.Value = 45.0;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.VerticalAlignmentProperty;
			setter5.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.TemplateProperty;
			setter6.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_142.Build, context)
			};
			controlTheme.Add(setter6);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter7 = new Setter();
			setter7.Property = ContentPresenter.BackgroundProperty;
			setter7.Value = new TemplateBinding(ContentPresenter.BackgroundProperty).ProvideValue();
			style.Add(setter7);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter8 = new Setter();
			setter8.Property = ContentPresenter.BackgroundProperty;
			setter8.Value = new TemplateBinding(ContentPresenter.BorderBrushProperty).ProvideValue();
			style2.Add(setter8);
			controlTheme.Add(style2);
			return controlTheme;
		}
	}

	private class XamlClosure_144
	{
		private class XamlClosure_145
		{
			private class DynamicSetters_146
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				StackPanel stackPanel = (StackPanel)intermediateRoot;
				context.PushParent(stackPanel);
				stackPanel.SetValue(StackPanel.SpacingProperty, 2.0, BindingPriority.Template);
				stackPanel.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				stackPanel.SetValue(TextElement.FontSizeProperty, 10.0, BindingPriority.Template);
				stackPanel.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				Controls children = stackPanel.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_FullScreenButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_FullScreenButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_146.DynamicSetter_1(button5, BindingPriority.Template, obj);
				button5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				button5.Content = viewbox2;
				viewbox.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				path.Name = "FullScreenButtonPath";
				service = path;
				context.AvaloniaNameScope.Register("FullScreenButtonPath", service);
				path.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				path.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path.SetValue(Path.DataProperty, Geometry.Parse("M2048 2048v-819h-205v469l-1493 -1493h469v-205h-819v819h205v-469l1493 1493h-469v205h819z"), BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				((ISupportInitialize)viewbox).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children2 = stackPanel.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children2.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_MinimizeButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_MinimizeButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_146.DynamicSetter_1(button9, BindingPriority.Template, obj2);
				button9.SetValue(AutomationProperties.NameProperty, "Minimize", BindingPriority.Template);
				Viewbox viewbox3;
				Viewbox viewbox4 = (viewbox3 = new Viewbox());
				((ISupportInitialize)viewbox4).BeginInit();
				button9.Content = viewbox4;
				viewbox3.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				viewbox3.Child = path4;
				path3.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				path3.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path3.SetValue(Path.DataProperty, Geometry.Parse("M2048 1229v-205h-2048v205h2048z"), BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				((ISupportInitialize)viewbox3).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				Controls children3 = stackPanel.Children;
				Button button10;
				Button button11 = (button10 = new Button());
				((ISupportInitialize)button11).BeginInit();
				children3.Add(button11);
				Button button12 = (button3 = button10);
				context.PushParent(button3);
				Button button13 = button3;
				button13.Name = "PART_RestoreButton";
				service = button13;
				context.AvaloniaNameScope.Register("PART_RestoreButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_146.DynamicSetter_1(button13, BindingPriority.Template, obj3);
				button13.SetValue(AutomationProperties.NameProperty, "Maximize", BindingPriority.Template);
				Viewbox viewbox5;
				Viewbox viewbox6 = (viewbox5 = new Viewbox());
				((ISupportInitialize)viewbox6).BeginInit();
				button13.Content = viewbox6;
				viewbox5.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox5.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				StyledProperty<ITransform?> renderTransformProperty = Visual.RenderTransformProperty;
				RotateTransform rotateTransform = new RotateTransform();
				rotateTransform.SetValue(RotateTransform.AngleProperty, -90.0, BindingPriority.Template);
				viewbox5.SetValue(renderTransformProperty, rotateTransform, BindingPriority.Template);
				Path path5;
				Path path6 = (path5 = new Path());
				((ISupportInitialize)path6).BeginInit();
				viewbox5.Child = path6;
				path5.Name = "RestoreButtonPath";
				service = path5;
				context.AvaloniaNameScope.Register("RestoreButtonPath", service);
				path5.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				path5.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path5.SetValue(Path.DataProperty, Geometry.Parse("M2048 2048v-2048h-2048v2048h2048zM1843 1843h-1638v-1638h1638v1638z"), BindingPriority.Template);
				((ISupportInitialize)path5).EndInit();
				((ISupportInitialize)viewbox5).EndInit();
				context.PopParent();
				((ISupportInitialize)button12).EndInit();
				Controls children4 = stackPanel.Children;
				Button button14;
				Button button15 = (button14 = new Button());
				((ISupportInitialize)button15).BeginInit();
				children4.Add(button15);
				Button button16 = (button3 = button14);
				context.PushParent(button3);
				Button button17 = button3;
				button17.Name = "PART_CloseButton";
				service = button17;
				context.AvaloniaNameScope.Register("PART_CloseButton", service);
				button17.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(4293398819u), BindingPriority.Template);
				button17.SetValue(TemplatedControl.BorderBrushProperty, new ImmutableSolidColorBrush(4294013050u), BindingPriority.Template);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_146.DynamicSetter_1(button17, BindingPriority.Template, obj4);
				button17.SetValue(AutomationProperties.NameProperty, "Close", BindingPriority.Template);
				Viewbox viewbox7;
				Viewbox viewbox8 = (viewbox7 = new Viewbox());
				((ISupportInitialize)viewbox8).BeginInit();
				button17.Content = viewbox8;
				viewbox7.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox7.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path7;
				Path path8 = (path7 = new Path());
				((ISupportInitialize)path8).BeginInit();
				viewbox7.Child = path8;
				path7.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				path7.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path7.SetValue(Path.DataProperty, Geometry.Parse("M1169 1024l879 -879l-145 -145l-879 879l-879 -879l-145 145l879 879l-879 879l145 145l879 -879l879 879l145 -145z"), BindingPriority.Template);
				((ISupportInitialize)path7).EndInit();
				((ISupportInitialize)viewbox7).EndInit();
				context.PopParent();
				((ISupportInitialize)button16).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CaptionButtons);
			Setter setter = new Setter();
			setter.Property = Layoutable.MaxHeightProperty;
			setter.Value = 30.0;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_145.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":maximized").Template()
				.OfType(typeof(Path))
				.Name("RestoreButtonPath");
			Setter setter4 = new Setter();
			setter4.Property = Path.DataProperty;
			setter4.Value = Geometry.Parse("M2048 410h-410v-410h-1638v1638h410v410h1638v-1638zM1434 1434h-1229v-1229h1229v1229zM1843 1843h-1229v-205h1024v-1024h205v1229z");
			style.Add(setter4);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Path))
				.Name("FullScreenButtonPath");
			Setter setter5 = new Setter();
			setter5.Property = Visual.IsVisibleProperty;
			setter5.Value = true;
			style2.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = Path.DataProperty;
			setter6.Value = Geometry.Parse("M205 1024h819v-819h-205v469l-674 -674l-145 145l674 674h-469v205zM1374 1229h469v-205h-819v819h205v-469l674 674l145 -145z");
			style2.Add(setter6);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Button))
				.Name("PART_RestoreButton");
			Setter setter7 = new Setter();
			setter7.Property = Visual.IsVisibleProperty;
			setter7.Value = false;
			style3.Add(setter7);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Button))
				.Name("PART_MinimizeButton");
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			style4.Add(setter8);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Button))
				.Name("PART_RestoreButton")
				.Class(":disabled");
			Setter setter9 = new Setter();
			setter9.Property = Visual.OpacityProperty;
			setter9.Value = 0.2;
			style5.Add(setter9);
			controlTheme.Add(style5);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_147
	{
		private class XamlClosure_148
		{
			private class DynamicSetters_149
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "LayoutRoot";
				service = border;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FlyoutBorderThemePadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border.Child = scrollViewer2;
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				scrollViewer.Content = contentPresenter2;
				DynamicSetters_149.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(FlyoutPresenter);
			Setter setter = new Setter();
			setter.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = ContentControl.VerticalContentAlignmentProperty;
			setter2.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FlyoutPresenterBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("FlyoutBorderThemeBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter9 = setter3;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("FlyoutBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter11 = setter3;
			setter11.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("FlyoutContentThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter13 = setter3;
			setter13.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("FlyoutThemeMinWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value5;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter15 = setter3;
			setter15.Property = Layoutable.MaxWidthProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("FlyoutThemeMaxWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value6;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter17 = setter3;
			setter17.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("FlyoutThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter19 = setter3;
			setter19.Property = Layoutable.MaxHeightProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("FlyoutThemeMaxHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = new Setter();
			setter20.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter20.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter20);
			Setter setter21 = new Setter();
			setter21.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter21.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter21);
			Setter setter22 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter23 = setter3;
			setter23.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value9;
			context.PopParent();
			controlTheme.Add(setter22);
			Setter setter24 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter25 = setter3;
			setter25.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value10 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_148.Build, context);
			context.PopParent();
			setter25.Value = value10;
			context.PopParent();
			controlTheme.Add(setter24);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_150
	{
		private class XamlClosure_151
		{
			private class DynamicSetters_152
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ContentPresenter contentPresenter = (ContentPresenter)intermediateRoot;
				context.PushParent(contentPresenter);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_152.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.FontWeightProperty, FontWeight.Normal, BindingPriority.Template);
				StyledProperty<double> fontSizeProperty = ContentPresenter.FontSizeProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlContentThemeFontSize");
				context.ProvideTargetProperty = ContentPresenter.FontSizeProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter.Bind(fontSizeProperty, binding);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ListBoxItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ListBoxItemPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_151.Build, context);
			context.PopParent();
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlDisabledBaseMediumLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlHighlightListLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style5.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style5.Add(setter11);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SystemControlHighlightListMediumBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			style7.Add(setter13);
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("SystemControlHighlightListAccentLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			style11.Add(setter17);
			Setter setter19 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter20 = setter2;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value9;
			context.PopParent();
			style11.Add(setter19);
			context.PopParent();
			style9.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Not(((Selector?)null).Class(":focus")).Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter21 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter22 = setter2;
			setter22.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SystemControlHighlightListAccentLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value10;
			context.PopParent();
			style13.Add(setter21);
			Setter setter23 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter24 = setter2;
			setter24.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value11;
			context.PopParent();
			style13.Add(setter23);
			context.PopParent();
			style9.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter25 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter26 = setter2;
			setter26.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SystemControlHighlightListAccentMediumBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value12;
			context.PopParent();
			style15.Add(setter25);
			Setter setter27 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter28 = setter2;
			setter28.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value13;
			context.PopParent();
			style15.Add(setter27);
			context.PopParent();
			style9.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter29 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter30 = setter2;
			setter30.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("SystemControlHighlightListAccentHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value14;
			context.PopParent();
			style17.Add(setter29);
			Setter setter31 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter32 = setter2;
			setter32.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value15;
			context.PopParent();
			style17.Add(setter31);
			context.PopParent();
			style9.Add(style16);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_153
	{
		private class XamlClosure_154
		{
			private class DynamicSetters_155
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "PART_LayoutRoot";
				service = border2;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border2.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_HeaderPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				DynamicSetters_155.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(HeaderedSelectingItemsControl.HeaderProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedSelectingItemsControl.HeaderTemplateProperty).ProvideValue());
				contentPresenter.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = panel3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children2.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EWidth_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(minWidthProperty, binding);
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(MenuItem.IsSubMenuOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				popup3.SetValue(Popup.PlacementProperty, PlacementMode.BottomEdgeAlignedLeft, BindingPriority.Template);
				StyledProperty<IInputElement?> overlayInputPassThroughElementProperty = Popup.OverlayInputPassThroughElementProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Menu), 0).Build());
				context.ProvideTargetProperty = Popup.OverlayInputPassThroughElementProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(overlayInputPassThroughElementProperty, binding2);
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				popup3.Child = border4;
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutPresenterBackground");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding3 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding3);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutPresenterBorderBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding4 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderBrushProperty, binding4);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutPresenterBorderThemeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding5 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderThicknessProperty, binding5);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("MenuFlyoutPresenterThemePadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding6 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(paddingProperty, binding6);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("FlyoutThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding7 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(maxWidthProperty, binding7);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutThemeMinHeight");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding8 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(minHeightProperty, binding8);
				border6.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("OverlayCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding9 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(cornerRadiusProperty, binding9);
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border6.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_155.DynamicSetter_2(scrollViewer3, BindingPriority.Template, obj);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				ItemsPresenter itemsPresenter3;
				ItemsPresenter itemsPresenter4 = (itemsPresenter3 = itemsPresenter);
				context.PushParent(itemsPresenter3);
				itemsPresenter3.Name = "PART_ItemsPresenter";
				service = itemsPresenter3;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter3.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("MenuFlyoutScrollerMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding10 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsPresenter3.Bind(marginProperty, binding10);
				itemsPresenter3.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)itemsPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutItemBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("MenuBarItemPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_154.Build, context);
			context.PopParent();
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("MenuFlyoutItemBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			style5.Add(setter12);
			context.PopParent();
			style3.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutItemForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			style7.Add(setter14);
			context.PopParent();
			style3.Add(style6);
			context.PopParent();
			controlTheme.Add(style2);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("MenuFlyoutItemBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value8;
			context.PopParent();
			style9.Add(setter16);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("MenuFlyoutItemForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value9;
			context.PopParent();
			style11.Add(setter18);
			context.PopParent();
			style9.Add(style10);
			context.PopParent();
			controlTheme.Add(style8);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("MenuFlyoutItemBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value10;
			context.PopParent();
			style15.Add(setter20);
			context.PopParent();
			style13.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("MenuFlyoutItemForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value11;
			context.PopParent();
			style17.Add(setter22);
			context.PopParent();
			style13.Add(style16);
			context.PopParent();
			controlTheme.Add(style12);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_156
	{
		private class XamlClosure_157
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				itemsPresenter.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Menu);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuBarHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = ItemsControl.ItemContainerThemeProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentTopLevelMenuItem");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_157.Build, context)
			};
			controlTheme.Add(setter7);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_158
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new PlatformKeyGestureConverter();
		}
	}

	private class XamlClosure_159
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z");
		}
	}

	private class XamlClosure_160
	{
		private class XamlClosure_161
		{
			private class DynamicSetters_162
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(Path P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Path.DataProperty, binding);
						return;
					}
					if (P_2 is Geometry)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				Controls children = panel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "PART_LayoutRoot";
				service = border5;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				border5.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border5.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border5.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border5.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinition.SetValue(DefinitionBase.SharedSizeGroupProperty, "MenuItemIcon", BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinition3.SetValue(DefinitionBase.SharedSizeGroupProperty, "MenuItemIGT", BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				ColumnDefinitions columnDefinitions4 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "MenuItemChevron", BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition4);
				Controls children2 = grid3.Children;
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				children2.Add(viewbox2);
				Viewbox viewbox3;
				Viewbox viewbox4 = (viewbox3 = viewbox);
				context.PushParent(viewbox3);
				viewbox3.Name = "PART_IconPresenter";
				service = viewbox3;
				context.AvaloniaNameScope.Register("PART_IconPresenter", service);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuIconPresenterMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				viewbox3.Bind(marginProperty, binding);
				viewbox3.SetValue(Viewbox.StretchDirectionProperty, StretchDirection.DownOnly, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				viewbox3.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				viewbox3.Child = contentPresenter2;
				DynamicSetters_162.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(MenuItem.IconProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)viewbox4).EndInit();
				Controls children3 = grid3.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children3.Add(contentPresenter4);
				contentPresenter3.Name = "PART_HeaderPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				DynamicSetters_162.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(HeaderedSelectingItemsControl.HeaderProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedSelectingItemsControl.HeaderTemplateProperty).ProvideValue());
				contentPresenter3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				contentPresenter3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				contentPresenter3.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				((ISupportInitialize)contentPresenter3).EndInit();
				Controls children4 = grid3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children4.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				textBlock3.Name = "PART_InputGestureText";
				service = textBlock3;
				context.AvaloniaNameScope.Register("PART_InputGestureText", service);
				textBlock3.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				textBlock3.Classes.Add("CaptionTextBlockStyle");
				StyledProperty<Thickness> marginProperty2 = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuInputGestureTextMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(marginProperty2, binding2);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(MenuItem.InputGestureProperty));
				context.PushParent(templateBinding);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("KeyGestureConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding.Converter = (IValueConverter)obj;
				context.PopParent();
				textBlock3.Bind(textProperty, templateBinding2.ProvideValue());
				textBlock3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				textBlock3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutItemKeyboardAcceleratorTextForeground");
				context.ProvideTargetProperty = TextBlock.ForegroundProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(foregroundProperty, binding3);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children5 = grid3.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children5.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "PART_ChevronPath";
				service = path3;
				context.AvaloniaNameScope.Register("PART_ChevronPath", service);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				path3.SetValue(Layoutable.WidthProperty, 8.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("MenuItemChevronPathData");
				context.ProvideTargetProperty = Path.DataProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_162.DynamicSetter_2(path3, BindingPriority.Template, obj2);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("MenuFlyoutSubItemChevron");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding4);
				StyledProperty<Thickness> marginProperty3 = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("MenuFlyoutItemChevronMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(marginProperty3, binding5);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children6 = panel.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children6.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				popup3.SetValue(Popup.PlacementProperty, PlacementMode.RightEdgeAlignedTop, BindingPriority.Template);
				StyledProperty<double> horizontalOffsetProperty = Popup.HorizontalOffsetProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutSubItemPopupHorizontalOffset");
				context.ProvideTargetProperty = Popup.HorizontalOffsetProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(horizontalOffsetProperty, binding6);
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: false, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(MenuItem.IsSubMenuOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				popup3.Child = border7;
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("MenuFlyoutPresenterBackground");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(backgroundProperty, binding7);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("MenuFlyoutPresenterBorderBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderBrushProperty, binding8);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("MenuFlyoutPresenterBorderThemeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderThicknessProperty, binding9);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("MenuFlyoutPresenterThemePadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(paddingProperty, binding10);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("FlyoutThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(maxWidthProperty, binding11);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("MenuFlyoutThemeMinHeight");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(minHeightProperty, binding12);
				border9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("OverlayCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(cornerRadiusProperty, binding13);
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border9.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_162.DynamicSetter_3(scrollViewer3, BindingPriority.Template, obj3);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				ItemsPresenter itemsPresenter3;
				ItemsPresenter itemsPresenter4 = (itemsPresenter3 = itemsPresenter);
				context.PushParent(itemsPresenter3);
				itemsPresenter3.Name = "PART_ItemsPresenter";
				service = itemsPresenter3;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter3.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty4 = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("MenuFlyoutScrollerMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding14 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsPresenter3.Bind(marginProperty4, binding14);
				itemsPresenter3.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)itemsPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_163
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Separator();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutItemBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutItemThemePaddingNarrow");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_161.Build, context);
			context.PopParent();
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":icon").Template()
				.OfType(typeof(Viewbox))
				.Name("PART_IconPresenter");
			Setter setter12 = new Setter();
			setter12.Property = Visual.IsVisibleProperty;
			setter12.Value = true;
			style.Add(setter12);
			controlTheme.Add(style);
			Style style2;
			Style style3 = (style2 = new Style());
			context.PushParent(style2);
			Style style4 = style2;
			style4.Selector = ((Selector?)null).Nesting().Class(":selected");
			Style style5 = (style2 = new Style());
			context.PushParent(style2);
			Style style6 = style2;
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("MenuFlyoutItemBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			style6.Add(setter13);
			context.PopParent();
			style4.Add(style5);
			Style style7 = (style2 = new Style());
			context.PushParent(style2);
			Style style8 = style2;
			style8.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutItemForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			style8.Add(setter15);
			context.PopParent();
			style4.Add(style7);
			Style style9 = (style2 = new Style());
			context.PushParent(style2);
			Style style10 = style2;
			style10.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PART_InputGestureText");
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			style10.Add(setter17);
			context.PopParent();
			style4.Add(style9);
			Style style11 = (style2 = new Style());
			context.PushParent(style2);
			Style style12 = style2;
			style12.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("PART_ChevronPath");
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("MenuFlyoutSubItemChevronPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value9;
			context.PopParent();
			style12.Add(setter19);
			context.PopParent();
			style4.Add(style11);
			context.PopParent();
			controlTheme.Add(style3);
			Style style13 = (style2 = new Style());
			context.PushParent(style2);
			Style style14 = style2;
			style14.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("MenuFlyoutItemBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value10;
			context.PopParent();
			style14.Add(setter21);
			Style style15 = (style2 = new Style());
			context.PushParent(style2);
			Style style16 = style2;
			style16.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("MenuFlyoutItemForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value11;
			context.PopParent();
			style16.Add(setter23);
			context.PopParent();
			style14.Add(style15);
			Style style17 = (style2 = new Style());
			context.PushParent(style2);
			Style style18 = style2;
			style18.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(TextBlock))
				.Name("PART_InputGestureText");
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value12;
			context.PopParent();
			style18.Add(setter25);
			context.PopParent();
			style14.Add(style17);
			Style style19 = (style2 = new Style());
			context.PushParent(style2);
			Style style20 = style2;
			style20.Selector = ((Selector?)null).Nesting().Descendant().OfType(typeof(Path))
				.Name("PART_ChevronPath");
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("MenuFlyoutSubItemChevronPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value13;
			context.PopParent();
			style20.Add(setter27);
			context.PopParent();
			style14.Add(style19);
			context.PopParent();
			controlTheme.Add(style13);
			Style style21 = (style2 = new Style());
			context.PushParent(style2);
			Style style22 = style2;
			style22.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style23 = (style2 = new Style());
			context.PushParent(style2);
			Style style24 = style2;
			style24.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("MenuFlyoutItemBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value14;
			context.PopParent();
			style24.Add(setter29);
			context.PopParent();
			style22.Add(style23);
			Style style25 = (style2 = new Style());
			context.PushParent(style2);
			Style style26 = style2;
			style26.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("MenuFlyoutItemForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value15;
			context.PopParent();
			style26.Add(setter31);
			context.PopParent();
			style22.Add(style25);
			Style style27 = (style2 = new Style());
			context.PushParent(style2);
			Style style28 = style2;
			style28.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PART_InputGestureText");
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value16;
			context.PopParent();
			style28.Add(setter33);
			context.PopParent();
			style22.Add(style27);
			Style style29 = (style2 = new Style());
			context.PushParent(style2);
			Style style30 = style2;
			style30.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("PART_ChevronPath");
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("MenuFlyoutSubItemChevronDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value17;
			context.PopParent();
			style30.Add(setter35);
			context.PopParent();
			style22.Add(style29);
			context.PopParent();
			controlTheme.Add(style21);
			Style style31 = (style2 = new Style());
			context.PushParent(style2);
			Style style32 = style2;
			style32.Selector = ((Selector?)null).Nesting().Class(":open").Template()
				.OfType(typeof(Path))
				.Name("PART_ChevronPath");
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("MenuFlyoutSubItemChevronSubMenuOpened");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value18;
			context.PopParent();
			style32.Add(setter37);
			context.PopParent();
			controlTheme.Add(style31);
			Style style33 = new Style();
			style33.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(Path))
				.Name("PART_ChevronPath");
			Setter setter39 = new Setter();
			setter39.Property = Visual.IsVisibleProperty;
			setter39.Value = false;
			style33.Add(setter39);
			controlTheme.Add(style33);
			Style style34 = new Style();
			style34.Selector = ((Selector?)null).Nesting().Class(":separator");
			Setter setter40 = new Setter();
			setter40.Property = TemplatedControl.TemplateProperty;
			setter40.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_163.Build, context)
			};
			style34.Add(setter40);
			controlTheme.Add(style34);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_164
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new IBitmapToImageConverter();
		}
	}

	private class XamlClosure_165
	{
		private class XamlClosure_166
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Menu();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Menu menu = (Menu)intermediateRoot;
				context.PushParent(menu);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Ancestor(typeof(TopLevel), 0).Property(NativeMenu.IsNativeMenuExportedProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				menu.Bind(isVisibleProperty, binding);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TopLevel), 0).Property(NativeMenu.MenuProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENativeMenu_002CAvalonia_002EControls_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				menu.Bind(itemsSourceProperty, binding2);
				Styles styles = menu.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(MenuItem));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter3 = setter;
				setter3.Property = HeaderedSelectingItemsControl.HeaderProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.HeaderProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter3.Value = value;
				context.PopParent();
				style.Add(setter2);
				Setter setter4 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter5 = setter;
				setter5.Property = InputElement.IsEnabledProperty;
				CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.IsEnabledProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value2 = compiledBindingExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter5.Value = value2;
				context.PopParent();
				style.Add(setter4);
				Setter setter6 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter7 = setter;
				setter7.Property = MenuItem.InputGestureProperty;
				CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.GestureProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value3 = compiledBindingExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter7.Value = value3;
				context.PopParent();
				style.Add(setter6);
				Setter setter8 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter9 = setter;
				setter9.Property = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.MenuProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENativeMenu_002CAvalonia_002EControls_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value4 = compiledBindingExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter9.Value = value4;
				context.PopParent();
				style.Add(setter8);
				Setter setter10 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter11 = setter;
				setter11.Property = MenuItem.CommandProperty;
				CompiledBindingExtension compiledBindingExtension7 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.CommandProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value5 = compiledBindingExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter11.Value = value5;
				context.PopParent();
				style.Add(setter10);
				Setter setter12 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter13 = setter;
				setter13.Property = MenuItem.CommandParameterProperty;
				CompiledBindingExtension compiledBindingExtension8 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.CommandParameterProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value6 = compiledBindingExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter13.Value = value6;
				context.PopParent();
				style.Add(setter12);
				Setter setter14 = new Setter();
				setter14.Property = NativeMenuBar.EnableMenuItemClickForwardingProperty;
				setter14.Value = true;
				style.Add(setter14);
				Setter setter15 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter16 = setter;
				setter16.Property = MenuItem.IconProperty;
				CompiledBindingExtension compiledBindingExtension9;
				CompiledBindingExtension compiledBindingExtension10 = (compiledBindingExtension9 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.IconProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build()));
				context.PushParent(compiledBindingExtension9);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("AvaloniaThemesFluentNativeMenuBarIBitmapToImageConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				compiledBindingExtension9.Converter = (IValueConverter)obj;
				context.PopParent();
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value7 = compiledBindingExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter16.Value = value7;
				context.PopParent();
				style.Add(setter15);
				context.PopParent();
				styles.Add(item);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NativeMenuBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_166.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_167
	{
		private class XamlClosure_168
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Thumb);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarPanningThumbBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.TemplateProperty;
			setter4.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_168.Build, context)
			};
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			CornerRadiusTransition cornerRadiusTransition = new CornerRadiusTransition();
			cornerRadiusTransition.Property = TemplatedControl.CornerRadiusProperty;
			cornerRadiusTransition.Duration = TimeSpan.FromTicks(1000000L);
			transitions.Add(cornerRadiusTransition);
			TransformOperationsTransition transformOperationsTransition = new TransformOperationsTransition();
			transformOperationsTransition.Property = Visual.RenderTransformProperty;
			transformOperationsTransition.Duration = TimeSpan.FromTicks(1000000L);
			transitions.Add(transformOperationsTransition);
			setter5.Value = transitions;
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border));
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarThumbFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			style3.Add(setter6);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border));
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarThumbFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			style5.Add(setter8);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border));
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarThumbFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			style7.Add(setter10);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_169
	{
		private class XamlClosure_170
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.VerticalAlignmentProperty;
			setter2.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Visual.OpacityProperty;
			setter4.Value = 0.0;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.TemplateProperty;
			setter5.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_170.Build, context)
			};
			controlTheme.Add(setter5);
			return controlTheme;
		}
	}

	private class XamlClosure_171
	{
		private class XamlClosure_172
		{
			private class DynamicSetters_173
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ContentPresenter contentPresenter = (ContentPresenter)intermediateRoot;
				context.PushParent(contentPresenter);
				StyledProperty<IBrush?> backgroundProperty = ContentPresenter.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarButtonBackground");
				context.ProvideTargetProperty = ContentPresenter.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter.Bind(backgroundProperty, binding);
				StyledProperty<IBrush?> borderBrushProperty = ContentPresenter.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarButtonBorderBrush");
				context.ProvideTargetProperty = ContentPresenter.BorderBrushProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter.Bind(borderBrushProperty, binding2);
				DynamicSetters_173.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = Visual.OpacityProperty;
			setter.Value = 0.0;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarButtonArrowForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_172.Build, context);
			context.PopParent();
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			DoubleTransition doubleTransition = new DoubleTransition();
			doubleTransition.Property = Visual.OpacityProperty;
			doubleTransition.Duration = TimeSpan.FromTicks(1000000L);
			transitions.Add(doubleTransition);
			setter7.Value = transitions;
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Setter setter8 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter9 = setter2;
			setter9.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarButtonArrowForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			style3.Add(setter8);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter10 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter11 = setter2;
			setter11.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			style5.Add(setter10);
			Setter setter12 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter13 = setter2;
			setter13.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value5;
			context.PopParent();
			style5.Add(setter12);
			context.PopParent();
			style3.Add(style4);
			context.PopParent();
			controlTheme.Add(style2);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter14 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter15 = setter2;
			setter15.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ScrollBarButtonArrowForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value6;
			context.PopParent();
			style7.Add(setter14);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter16 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter17 = setter2;
			setter17.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			style9.Add(setter16);
			Setter setter18 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter19 = setter2;
			setter19.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ScrollBarButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style9.Add(setter18);
			context.PopParent();
			style7.Add(style8);
			context.PopParent();
			controlTheme.Add(style6);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter20 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter21 = setter2;
			setter21.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ScrollBarButtonArrowForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style11.Add(setter20);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter22 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter23 = setter2;
			setter23.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ScrollBarButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style13.Add(setter22);
			Setter setter24 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter25 = setter2;
			setter25.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ScrollBarButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value11;
			context.PopParent();
			style13.Add(setter24);
			context.PopParent();
			style11.Add(style12);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_174
	{
		private class XamlClosure_175
		{
			private class DynamicSetters_176
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Grid grid2 = grid;
				grid2.Name = "Root";
				service = grid2;
				context.AvaloniaNameScope.Register("Root", service);
				Controls children = grid2.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "VerticalRoot";
				service = border3;
				context.AvaloniaNameScope.Register("VerticalRoot", service);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				Grid grid3;
				Grid grid4 = (grid3 = new Grid());
				((ISupportInitialize)grid4).BeginInit();
				border3.Child = grid4;
				Grid grid5 = (grid = grid3);
				context.PushParent(grid);
				Grid grid6 = grid;
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 3;
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid6.RowDefinitions = rowDefinitions;
				Controls children2 = grid6.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children2.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				rectangle3.Name = "TrackRect";
				service = rectangle3;
				context.AvaloniaNameScope.Register("TrackRect", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarTrackFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(fillProperty, binding);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarTrackStroke");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(strokeProperty, binding2);
				StyledProperty<double> strokeThicknessProperty = Shape.StrokeThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarTrackBorderThemeThickness");
				context.ProvideTargetProperty = Shape.StrokeThicknessProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(strokeThicknessProperty, binding3);
				rectangle3.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				rectangle3.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				StyledProperty<Transitions?> transitionsProperty = Animatable.TransitionsProperty;
				Transitions transitions = new Transitions();
				DoubleTransition doubleTransition = new DoubleTransition();
				doubleTransition.Property = Visual.OpacityProperty;
				doubleTransition.Duration = TimeSpan.FromTicks(1000000L);
				transitions.Add(doubleTransition);
				rectangle3.SetValue(transitionsProperty, transitions, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children3 = grid6.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children3.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_LineUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_LineUpButton", service);
				repeatButton5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentScrollBarLineButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_176.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				repeatButton5.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(minWidthProperty, binding4);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(heightProperty, binding5);
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				repeatButton5.Content = pathIcon2;
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				PathIcon pathIcon5 = pathIcon3;
				pathIcon5.SetValue(PathIcon.DataProperty, Geometry.Parse("M 19.091797 14.970703 L 10 5.888672 L 0.908203 14.970703 L 0.029297 14.091797 L 10 4.111328 L 19.970703 14.091797 Z"), BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon5.Bind(widthProperty, binding6);
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon5.Bind(heightProperty2, binding7);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children4 = grid6.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children4.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				track3.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track3.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track3.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				track3.Bind(Track.ViewportSizeProperty, new TemplateBinding(ScrollBar.ViewportSizeProperty).ProvideValue());
				track3.Bind(Track.OrientationProperty, new TemplateBinding(ScrollBar.OrientationProperty).ProvideValue());
				track3.SetValue(Track.IsDirectionReversedProperty, value: true, BindingPriority.Template);
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_PageUpButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_PageUpButton", service);
				repeatButton9.Classes.Add("largeIncrease");
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentScrollBarPageButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_176.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				repeatButton9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton11, BindingPriority.Template);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_PageDownButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_PageDownButton", service);
				repeatButton13.Classes.Add("largeIncrease");
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentScrollBarPageButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_176.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				repeatButton13.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentScrollBarThumb");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_176.DynamicSetter_1(thumb3, BindingPriority.Template, obj4);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(widthProperty2, binding8);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(minHeightProperty, binding9);
				StyledProperty<ITransform?> renderTransformProperty = Visual.RenderTransformProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("VerticalSmallScrollThumbScaleTransform");
				context.ProvideTargetProperty = Visual.RenderTransformProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(renderTransformProperty, binding10);
				thumb3.SetValue(Visual.RenderTransformOriginProperty, new RelativePoint(1.0, 0.5, RelativeUnit.Relative), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				Controls children5 = grid6.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children5.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_LineDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_LineDownButton", service);
				repeatButton17.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("FluentScrollBarLineButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_176.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj5);
				repeatButton17.SetValue(Grid.RowProperty, 2, BindingPriority.Template);
				repeatButton17.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minWidthProperty2 = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton17.Bind(minWidthProperty2, binding11);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton17.Bind(heightProperty3, binding12);
				PathIcon pathIcon6;
				PathIcon pathIcon7 = (pathIcon6 = new PathIcon());
				((ISupportInitialize)pathIcon7).BeginInit();
				repeatButton17.Content = pathIcon7;
				PathIcon pathIcon8 = (pathIcon3 = pathIcon6);
				context.PushParent(pathIcon3);
				PathIcon pathIcon9 = pathIcon3;
				pathIcon9.SetValue(PathIcon.DataProperty, Geometry.Parse("M 18.935547 4.560547 L 19.814453 5.439453 L 10 15.253906 L 0.185547 5.439453 L 1.064453 4.560547 L 10 13.496094 Z"), BindingPriority.Template);
				StyledProperty<double> widthProperty3 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon9.Bind(widthProperty3, binding13);
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding14 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon9.Bind(heightProperty4, binding14);
				context.PopParent();
				((ISupportInitialize)pathIcon8).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)grid5).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_177
		{
			private class DynamicSetters_178
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Grid grid2 = grid;
				grid2.Name = "Root";
				service = grid2;
				context.AvaloniaNameScope.Register("Root", service);
				Controls children = grid2.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "HorizontalRoot";
				service = border3;
				context.AvaloniaNameScope.Register("HorizontalRoot", service);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				Grid grid3;
				Grid grid4 = (grid3 = new Grid());
				((ISupportInitialize)grid4).BeginInit();
				border3.Child = grid4;
				Grid grid5 = (grid = grid3);
				context.PushParent(grid);
				Grid grid6 = grid;
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid6.ColumnDefinitions = columnDefinitions;
				Controls children2 = grid6.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children2.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				rectangle3.Name = "TrackRect";
				service = rectangle3;
				context.AvaloniaNameScope.Register("TrackRect", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarTrackFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(fillProperty, binding);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarTrackStroke");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(strokeProperty, binding2);
				StyledProperty<double> strokeThicknessProperty = Shape.StrokeThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarTrackBorderThemeThickness");
				context.ProvideTargetProperty = Shape.StrokeThicknessProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(strokeThicknessProperty, binding3);
				rectangle3.SetValue(Visual.OpacityProperty, 0.0, BindingPriority.Template);
				rectangle3.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				StyledProperty<Transitions?> transitionsProperty = Animatable.TransitionsProperty;
				Transitions transitions = new Transitions();
				DoubleTransition doubleTransition = new DoubleTransition();
				doubleTransition.Property = Visual.OpacityProperty;
				doubleTransition.Duration = TimeSpan.FromTicks(1000000L);
				transitions.Add(doubleTransition);
				rectangle3.SetValue(transitionsProperty, transitions, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children3 = grid6.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children3.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_LineUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_LineUpButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentScrollBarLineButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_178.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				repeatButton5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(minHeightProperty, binding4);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(widthProperty, binding5);
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				repeatButton5.Content = pathIcon2;
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				PathIcon pathIcon5 = pathIcon3;
				pathIcon5.SetValue(PathIcon.DataProperty, Geometry.Parse("M 14.091797 19.970703 L 4.111328 10 L 14.091797 0.029297 L 14.970703 0.908203 L 5.888672 10 L 14.970703 19.091797 Z"), BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon5.Bind(widthProperty2, binding6);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon5.Bind(heightProperty, binding7);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children4 = grid6.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children4.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				track3.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track3.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track3.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				track3.Bind(Track.ViewportSizeProperty, new TemplateBinding(ScrollBar.ViewportSizeProperty).ProvideValue());
				track3.Bind(Track.OrientationProperty, new TemplateBinding(ScrollBar.OrientationProperty).ProvideValue());
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_PageUpButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_PageUpButton", service);
				repeatButton9.Classes.Add("largeIncrease");
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentScrollBarPageButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_178.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				repeatButton9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton11, BindingPriority.Template);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_PageDownButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_PageDownButton", service);
				repeatButton13.Classes.Add("largeIncrease");
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentScrollBarPageButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_178.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				repeatButton13.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentScrollBarThumb");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_178.DynamicSetter_1(thumb3, BindingPriority.Template, obj4);
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(heightProperty2, binding8);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(minWidthProperty, binding9);
				StyledProperty<ITransform?> renderTransformProperty = Visual.RenderTransformProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("HorizontalSmallScrollThumbScaleTransform");
				context.ProvideTargetProperty = Visual.RenderTransformProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(renderTransformProperty, binding10);
				thumb3.SetValue(Visual.RenderTransformOriginProperty, new RelativePoint(0.5, 1.0, RelativeUnit.Relative), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				Controls children5 = grid6.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children5.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_LineDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_LineDownButton", service);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("FluentScrollBarLineButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_178.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj5);
				repeatButton17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton17.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				repeatButton17.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<double> minHeightProperty2 = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton17.Bind(minHeightProperty2, binding11);
				StyledProperty<double> widthProperty3 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ScrollBarSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton17.Bind(widthProperty3, binding12);
				PathIcon pathIcon6;
				PathIcon pathIcon7 = (pathIcon6 = new PathIcon());
				((ISupportInitialize)pathIcon7).BeginInit();
				repeatButton17.Content = pathIcon7;
				PathIcon pathIcon8 = (pathIcon3 = pathIcon6);
				context.PushParent(pathIcon3);
				PathIcon pathIcon9 = pathIcon3;
				pathIcon9.SetValue(PathIcon.DataProperty, Geometry.Parse("M 5.029297 19.091797 L 14.111328 10 L 5.029297 0.908203 L 5.908203 0.029297 L 15.888672 10 L 5.908203 19.970703 Z"), BindingPriority.Template);
				StyledProperty<double> widthProperty4 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon9.Bind(widthProperty4, binding13);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ScrollBarButtonArrowIconFontSize");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding14 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon9.Bind(heightProperty3, binding14);
				context.PopParent();
				((ISupportInitialize)pathIcon8).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)grid5).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ScrollBarForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ScrollBarBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_175.Build, context);
			context.PopParent();
			setter13.Value = value6;
			context.PopParent();
			style3.Add(setter12);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_177.Build, context);
			context.PopParent();
			setter15.Value = value7;
			context.PopParent();
			style5.Add(setter14);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)ScrollBar.IsExpandedProperty, (object?)true);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Grid))
				.Name("Root");
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value8;
			context.PopParent();
			style9.Add(setter16);
			context.PopParent();
			style7.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("TrackRect");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ScrollBarTrackFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value9;
			context.PopParent();
			style11.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ScrollBarTrackStrokePointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value10;
			context.PopParent();
			style11.Add(setter20);
			Setter setter22 = new Setter();
			setter22.Property = Visual.OpacityProperty;
			setter22.Value = 1.0;
			style11.Add(setter22);
			context.PopParent();
			style7.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb));
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ScrollBarThumbBackgroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value11;
			context.PopParent();
			style13.Add(setter23);
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = Visual.RenderTransformProperty;
			setter26.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			style13.Add(setter25);
			context.PopParent();
			style7.Add(style12);
			Style style14 = new Style();
			style14.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton));
			Setter setter27 = new Setter();
			setter27.Property = Visual.OpacityProperty;
			setter27.Value = 1.0;
			style14.Add(setter27);
			style7.Add(style14);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_179
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Left = true;
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_180
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Right = true;
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_181
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_182
	{
		private class XamlClosure_183
		{
			private class DynamicSetters_184
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DynamicSetters_184.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_183.Build, context)
			};
			controlTheme.Add(setter);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			style3.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style3.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SplitButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SplitButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style5.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SplitButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style5.Add(setter11);
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SplitButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("SplitButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value7;
			context.PopParent();
			style7.Add(setter15);
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SplitButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			style7.Add(setter17);
			Setter setter19 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter20 = setter2;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SplitButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value9;
			context.PopParent();
			style7.Add(setter19);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"flyout-open").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter21 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter22 = setter2;
			setter22.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SplitButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value10;
			context.PopParent();
			style9.Add(setter21);
			Setter setter23 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter24 = setter2;
			setter24.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SplitButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value11;
			context.PopParent();
			style9.Add(setter23);
			Setter setter25 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter26 = setter2;
			setter26.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("SplitButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value12;
			context.PopParent();
			style9.Add(setter25);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"checked");
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter27 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter28 = setter2;
			setter28.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("SplitButtonBackgroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value13;
			context.PopParent();
			style13.Add(setter27);
			Setter setter29 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter30 = setter2;
			setter30.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("SplitButtonBorderBrushChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value14;
			context.PopParent();
			style13.Add(setter29);
			Setter setter31 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter32 = setter2;
			setter32.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("SplitButtonForegroundChecked");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value15;
			context.PopParent();
			style13.Add(setter31);
			context.PopParent();
			style11.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter33 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter34 = setter2;
			setter34.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("SplitButtonBackgroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value16;
			context.PopParent();
			style15.Add(setter33);
			Setter setter35 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter36 = setter2;
			setter36.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("SplitButtonBorderBrushCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value17;
			context.PopParent();
			style15.Add(setter35);
			Setter setter37 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter38 = setter2;
			setter38.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("SplitButtonForegroundCheckedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value18;
			context.PopParent();
			style15.Add(setter37);
			context.PopParent();
			style11.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter39 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter40 = setter2;
			setter40.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("SplitButtonBackgroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value19;
			context.PopParent();
			style17.Add(setter39);
			Setter setter41 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter42 = setter2;
			setter42.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("SplitButtonBorderBrushCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value20;
			context.PopParent();
			style17.Add(setter41);
			Setter setter43 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter44 = setter2;
			setter44.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("SplitButtonForegroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter44.Value = value21;
			context.PopParent();
			style17.Add(setter43);
			context.PopParent();
			style11.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter45 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter46 = setter2;
			setter46.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("SplitButtonBackgroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter46.Value = value22;
			context.PopParent();
			style19.Add(setter45);
			Setter setter47 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter48 = setter2;
			setter48.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("SplitButtonBorderBrushCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter48.Value = value23;
			context.PopParent();
			style19.Add(setter47);
			Setter setter49 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter50 = setter2;
			setter50.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("SplitButtonForegroundCheckedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter50.Value = value24;
			context.PopParent();
			style19.Add(setter49);
			context.PopParent();
			style11.Add(style18);
			context.PopParent();
			controlTheme.Add(style10);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"checked-flyout-open").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter51 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter52 = setter2;
			setter52.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("SplitButtonBackgroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value25;
			context.PopParent();
			style21.Add(setter51);
			Setter setter53 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter54 = setter2;
			setter54.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("SplitButtonBorderBrushCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter54.Value = value26;
			context.PopParent();
			style21.Add(setter53);
			Setter setter55 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter56 = setter2;
			setter56.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("SplitButtonForegroundCheckedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter56.Value = value27;
			context.PopParent();
			style21.Add(setter55);
			context.PopParent();
			controlTheme.Add(style20);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_185
	{
		private class XamlClosure_186
		{
			private class DynamicSetters_187
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_3(Button P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(Button.CommandParameterProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(Button.CommandParameterProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Controls children = grid.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_PrimaryButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_PrimaryButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentSplitButtonComponent");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_187.DynamicSetter_1(button5, BindingPriority.Template, obj);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitButtonPrimaryButtonSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(minWidthProperty, binding);
				button5.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button5.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding3 = templateBinding;
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("PrimaryButtonBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding3.Converter = (IValueConverter)obj2;
				context.PopParent();
				button5.Bind(borderThicknessProperty, templateBinding2.ProvideValue());
				button5.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				DynamicSetters_187.DynamicSetter_2(button5, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				button5.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				button5.Bind(Button.CommandProperty, new TemplateBinding(SplitButton.CommandProperty).ProvideValue());
				DynamicSetters_187.DynamicSetter_3(button5, BindingPriority.Template, new TemplateBinding(SplitButton.CommandParameterProperty).ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty = TemplatedControl.CornerRadiusProperty;
				TemplateBinding templateBinding4 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding5 = templateBinding;
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("LeftCornerRadiusFilterConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding5.Converter = (IValueConverter)obj3;
				context.PopParent();
				button5.Bind(cornerRadiusProperty, templateBinding4.ProvideValue());
				button5.Bind(TemplatedControl.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				button5.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				button5.Bind(TemplatedControl.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button5.Bind(ContentControl.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				button5.Bind(ContentControl.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				button5.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				button5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				button5.SetValue(KeyboardNavigation.IsTabStopProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children2 = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children2.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "SeparatorBorder";
				service = border3;
				context.AvaloniaNameScope.Register("SeparatorBorder", service);
				border3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				border3.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitButtonSeparatorWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(widthProperty, binding2);
				StyledProperty<Thickness> borderThicknessProperty2 = Border.BorderThicknessProperty;
				TemplateBinding templateBinding6 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding7 = templateBinding;
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SeparatorBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding7.Converter = (IValueConverter)obj4;
				context.PopParent();
				border3.Bind(borderThicknessProperty2, templateBinding6.ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children3 = grid.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children3.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_SecondaryButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_SecondaryButton", service);
				button9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("FluentSplitButtonComponent");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_187.DynamicSetter_1(button9, BindingPriority.Template, obj5);
				StyledProperty<double> minWidthProperty2 = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SplitButtonSecondaryButtonSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(minWidthProperty2, binding3);
				button9.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button9.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button9.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty3 = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding8 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding9 = templateBinding;
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SecondaryButtonBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj6 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding9.Converter = (IValueConverter)obj6;
				context.PopParent();
				button9.Bind(borderThicknessProperty3, templateBinding8.ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty2 = TemplatedControl.CornerRadiusProperty;
				TemplateBinding templateBinding10 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding11 = templateBinding;
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("RightCornerRadiusFilterConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj7 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding11.Converter = (IValueConverter)obj7;
				context.PopParent();
				button9.Bind(cornerRadiusProperty2, templateBinding10.ProvideValue());
				button9.SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				button9.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				button9.SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				button9.SetValue(KeyboardNavigation.IsTabStopProperty, value: false, BindingPriority.Template);
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				button9.Content = pathIcon2;
				pathIcon.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(PathIcon.DataProperty, Geometry.Parse("M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"), BindingPriority.Template);
				((ISupportInitialize)pathIcon).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SplitButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SplitButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SplitButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SplitButtonMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.HorizontalAlignmentProperty;
			setter12.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.VerticalAlignmentProperty;
			setter13.Value = VerticalAlignment.Center;
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter14.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = ContentControl.VerticalContentAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = KeyboardNavigation.IsTabStopProperty;
			setter16.Value = true;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = InputElement.FocusableProperty;
			setter17.Value = true;
			controlTheme.Add(setter17);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value6;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			controlTheme.Add(setter20);
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value8 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_186.Build, context);
			context.PopParent();
			setter23.Value = value8;
			context.PopParent();
			controlTheme.Add(setter22);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":flyout-open").Template()
				.OfType(typeof(Button));
			Setter setter24 = new Setter();
			setter24.Property = Control.TagProperty;
			setter24.Value = "flyout-open";
			style.Add(setter24);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Button));
			Setter setter25 = new Setter();
			setter25.Property = Control.TagProperty;
			setter25.Value = "checked";
			style2.Add(setter25);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":checked").Class(":flyout-open")
				.Template()
				.OfType(typeof(Button));
			Setter setter26 = new Setter();
			setter26.Property = Control.TagProperty;
			setter26.Value = "checked-flyout-open";
			style3.Add(setter26);
			controlTheme.Add(style3);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_188
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return Easing.Parse("0.1,0.9,0.2,1.0");
		}
	}

	private class XamlClosure_189
	{
		private class XamlClosure_190
		{
			private class DynamicSetters_191
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "Container";
				service = grid;
				context.AvaloniaNameScope.Register("Container", service);
				grid.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition;
				ColumnDefinition item = (columnDefinition = new ColumnDefinition());
				context.PushParent(columnDefinition);
				StyledProperty<GridLength> widthProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(SplitViewTemplateSettings.PaneColumnGridLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				columnDefinition.Bind(widthProperty, binding);
				context.PopParent();
				columnDefinitions.Add(item);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				Controls children = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "PART_PaneRoot";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_PaneRoot", service);
				panel3.Bind(Panel.BackgroundProperty, new TemplateBinding(SplitView.PaneBackgroundProperty).ProvideValue());
				panel3.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				panel3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				panel3.SetValue(Visual.ZIndexProperty, 100, BindingPriority.Template);
				Controls children2 = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_PanePresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_PanePresenter", service);
				DynamicSetters_191.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(SplitView.PaneProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(SplitView.PaneTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children3 = panel3.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				rectangle3.Name = "HCPaneBorder";
				service = rectangle3;
				context.AvaloniaNameScope.Register("HCPaneBorder", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundTransparentBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(fillProperty, binding2);
				rectangle3.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children4 = grid.Children;
				Panel panel5;
				Panel panel6 = (panel5 = new Panel());
				((ISupportInitialize)panel6).BeginInit();
				children4.Add(panel6);
				panel5.Name = "ContentRoot";
				service = panel5;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				Controls children5 = panel5.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children5.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_191.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				Controls children6 = panel5.Children;
				Rectangle rectangle5;
				Rectangle rectangle6 = (rectangle5 = new Rectangle());
				((ISupportInitialize)rectangle6).BeginInit();
				children6.Add(rectangle6);
				rectangle5.Name = "LightDismissLayer";
				service = rectangle5;
				context.AvaloniaNameScope.Register("LightDismissLayer", service);
				rectangle5.SetValue(Shape.FillProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				rectangle5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)rectangle5).EndInit();
				((ISupportInitialize)panel5).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_192
		{
			private class DynamicSetters_193
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "Container";
				service = grid;
				context.AvaloniaNameScope.Register("Container", service);
				grid.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2;
				ColumnDefinition item = (columnDefinition2 = new ColumnDefinition());
				context.PushParent(columnDefinition2);
				StyledProperty<GridLength> widthProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(SplitViewTemplateSettings.PaneColumnGridLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				columnDefinition2.Bind(widthProperty, binding);
				context.PopParent();
				columnDefinitions2.Add(item);
				Controls children = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "PART_PaneRoot";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_PaneRoot", service);
				panel3.Bind(Panel.BackgroundProperty, new TemplateBinding(SplitView.PaneBackgroundProperty).ProvideValue());
				panel3.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				panel3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				panel3.SetValue(Visual.ZIndexProperty, 100, BindingPriority.Template);
				Controls children2 = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_PanePresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_PanePresenter", service);
				DynamicSetters_193.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(SplitView.PaneProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(SplitView.PaneTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children3 = panel3.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				rectangle3.Name = "HCPaneBorder";
				service = rectangle3;
				context.AvaloniaNameScope.Register("HCPaneBorder", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlForegroundTransparentBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(fillProperty, binding2);
				rectangle3.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children4 = grid.Children;
				Panel panel5;
				Panel panel6 = (panel5 = new Panel());
				((ISupportInitialize)panel6).BeginInit();
				children4.Add(panel6);
				panel5.Name = "ContentRoot";
				service = panel5;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				Controls children5 = panel5.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children5.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_193.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				Controls children6 = panel5.Children;
				Rectangle rectangle5;
				Rectangle rectangle6 = (rectangle5 = new Rectangle());
				((ISupportInitialize)rectangle6).BeginInit();
				children6.Add(rectangle6);
				rectangle5.Name = "LightDismissLayer";
				service = rectangle5;
				context.AvaloniaNameScope.Register("LightDismissLayer", service);
				((ISupportInitialize)rectangle5).EndInit();
				((ISupportInitialize)panel5).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SplitView);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = SplitView.OpenPaneLengthProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitViewOpenPaneThemeLength");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = SplitView.CompactPaneLengthProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitViewCompactPaneThemeLength");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = SplitView.PaneBackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlPageBackgroundChromeLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":left");
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_190.Build, context);
			context.PopParent();
			setter9.Value = value4;
			context.PopParent();
			style3.Add(setter8);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":overlay");
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value5 = obj.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			style7.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Grid.ColumnSpanProperty;
			setter12.Value = 1;
			style7.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Grid.ColumnProperty;
			setter13.Value = 0;
			style7.Add(setter13);
			context.PopParent();
			style5.Add(style6);
			Style style8 = new Style();
			style8.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter14 = new Setter();
			setter14.Property = Grid.ColumnProperty;
			setter14.Value = 1;
			style8.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Grid.ColumnSpanProperty;
			setter15.Value = 2;
			style8.Add(setter15);
			style5.Add(style8);
			context.PopParent();
			style3.Add(style4);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":compactinline");
			Style style11 = (style = new Style());
			context.PushParent(style);
			Style style12 = style;
			style12.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter16 = new Setter();
			setter16.Property = Grid.ColumnSpanProperty;
			setter16.Value = 1;
			style12.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = Grid.ColumnProperty;
			setter17.Value = 0;
			style12.Add(setter17);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj2 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value6 = obj2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value6;
			context.PopParent();
			style12.Add(setter18);
			context.PopParent();
			style10.Add(style11);
			Style style13 = new Style();
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter20 = new Setter();
			setter20.Property = Grid.ColumnProperty;
			setter20.Value = 1;
			style13.Add(setter20);
			Setter setter21 = new Setter();
			setter21.Property = Grid.ColumnSpanProperty;
			setter21.Value = 1;
			style13.Add(setter21);
			style10.Add(style13);
			context.PopParent();
			style3.Add(style9);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":compactoverlay");
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter22 = new Setter();
			setter22.Property = Grid.ColumnSpanProperty;
			setter22.Value = 1;
			style17.Add(setter22);
			Setter setter23 = new Setter();
			setter23.Property = Grid.ColumnProperty;
			setter23.Value = 0;
			style17.Add(setter23);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj3 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value7 = obj3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value7;
			context.PopParent();
			style17.Add(setter24);
			context.PopParent();
			style15.Add(style16);
			Style style18 = new Style();
			style18.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter26 = new Setter();
			setter26.Property = Grid.ColumnProperty;
			setter26.Value = 1;
			style18.Add(setter26);
			Setter setter27 = new Setter();
			setter27.Property = Grid.ColumnSpanProperty;
			setter27.Value = 1;
			style18.Add(setter27);
			style15.Add(style18);
			context.PopParent();
			style3.Add(style14);
			Style style19 = (style = new Style());
			context.PushParent(style);
			Style style20 = style;
			style20.Selector = ((Selector?)null).Nesting().Class(":inline");
			Style style21 = (style = new Style());
			context.PushParent(style);
			Style style22 = style;
			style22.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter28 = new Setter();
			setter28.Property = Grid.ColumnSpanProperty;
			setter28.Value = 1;
			style22.Add(setter28);
			Setter setter29 = new Setter();
			setter29.Property = Grid.ColumnProperty;
			setter29.Value = 0;
			style22.Add(setter29);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj4 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value8 = obj4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value8;
			context.PopParent();
			style22.Add(setter30);
			context.PopParent();
			style20.Add(style21);
			Style style23 = new Style();
			style23.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter32 = new Setter();
			setter32.Property = Grid.ColumnProperty;
			setter32.Value = 1;
			style23.Add(setter32);
			Setter setter33 = new Setter();
			setter33.Property = Grid.ColumnSpanProperty;
			setter33.Value = 1;
			style23.Add(setter33);
			style20.Add(style23);
			context.PopParent();
			style3.Add(style19);
			context.PopParent();
			controlTheme.Add(style2);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":right");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_192.Build, context);
			context.PopParent();
			setter35.Value = value9;
			context.PopParent();
			style25.Add(setter34);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":overlay");
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj5 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value10 = obj5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value10;
			context.PopParent();
			style29.Add(setter36);
			Setter setter38 = new Setter();
			setter38.Property = Grid.ColumnSpanProperty;
			setter38.Value = 2;
			style29.Add(setter38);
			Setter setter39 = new Setter();
			setter39.Property = Grid.ColumnProperty;
			setter39.Value = 1;
			style29.Add(setter39);
			context.PopParent();
			style27.Add(style28);
			Style style30 = new Style();
			style30.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter40 = new Setter();
			setter40.Property = Grid.ColumnProperty;
			setter40.Value = 0;
			style30.Add(setter40);
			Setter setter41 = new Setter();
			setter41.Property = Grid.ColumnSpanProperty;
			setter41.Value = 2;
			style30.Add(setter41);
			style27.Add(style30);
			context.PopParent();
			style25.Add(style26);
			Style style31 = (style = new Style());
			context.PushParent(style);
			Style style32 = style;
			style32.Selector = ((Selector?)null).Nesting().Class(":compactinline");
			Style style33 = (style = new Style());
			context.PushParent(style);
			Style style34 = style;
			style34.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter42 = new Setter();
			setter42.Property = Grid.ColumnSpanProperty;
			setter42.Value = 1;
			style34.Add(setter42);
			Setter setter43 = new Setter();
			setter43.Property = Grid.ColumnProperty;
			setter43.Value = 1;
			style34.Add(setter43);
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj6 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value11 = obj6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value11;
			context.PopParent();
			style34.Add(setter44);
			context.PopParent();
			style32.Add(style33);
			Style style35 = new Style();
			style35.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter46 = new Setter();
			setter46.Property = Grid.ColumnProperty;
			setter46.Value = 0;
			style35.Add(setter46);
			Setter setter47 = new Setter();
			setter47.Property = Grid.ColumnSpanProperty;
			setter47.Value = 1;
			style35.Add(setter47);
			style32.Add(style35);
			context.PopParent();
			style25.Add(style31);
			Style style36 = (style = new Style());
			context.PushParent(style);
			Style style37 = style;
			style37.Selector = ((Selector?)null).Nesting().Class(":compactoverlay");
			Style style38 = (style = new Style());
			context.PushParent(style);
			Style style39 = style;
			style39.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter48 = new Setter();
			setter48.Property = Grid.ColumnSpanProperty;
			setter48.Value = 2;
			style39.Add(setter48);
			Setter setter49 = new Setter();
			setter49.Property = Grid.ColumnProperty;
			setter49.Value = 1;
			style39.Add(setter49);
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj7 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value12 = obj7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value12;
			context.PopParent();
			style39.Add(setter50);
			context.PopParent();
			style37.Add(style38);
			Style style40 = new Style();
			style40.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter52 = new Setter();
			setter52.Property = Grid.ColumnProperty;
			setter52.Value = 0;
			style40.Add(setter52);
			Setter setter53 = new Setter();
			setter53.Property = Grid.ColumnSpanProperty;
			setter53.Value = 1;
			style40.Add(setter53);
			style37.Add(style40);
			context.PopParent();
			style25.Add(style36);
			Style style41 = (style = new Style());
			context.PushParent(style);
			Style style42 = style;
			style42.Selector = ((Selector?)null).Nesting().Class(":inline");
			Style style43 = (style = new Style());
			context.PushParent(style);
			Style style44 = style;
			style44.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter54 = new Setter();
			setter54.Property = Grid.ColumnSpanProperty;
			setter54.Value = 1;
			style44.Add(setter54);
			Setter setter55 = new Setter();
			setter55.Property = Grid.ColumnProperty;
			setter55.Value = 1;
			style44.Add(setter55);
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj8 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value13 = obj8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value13;
			context.PopParent();
			style44.Add(setter56);
			context.PopParent();
			style42.Add(style43);
			Style style45 = new Style();
			style45.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter58 = new Setter();
			setter58.Property = Grid.ColumnProperty;
			setter58.Value = 0;
			style45.Add(setter58);
			Setter setter59 = new Setter();
			setter59.Property = Grid.ColumnSpanProperty;
			setter59.Value = 1;
			style45.Add(setter59);
			style42.Add(style45);
			context.PopParent();
			style25.Add(style41);
			context.PopParent();
			controlTheme.Add(style24);
			Style style46 = (style = new Style());
			context.PushParent(style);
			Style style47 = style;
			style47.Selector = ((Selector?)null).Nesting().Class(":open");
			Style style48 = (style = new Style());
			context.PushParent(style);
			Style style49 = style;
			style49.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter60 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter61 = setter;
			setter61.Property = Animatable.TransitionsProperty;
			Transitions transitions;
			Transitions value14 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions2 = transitions;
			DoubleTransition doubleTransition;
			DoubleTransition item = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition2 = doubleTransition;
			doubleTransition2.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SplitViewPaneAnimationOpenDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj9 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition2.Duration = (TimeSpan)obj9;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj10 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition2.Easing = (Easing)obj10;
			context.PopParent();
			transitions2.Add(item);
			context.PopParent();
			setter61.Value = value14;
			context.PopParent();
			style49.Add(setter60);
			Setter setter62 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter63 = setter;
			setter63.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj11 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.OpenPaneLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value15 = obj11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter63.Value = value15;
			context.PopParent();
			style49.Add(setter62);
			context.PopParent();
			style47.Add(style48);
			Style style50 = (style = new Style());
			context.PushParent(style);
			Style style51 = style;
			style51.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter64 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter65 = setter;
			setter65.Property = Animatable.TransitionsProperty;
			Transitions value16 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions3 = transitions;
			DoubleTransition item2 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition3 = doubleTransition;
			doubleTransition3.Property = Visual.OpacityProperty;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SplitViewPaneAnimationOpenDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj12 = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition3.Duration = (TimeSpan)obj12;
			StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj13 = staticResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition3.Easing = (Easing)obj13;
			context.PopParent();
			transitions3.Add(item2);
			context.PopParent();
			setter65.Value = value16;
			context.PopParent();
			style51.Add(setter64);
			Setter setter66 = new Setter();
			setter66.Property = Visual.OpacityProperty;
			setter66.Value = 1.0;
			style51.Add(setter66);
			context.PopParent();
			style47.Add(style50);
			context.PopParent();
			controlTheme.Add(style46);
			Style style52 = (style = new Style());
			context.PushParent(style);
			Style style53 = style;
			style53.Selector = ((Selector?)null).Nesting().Class(":closed");
			Style style54 = (style = new Style());
			context.PushParent(style);
			Style style55 = style;
			style55.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter67 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter68 = setter;
			setter68.Property = Animatable.TransitionsProperty;
			Transitions value17 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions4 = transitions;
			DoubleTransition item3 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition4 = doubleTransition;
			doubleTransition4.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("SplitViewPaneAnimationCloseDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj14 = staticResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition4.Duration = (TimeSpan)obj14;
			StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj15 = staticResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition4.Easing = (Easing)obj15;
			context.PopParent();
			transitions4.Add(item3);
			context.PopParent();
			setter68.Value = value17;
			context.PopParent();
			style55.Add(setter67);
			Setter setter69 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter70 = setter;
			setter70.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj16 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value18 = obj16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter70.Value = value18;
			context.PopParent();
			style55.Add(setter69);
			context.PopParent();
			style53.Add(style54);
			Style style56 = (style = new Style());
			context.PushParent(style);
			Style style57 = style;
			style57.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter71 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter72 = setter;
			setter72.Property = Animatable.TransitionsProperty;
			Transitions value19 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions5 = transitions;
			DoubleTransition item4 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition5 = doubleTransition;
			doubleTransition5.Property = Visual.OpacityProperty;
			StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("SplitViewPaneAnimationCloseDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj17 = staticResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition5.Duration = (TimeSpan)obj17;
			StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj18 = staticResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition5.Easing = (Easing)obj18;
			context.PopParent();
			transitions5.Add(item4);
			context.PopParent();
			setter72.Value = value19;
			context.PopParent();
			style57.Add(setter71);
			Setter setter73 = new Setter();
			setter73.Property = Visual.OpacityProperty;
			setter73.Value = 0.0;
			style57.Add(setter73);
			context.PopParent();
			style53.Add(style56);
			context.PopParent();
			controlTheme.Add(style52);
			Style style58 = (style = new Style());
			context.PushParent(style);
			Style style59 = style;
			style59.Selector = ((Selector?)null).Nesting().Class(":lightdismiss").Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter74 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter75 = setter;
			setter75.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SplitViewLightDismissOverlayBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter75.Value = value20;
			context.PopParent();
			style59.Add(setter74);
			context.PopParent();
			controlTheme.Add(style58);
			Style style60 = new Style();
			style60.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":open")
				.Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter76 = new Setter();
			setter76.Property = Visual.IsVisibleProperty;
			setter76.Value = true;
			style60.Add(setter76);
			controlTheme.Add(style60);
			Style style61 = new Style();
			style61.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":open")
				.Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter77 = new Setter();
			setter77.Property = Visual.IsVisibleProperty;
			setter77.Value = true;
			style61.Add(setter77);
			controlTheme.Add(style61);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_194
	{
		private class XamlClosure_195
		{
			private class DynamicSetters_196
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				((Decorator)intermediateRoot).Child = dockPanel2;
				Controls children = dockPanel.Children;
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				children.Add(itemsPresenter2);
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(DockPanel.DockProperty, new TemplateBinding(TabControl.TabStripPlacementProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				Controls children2 = dockPanel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_SelectedContentHost";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_SelectedContentHost", service);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(TabControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(TabControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_196.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(TabControl.SelectedContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(TabControl.SelectedContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)dockPanel).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TabControl);
			Setter setter = new Setter();
			setter.Property = Layoutable.MarginProperty;
			setter.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TabItemMargin");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TabControlBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_195.Build, context)
			};
			controlTheme.Add(setter7);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Left).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter")
				.Child()
				.OfType(typeof(WrapPanel));
			Setter setter8 = new Setter();
			setter8.Property = WrapPanel.OrientationProperty;
			setter8.Value = Orientation.Vertical;
			style.Add(setter8);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Right).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter")
				.Child()
				.OfType(typeof(WrapPanel));
			Setter setter9 = new Setter();
			setter9.Property = WrapPanel.OrientationProperty;
			setter9.Value = Orientation.Vertical;
			style2.Add(setter9);
			controlTheme.Add(style2);
			Style style3;
			Style style4 = (style3 = new Style());
			context.PushParent(style3);
			style3.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Top).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter");
			Setter setter10 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter11 = setter2;
			setter11.Property = Layoutable.MarginProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TabControlTopPlacementItemMargin");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			style3.Add(setter10);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_197
	{
		private class XamlClosure_198
		{
			private class DynamicSetters_199
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "PART_LayoutRoot";
				service = border2;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border2.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border2.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_199.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedContentControl.HeaderTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = panel3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.Name = "PART_SelectedPipe";
				service = border6;
				context.AvaloniaNameScope.Register("PART_SelectedPipe", service);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TabItemHeaderSelectedPipeFill");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(cornerRadiusProperty, binding2);
				border6.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TabItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TabItemHeaderFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.FontWeightProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TabItemHeaderThemeFontWeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TabItemHeaderForegroundUnselected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TabItemHeaderMargin");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.MarginProperty;
			setter12.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TabItemMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = new Setter();
			setter15.Property = ContentControl.VerticalContentAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_198.Build, context);
			context.PopParent();
			setter17.Value = value7;
			context.PopParent();
			controlTheme.Add(setter16);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TabItemHeaderBackgroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style3.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TabItemHeaderForegroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style3.Add(setter20);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_SelectedPipe");
			Setter setter22 = new Setter();
			setter22.Property = Visual.IsVisibleProperty;
			setter22.Value = true;
			style4.Add(setter22);
			controlTheme.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value10;
			context.PopParent();
			style6.Add(setter23);
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TabItemHeaderForegroundUnselectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value11;
			context.PopParent();
			style6.Add(setter25);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pointerover")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TabItemHeaderBackgroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value12;
			context.PopParent();
			style8.Add(setter27);
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("TabItemHeaderForegroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value13;
			context.PopParent();
			style8.Add(setter29);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value14;
			context.PopParent();
			style10.Add(setter31);
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TabItemHeaderForegroundUnselectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value15;
			context.PopParent();
			style10.Add(setter33);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style = new Style());
			context.PushParent(style);
			Style style12 = style;
			style12.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pressed")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("TabItemHeaderBackgroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value16;
			context.PopParent();
			style12.Add(setter35);
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("TabItemHeaderForegroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value17;
			context.PopParent();
			style12.Add(setter37);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = (style = new Style());
			context.PushParent(style);
			Style style14 = style;
			style14.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("TabItemHeaderBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value18;
			context.PopParent();
			style14.Add(setter39);
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("TabItemHeaderForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value19;
			context.PopParent();
			style14.Add(setter41);
			context.PopParent();
			controlTheme.Add(style13);
			Style style15 = (style = new Style());
			context.PushParent(style);
			Style style16 = style;
			style16.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Left).Template()
				.OfType(typeof(Border))
				.Name("PART_SelectedPipe");
			Setter setter43 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter44 = setter;
			setter44.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("TabItemPipeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter44.Value = value20;
			context.PopParent();
			style16.Add(setter43);
			Setter setter45 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter46 = setter;
			setter46.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("TabItemVerticalPipeHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter46.Value = value21;
			context.PopParent();
			style16.Add(setter45);
			Setter setter47 = new Setter();
			setter47.Property = Layoutable.MarginProperty;
			setter47.Value = new Thickness(0.0, 0.0, 2.0, 0.0);
			style16.Add(setter47);
			Setter setter48 = new Setter();
			setter48.Property = Layoutable.HorizontalAlignmentProperty;
			setter48.Value = HorizontalAlignment.Left;
			style16.Add(setter48);
			Setter setter49 = new Setter();
			setter49.Property = Layoutable.VerticalAlignmentProperty;
			setter49.Value = VerticalAlignment.Center;
			style16.Add(setter49);
			context.PopParent();
			controlTheme.Add(style15);
			Style style17 = new Style();
			style17.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Left).Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter50 = new Setter();
			setter50.Property = Layoutable.MarginProperty;
			setter50.Value = new Thickness(8.0, 0.0, 0.0, 0.0);
			style17.Add(setter50);
			controlTheme.Add(style17);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Top).Template()
					.OfType(typeof(Border))
					.Name("PART_SelectedPipe"),
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Bottom).Template()
					.OfType(typeof(Border))
					.Name("PART_SelectedPipe")
			});
			Setter setter51 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter52 = setter;
			setter52.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("TabItemPipeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value22;
			context.PopParent();
			style19.Add(setter51);
			Setter setter53 = new Setter();
			setter53.Property = Layoutable.MarginProperty;
			setter53.Value = new Thickness(0.0, 0.0, 0.0, 2.0);
			style19.Add(setter53);
			Setter setter54 = new Setter();
			setter54.Property = Layoutable.HorizontalAlignmentProperty;
			setter54.Value = HorizontalAlignment.Stretch;
			style19.Add(setter54);
			Setter setter55 = new Setter();
			setter55.Property = Layoutable.VerticalAlignmentProperty;
			setter55.Value = VerticalAlignment.Bottom;
			style19.Add(setter55);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Right).Template()
				.OfType(typeof(Border))
				.Name("PART_SelectedPipe");
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("TabItemPipeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value23;
			context.PopParent();
			style21.Add(setter56);
			Setter setter58 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter59 = setter;
			setter59.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("TabItemVerticalPipeHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter59.Value = value24;
			context.PopParent();
			style21.Add(setter58);
			Setter setter60 = new Setter();
			setter60.Property = Layoutable.MarginProperty;
			setter60.Value = new Thickness(2.0, 0.0, 0.0, 0.0);
			style21.Add(setter60);
			Setter setter61 = new Setter();
			setter61.Property = Layoutable.HorizontalAlignmentProperty;
			setter61.Value = HorizontalAlignment.Right;
			style21.Add(setter61);
			Setter setter62 = new Setter();
			setter62.Property = Layoutable.VerticalAlignmentProperty;
			setter62.Value = VerticalAlignment.Center;
			style21.Add(setter62);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = new Style();
			style22.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Right).Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter63 = new Setter();
			setter63.Property = Layoutable.MarginProperty;
			setter63.Value = new Thickness(0.0, 0.0, 8.0, 0.0);
			style22.Add(setter63);
			controlTheme.Add(style22);
			Style style23 = new Style();
			style23.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Right);
			Setter setter64 = new Setter();
			setter64.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter64.Value = HorizontalAlignment.Right;
			style23.Add(setter64);
			controlTheme.Add(style23);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_200
	{
		private class XamlClosure_201
		{
			private class DynamicSetters_202
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "PART_LayoutRoot";
				service = border2;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border2.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border2.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_202.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = panel3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.Name = "PART_SelectedPipe";
				service = border6;
				context.AvaloniaNameScope.Register("PART_SelectedPipe", service);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TabItemHeaderSelectedPipeFill");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(cornerRadiusProperty, binding2);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TabStripItemPipeThickness");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(heightProperty, binding3);
				border6.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				border6.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 2.0), BindingPriority.Template);
				border6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Bottom, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TabStripItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TabItemHeaderFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.FontWeightProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TabItemHeaderThemeFontWeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TabItemHeaderForegroundUnselected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TabItemHeaderMargin");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.MarginProperty;
			setter12.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TabStripItemMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = new Setter();
			setter15.Property = ContentControl.VerticalContentAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_201.Build, context);
			context.PopParent();
			setter17.Value = value7;
			context.PopParent();
			controlTheme.Add(setter16);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TabItemHeaderBackgroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style3.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TabItemHeaderForegroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style3.Add(setter20);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_SelectedPipe");
			Setter setter22 = new Setter();
			setter22.Property = Visual.IsVisibleProperty;
			setter22.Value = true;
			style4.Add(setter22);
			controlTheme.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value10;
			context.PopParent();
			style6.Add(setter23);
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TabItemHeaderForegroundUnselectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value11;
			context.PopParent();
			style6.Add(setter25);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pointerover")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TabItemHeaderBackgroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value12;
			context.PopParent();
			style8.Add(setter27);
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("TabItemHeaderForegroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value13;
			context.PopParent();
			style8.Add(setter29);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TabItemHeaderBackgroundUnselectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value14;
			context.PopParent();
			style10.Add(setter31);
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TabItemHeaderForegroundUnselectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value15;
			context.PopParent();
			style10.Add(setter33);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style = new Style());
			context.PushParent(style);
			Style style12 = style;
			style12.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pressed")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter35 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter36 = setter;
			setter36.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("TabItemHeaderBackgroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value16;
			context.PopParent();
			style12.Add(setter35);
			Setter setter37 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter38 = setter;
			setter38.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("TabItemHeaderForegroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value17;
			context.PopParent();
			style12.Add(setter37);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = (style = new Style());
			context.PushParent(style);
			Style style14 = style;
			style14.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("TabItemHeaderBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value18;
			context.PopParent();
			style14.Add(setter39);
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("TabItemHeaderForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value19;
			context.PopParent();
			style14.Add(setter41);
			context.PopParent();
			controlTheme.Add(style13);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_203
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M 11.416016,10 20,1.4160156 18.583984,0 10,8.5839846 1.4160156,0 0,1.4160156 8.5839844,10 0,18.583985 1.4160156,20 10,11.416015 18.583984,20 20,18.583985 Z");
		}
	}

	private class XamlClosure_204
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("m10.051 7.0032c2.215 0 4.0105 1.7901 4.0105 3.9984s-1.7956 3.9984-4.0105 3.9984c-2.215 0-4.0105-1.7901-4.0105-3.9984s1.7956-3.9984 4.0105-3.9984zm0 1.4994c-1.3844 0-2.5066 1.1188-2.5066 2.499s1.1222 2.499 2.5066 2.499 2.5066-1.1188 2.5066-2.499-1.1222-2.499-2.5066-2.499zm0-5.0026c4.6257 0 8.6188 3.1487 9.7267 7.5613 0.10085 0.40165-0.14399 0.80877-0.54686 0.90931-0.40288 0.10054-0.81122-0.14355-0.91208-0.54521-0.94136-3.7492-4.3361-6.4261-8.2678-6.4261-3.9334 0-7.3292 2.6792-8.2689 6.4306-0.10063 0.40171-0.50884 0.64603-0.91177 0.54571s-0.648-0.5073-0.54737-0.90901c1.106-4.4152 5.1003-7.5667 9.728-7.5667z");
		}
	}

	private class XamlClosure_205
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("m0.21967 0.21965c-0.26627 0.26627-0.29047 0.68293-0.07262 0.97654l0.07262 0.08412 4.0346 4.0346c-1.922 1.3495-3.3585 3.365-3.9554 5.7495-0.10058 0.4018 0.14362 0.8091 0.54543 0.9097 0.40182 0.1005 0.80909-0.1436 0.90968-0.5455 0.52947-2.1151 1.8371-3.8891 3.5802-5.0341l1.8096 1.8098c-0.70751 0.7215-1.1438 1.71-1.1438 2.8003 0 2.2092 1.7909 4 4 4 1.0904 0 2.0788-0.4363 2.8004-1.1438l5.9193 5.9195c0.2929 0.2929 0.7677 0.2929 1.0606 0 0.2663-0.2662 0.2905-0.6829 0.0726-0.9765l-0.0726-0.0841-6.1135-6.1142 0.0012-0.0015-1.2001-1.1979-2.8699-2.8693 2e-3 -8e-4 -2.8812-2.8782 0.0012-0.0018-1.1333-1.1305-4.3064-4.3058c-0.29289-0.29289-0.76777-0.29289-1.0607 0zm7.9844 9.0458 3.5351 3.5351c-0.45 0.4358-1.0633 0.704-1.7392 0.704-1.3807 0-2.5-1.1193-2.5-2.5 0-0.6759 0.26824-1.2892 0.7041-1.7391zm1.7959-5.7655c-1.0003 0-1.9709 0.14807-2.8889 0.425l1.237 1.2362c0.5358-0.10587 1.0883-0.16119 1.6519-0.16119 3.9231 0 7.3099 2.6803 8.2471 6.4332 0.1004 0.4018 0.5075 0.6462 0.9094 0.5459 0.4019-0.1004 0.6463-0.5075 0.5459-0.9094-1.103-4.417-5.0869-7.5697-9.7024-7.5697zm0.1947 3.5093 3.8013 3.8007c-0.1018-2.0569-1.7488-3.7024-3.8013-3.8007z");
		}
	}

	private class XamlClosure_206
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			object service;
			if (P_0 != null)
			{
				service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MenuFlyout menuFlyout;
			MenuFlyout result = (menuFlyout = new MenuFlyout());
			context.PushParent(menuFlyout);
			menuFlyout.Placement = PlacementMode.Bottom;
			ItemCollection items = menuFlyout.Items;
			MenuItem menuItem;
			MenuItem menuItem2 = (menuItem = new MenuItem());
			((ISupportInitialize)menuItem2).BeginInit();
			items.Add(menuItem2);
			MenuItem menuItem3;
			MenuItem menuItem4 = (menuItem3 = menuItem);
			context.PushParent(menuItem3);
			MenuItem menuItem5 = menuItem3;
			menuItem5.Name = "TextBoxContextFlyoutCutItem";
			service = menuItem5;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutCutItem", service);
			menuItem5.Header = "Cut";
			StyledProperty<ICommand?> commandProperty = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Cut", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BCut_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem5.Bind(commandProperty, binding);
			StyledProperty<bool> isEnabledProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanCutProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem5.Bind(isEnabledProperty, binding2);
			menuItem5.InputGesture = TextBox.CutGesture;
			context.PopParent();
			((ISupportInitialize)menuItem4).EndInit();
			ItemCollection items2 = menuFlyout.Items;
			MenuItem menuItem6;
			MenuItem menuItem7 = (menuItem6 = new MenuItem());
			((ISupportInitialize)menuItem7).BeginInit();
			items2.Add(menuItem7);
			MenuItem menuItem8 = (menuItem3 = menuItem6);
			context.PushParent(menuItem3);
			MenuItem menuItem9 = menuItem3;
			menuItem9.Name = "TextBoxContextFlyoutCopyItem";
			service = menuItem9;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutCopyItem", service);
			menuItem9.Header = "Copy";
			StyledProperty<ICommand?> commandProperty2 = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Copy", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BCopy_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding3 = compiledBindingExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem9.Bind(commandProperty2, binding3);
			StyledProperty<bool> isEnabledProperty2 = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanCopyProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding4 = compiledBindingExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem9.Bind(isEnabledProperty2, binding4);
			menuItem9.InputGesture = TextBox.CopyGesture;
			context.PopParent();
			((ISupportInitialize)menuItem8).EndInit();
			ItemCollection items3 = menuFlyout.Items;
			MenuItem menuItem10;
			MenuItem menuItem11 = (menuItem10 = new MenuItem());
			((ISupportInitialize)menuItem11).BeginInit();
			items3.Add(menuItem11);
			MenuItem menuItem12 = (menuItem3 = menuItem10);
			context.PushParent(menuItem3);
			MenuItem menuItem13 = menuItem3;
			menuItem13.Name = "TextBoxContextFlyoutPasteItem";
			service = menuItem13;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutPasteItem", service);
			menuItem13.Header = "Paste";
			StyledProperty<ICommand?> commandProperty3 = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Paste", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BPaste_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding5 = compiledBindingExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem13.Bind(commandProperty3, binding5);
			StyledProperty<bool> isEnabledProperty3 = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanPasteProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding6 = compiledBindingExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem13.Bind(isEnabledProperty3, binding6);
			menuItem13.InputGesture = TextBox.PasteGesture;
			context.PopParent();
			((ISupportInitialize)menuItem12).EndInit();
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_207
	{
		private class XamlClosure_208
		{
			private class DynamicSetters_209
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_209.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = new Setter();
			setter6.Property = InputElement.FocusableProperty;
			setter6.Value = false;
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = Layoutable.MinWidthProperty;
			setter7.Value = 34.0;
			controlTheme.Add(setter7);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.WidthProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value4 = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TextControlButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value5;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate = new ControlTemplate();
			controlTemplate.TargetType = typeof(Button);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_208.Build, context);
			setter14.Value = controlTemplate;
			controlTheme.Add(setter14);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TextControlButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style3.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TextControlButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			style3.Add(setter17);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TextControlButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value8;
			context.PopParent();
			style3.Add(setter19);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TextControlButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value9;
			context.PopParent();
			style5.Add(setter21);
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TextControlButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value10;
			context.PopParent();
			style5.Add(setter23);
			Setter setter25 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter26 = setter;
			setter26.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TextControlButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value11;
			context.PopParent();
			style5.Add(setter25);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter27 = new Setter();
			setter27.Property = Visual.OpacityProperty;
			setter27.Value = 0.0;
			style6.Add(setter27);
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_210
	{
		private class XamlClosure_211
		{
			private class DynamicSetters_212
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				DynamicSetters_212.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentTextBoxButton");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate = new ControlTemplate();
			controlTemplate.TargetType = typeof(ToggleButton);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_211.Build, context);
			setter.Value = controlTemplate;
			controlTheme.Add(setter);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().Class(":checked").Template()
					.OfType(typeof(ContentPresenter)),
				((Selector?)null).Nesting().Class(":indeterminate").Template()
					.OfType(typeof(ContentPresenter))
			});
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			style.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TextControlButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_213
	{
		private class XamlClosure_214
		{
			private class DynamicSetters_215
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				dataValidationErrors.Content = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_BorderElement";
				service = border;
				context.AvaloniaNameScope.Register("PART_BorderElement", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border.Bind(Layoutable.MinWidthProperty, new TemplateBinding(Layoutable.MinWidthProperty).ProvideValue());
				border.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				((ISupportInitialize)border).EndInit();
				Controls children2 = panel3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5;
				Border border6 = (border5 = border3);
				context.PushParent(border5);
				border5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border5.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children3 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children3.Add(contentPresenter2);
				contentPresenter.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				contentPresenter.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				DynamicSetters_215.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(TextBox.InnerLeftContentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children4 = grid3.Children;
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				children4.Add(dockPanel2);
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = dockPanel);
				context.PushParent(dockPanel3);
				dockPanel3.Name = "PART_InnerDockPanel";
				service = dockPanel3;
				context.AvaloniaNameScope.Register("PART_InnerDockPanel", service);
				dockPanel3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				dockPanel3.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				dockPanel3.SetValue(InputElement.CursorProperty, Cursor.Parse("IBeam"), BindingPriority.Template);
				dockPanel3.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Controls children5 = dockPanel3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children5.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				textBlock3.Name = "PART_FloatingWatermark";
				service = textBlock3;
				context.AvaloniaNameScope.Register("PART_FloatingWatermark", service);
				StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemAccentColor");
				context.ProvideTargetProperty = TextBlock.ForegroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(foregroundProperty, binding);
				textBlock3.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock3.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				textBlock3.Bind(TextBlock.TextProperty, new TemplateBinding(TextBox.WatermarkProperty).ProvideValue());
				textBlock3.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children6 = dockPanel3.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children6.Add(scrollViewer2);
				scrollViewer.Name = "PART_ScrollViewer";
				service = scrollViewer;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				Panel panel5;
				Panel panel6 = (panel5 = new Panel());
				((ISupportInitialize)panel6).BeginInit();
				scrollViewer.Content = panel6;
				Controls children7 = panel5.Children;
				TextBlock textBlock5;
				TextBlock textBlock6 = (textBlock5 = new TextBlock());
				((ISupportInitialize)textBlock6).BeginInit();
				children7.Add(textBlock6);
				textBlock5.Name = "PART_Watermark";
				service = textBlock5;
				context.AvaloniaNameScope.Register("PART_Watermark", service);
				textBlock5.SetValue(Visual.OpacityProperty, 0.5, BindingPriority.Template);
				textBlock5.Bind(TextBlock.TextProperty, new TemplateBinding(TextBox.WatermarkProperty).ProvideValue());
				textBlock5.Bind(TextBlock.TextAlignmentProperty, new TemplateBinding(TextBox.TextAlignmentProperty).ProvideValue());
				textBlock5.Bind(TextBlock.TextWrappingProperty, new TemplateBinding(TextBox.TextWrappingProperty).ProvideValue());
				textBlock5.Bind(Visual.IsVisibleProperty, new TemplateBinding(TextBox.TextProperty)
				{
					Converter = StringConverters.IsNullOrEmpty
				}.ProvideValue());
				textBlock5.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(TextBox.HorizontalContentAlignmentProperty).ProvideValue());
				textBlock5.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(TextBox.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)textBlock5).EndInit();
				Controls children8 = panel5.Children;
				TextPresenter textPresenter;
				TextPresenter textPresenter2 = (textPresenter = new TextPresenter());
				((ISupportInitialize)textPresenter2).BeginInit();
				children8.Add(textPresenter2);
				textPresenter.Name = "PART_TextPresenter";
				service = textPresenter;
				context.AvaloniaNameScope.Register("PART_TextPresenter", service);
				textPresenter.Bind(TextPresenter.TextProperty, new TemplateBinding(TextBox.TextProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				textPresenter.Bind(TextPresenter.CaretIndexProperty, new TemplateBinding(TextBox.CaretIndexProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionStartProperty, new TemplateBinding(TextBox.SelectionStartProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionEndProperty, new TemplateBinding(TextBox.SelectionEndProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.TextAlignmentProperty, new TemplateBinding(TextBox.TextAlignmentProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.TextWrappingProperty, new TemplateBinding(TextBox.TextWrappingProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.LineHeightProperty, new TemplateBinding(TextBox.LineHeightProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.LetterSpacingProperty, new TemplateBinding(TextBox.LetterSpacingProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.PasswordCharProperty, new TemplateBinding(TextBox.PasswordCharProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.RevealPasswordProperty, new TemplateBinding(TextBox.RevealPasswordProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionBrushProperty, new TemplateBinding(TextBox.SelectionBrushProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionForegroundBrushProperty, new TemplateBinding(TextBox.SelectionForegroundBrushProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.CaretBrushProperty, new TemplateBinding(TextBox.CaretBrushProperty).ProvideValue());
				textPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(TextBox.HorizontalContentAlignmentProperty).ProvideValue());
				textPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(TextBox.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)textPresenter).EndInit();
				((ISupportInitialize)panel5).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel4).EndInit();
				Controls children9 = grid3.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children9.Add(contentPresenter4);
				contentPresenter3.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				contentPresenter3.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				DynamicSetters_215.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(TextBox.InnerRightContentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border6).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_216
		{
			private class DynamicSetters_217
			{
				public static void DynamicSetter_1(StyledElement P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(StyledElement.ThemeProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_1 is ControlTheme)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(PathIcon P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(PathIcon.DataProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(PathIcon.DataProperty, binding);
						return;
					}
					if (P_1 is Geometry)
					{
						P_0.Data = (Geometry)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Data = (Geometry)P_1;
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ToggleButton();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ToggleButton toggleButton = (ToggleButton)intermediateRoot;
				context.PushParent(toggleButton);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentTextBoxToggleButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_217.DynamicSetter_1(toggleButton, obj);
				StyledProperty<bool?> isCheckedProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension obj2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.RevealPasswordProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build())
				{
					Mode = BindingMode.TwoWay
				};
				context.ProvideTargetProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension binding = obj2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				toggleButton.Bind(isCheckedProperty, binding);
				toggleButton.ClipToBounds = true;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				toggleButton.Content = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				children.Add(pathIcon2);
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				PathIcon pathIcon5 = pathIcon3;
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("PasswordBoxRevealButtonData");
				context.ProvideTargetProperty = PathIcon.DataProperty;
				object? obj3 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_217.DynamicSetter_2(pathIcon5, obj3);
				pathIcon5.Height = 8.0;
				pathIcon5.Width = 12.0;
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Ancestor(typeof(ToggleButton), 0).Property(ToggleButton.IsCheckedProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon5.Bind(isVisibleProperty, binding2);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				Controls children2 = panel3.Children;
				PathIcon pathIcon6;
				PathIcon pathIcon7 = (pathIcon6 = new PathIcon());
				((ISupportInitialize)pathIcon7).BeginInit();
				children2.Add(pathIcon7);
				PathIcon pathIcon8 = (pathIcon3 = pathIcon6);
				context.PushParent(pathIcon3);
				PathIcon pathIcon9 = pathIcon3;
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("PasswordBoxHideButtonData");
				context.ProvideTargetProperty = PathIcon.DataProperty;
				object? obj4 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_217.DynamicSetter_2(pathIcon9, obj4);
				pathIcon9.Height = 12.0;
				pathIcon9.Width = 12.0;
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ToggleButton), 0).Property(ToggleButton.IsCheckedProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon9.Bind(isVisibleProperty2, binding3);
				context.PopParent();
				((ISupportInitialize)pathIcon8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_218
		{
			private class DynamicSetters_219
			{
				public static void DynamicSetter_1(StyledElement P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(StyledElement.ThemeProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_1 is ControlTheme)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(PathIcon P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(PathIcon.DataProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(PathIcon.DataProperty, binding);
						return;
					}
					if (P_1 is Geometry)
					{
						P_0.Data = (Geometry)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Data = (Geometry)P_1;
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Button();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Button button = (Button)intermediateRoot;
				context.PushParent(button);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentTextBoxButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_219.DynamicSetter_1(button, obj);
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Clear", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BClear_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button.Bind(commandProperty, binding);
				button.ClipToBounds = true;
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				button.Content = pathIcon2;
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("TextBoxClearButtonData");
				context.ProvideTargetProperty = PathIcon.DataProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_219.DynamicSetter_2(pathIcon3, obj2);
				pathIcon3.Height = 10.0;
				pathIcon3.Width = 10.0;
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TextBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TextControlBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TextBox.CaretBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TextControlForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TextControlBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TextBox.SelectionBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TextControlSelectionHighlightColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TextControlBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value8;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TextControlThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value9;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TextControlThemeMinWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value10;
			context.PopParent();
			controlTheme.Add(setter20);
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TextControlThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value11;
			context.PopParent();
			controlTheme.Add(setter22);
			Setter setter24 = new Setter();
			setter24.Property = Control.FocusAdornerProperty;
			setter24.Value = null;
			controlTheme.Add(setter24);
			Setter setter25 = new Setter();
			setter25.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter25.Value = true;
			controlTheme.Add(setter25);
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = Control.ContextFlyoutProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("DefaultTextBoxContextFlyout");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value12 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value12;
			context.PopParent();
			controlTheme.Add(setter26);
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value13 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_214.Build, context);
			context.PopParent();
			setter29.Value = value13;
			context.PopParent();
			controlTheme.Add(setter28);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("TextControlForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value14;
			context.PopParent();
			style3.Add(setter30);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_BorderElement");
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TextControlBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value15;
			context.PopParent();
			style5.Add(setter32);
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TextControlBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value16;
			context.PopParent();
			style5.Add(setter34);
			context.PopParent();
			style3.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
					.Name("PART_Watermark"),
				((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
					.Name("PART_FloatingWatermark")
			});
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("TextControlPlaceholderForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value17;
			context.PopParent();
			style7.Add(setter36);
			context.PopParent();
			style3.Add(style6);
			context.PopParent();
			controlTheme.Add(style2);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("TextControlForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value18;
			context.PopParent();
			style9.Add(setter38);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_BorderElement");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("TextControlBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value19;
			context.PopParent();
			style11.Add(setter40);
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("TextControlBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value20;
			context.PopParent();
			style11.Add(setter42);
			context.PopParent();
			style9.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PART_Watermark");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("TextControlPlaceholderForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value21;
			context.PopParent();
			style13.Add(setter44);
			context.PopParent();
			style9.Add(style12);
			context.PopParent();
			controlTheme.Add(style8);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":focus");
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("TextControlForegroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value22;
			context.PopParent();
			style15.Add(setter46);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PART_Watermark");
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("TextControlPlaceholderForegroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value23;
			context.PopParent();
			style17.Add(setter48);
			context.PopParent();
			style15.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_BorderElement");
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("TextControlBackgroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value24;
			context.PopParent();
			style19.Add(setter50);
			Setter setter52 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter53 = setter;
			setter53.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("TextControlBorderBrushFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value25;
			context.PopParent();
			style19.Add(setter52);
			Setter setter54 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter55 = setter;
			setter55.Property = Border.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("TextControlBorderThemeThicknessFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value26;
			context.PopParent();
			style19.Add(setter54);
			context.PopParent();
			style15.Add(style18);
			context.PopParent();
			controlTheme.Add(style14);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Border))
				.Name("PART_BorderElement");
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value27;
			context.PopParent();
			style21.Add(setter56);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = new Style();
			style22.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TextBox.UseFloatingWatermarkProperty, (object?)true).Not(((Selector?)null).Class(":empty"))
				.Template()
				.OfType(typeof(TextBlock))
				.Name("PART_FloatingWatermark");
			Setter setter58 = new Setter();
			setter58.Property = Visual.IsVisibleProperty;
			setter58.Value = true;
			style22.Add(setter58);
			controlTheme.Add(style22);
			Style style23 = (style = new Style());
			context.PushParent(style);
			Style style24 = style;
			style24.Selector = ((Selector?)null).Nesting().Class("revealPasswordButton").PropertyEquals((AvaloniaProperty)TextBox.AcceptsReturnProperty, (object?)false)
				.PropertyEquals((AvaloniaProperty)TextBox.IsReadOnlyProperty, (object?)false)
				.Not(((Selector?)null).OfType(typeof(TextBox)).Class(":empty"));
			Setter setter59 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter60 = setter;
			setter60.Property = TextBox.InnerRightContentProperty;
			Template template;
			Template value28 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_216.Build, context);
			context.PopParent();
			setter60.Value = value28;
			context.PopParent();
			style24.Add(setter59);
			context.PopParent();
			controlTheme.Add(style23);
			Style style25 = (style = new Style());
			context.PushParent(style);
			Style style26 = style;
			style26.Selector = ((Selector?)null).Nesting().Class("clearButton").PropertyEquals((AvaloniaProperty)TextBox.AcceptsReturnProperty, (object?)false)
				.PropertyEquals((AvaloniaProperty)TextBox.IsReadOnlyProperty, (object?)false)
				.Class(":focus")
				.Not(((Selector?)null).OfType(typeof(TextBox)).Class(":empty"));
			Setter setter61 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter62 = setter;
			setter62.Property = TextBox.InnerRightContentProperty;
			Template value29 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_218.Build, context);
			context.PopParent();
			setter62.Value = value29;
			context.PopParent();
			style26.Add(setter61);
			context.PopParent();
			controlTheme.Add(style25);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_220
	{
		private class XamlClosure_221
		{
			private class DynamicSetters_222
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Grid grid2 = grid;
				grid2.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid2.RowDefinitions = rowDefinitions;
				Controls children = grid2.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter3.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				contentPresenter3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				DynamicSetters_222.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ToggleSwitchTopHeaderMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(marginProperty, binding);
				contentPresenter3.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				Controls children2 = grid2.Children;
				Grid grid3;
				Grid grid4 = (grid3 = new Grid());
				((ISupportInitialize)grid4).BeginInit();
				children2.Add(grid4);
				Grid grid5 = (grid = grid3);
				context.PushParent(grid);
				Grid grid6 = grid;
				grid6.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ToggleSwitchThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid6.Bind(minWidthProperty, binding2);
				grid6.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				grid6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				RowDefinitions rowDefinitions2 = grid6.RowDefinitions;
				RowDefinition rowDefinition;
				RowDefinition item = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target = rowDefinition;
				StyledProperty<GridLength> heightProperty = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ToggleSwitchPreContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(heightProperty, binding3);
				context.PopParent();
				rowDefinitions2.Add(item);
				RowDefinitions rowDefinitions3 = grid6.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions3.Add(rowDefinition2);
				RowDefinitions rowDefinitions4 = grid6.RowDefinitions;
				RowDefinition item2 = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target2 = rowDefinition;
				StyledProperty<GridLength> heightProperty2 = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ToggleSwitchPostContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target2.Bind(heightProperty2, binding4);
				context.PopParent();
				rowDefinitions4.Add(item2);
				ColumnDefinitions columnDefinitions = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(12.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition2.SetValue(ColumnDefinition.MaxWidthProperty, 12.0, BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Controls children3 = grid6.Children;
				Grid grid7;
				Grid grid8 = (grid7 = new Grid());
				((ISupportInitialize)grid8).BeginInit();
				children3.Add(grid8);
				Grid grid9 = (grid = grid7);
				context.PushParent(grid);
				Grid grid10 = grid;
				grid10.Name = "SwitchAreaGrid";
				service = grid10;
				context.AvaloniaNameScope.Register("SwitchAreaGrid", service);
				grid10.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				grid10.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ToggleSwitchContainerBackground");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid10.Bind(backgroundProperty, binding5);
				grid10.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 5.0), BindingPriority.Template);
				grid10.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)grid9).EndInit();
				Controls children4 = grid6.Children;
				ContentPresenter contentPresenter5;
				ContentPresenter contentPresenter6 = (contentPresenter5 = new ContentPresenter());
				((ISupportInitialize)contentPresenter6).BeginInit();
				children4.Add(contentPresenter6);
				contentPresenter5.Name = "PART_OffContentPresenter";
				service = contentPresenter5;
				context.AvaloniaNameScope.Register("PART_OffContentPresenter", service);
				contentPresenter5.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				contentPresenter5.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				contentPresenter5.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter5.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_222.DynamicSetter_1(contentPresenter5, BindingPriority.Template, new TemplateBinding(ToggleSwitch.OffContentProperty).ProvideValue());
				contentPresenter5.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ToggleSwitch.OffContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter5).EndInit();
				Controls children5 = grid6.Children;
				ContentPresenter contentPresenter7;
				ContentPresenter contentPresenter8 = (contentPresenter7 = new ContentPresenter());
				((ISupportInitialize)contentPresenter8).BeginInit();
				children5.Add(contentPresenter8);
				contentPresenter7.Name = "PART_OnContentPresenter";
				service = contentPresenter7;
				context.AvaloniaNameScope.Register("PART_OnContentPresenter", service);
				contentPresenter7.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				contentPresenter7.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				contentPresenter7.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter7.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_222.DynamicSetter_1(contentPresenter7, BindingPriority.Template, new TemplateBinding(ToggleSwitch.OnContentProperty).ProvideValue());
				contentPresenter7.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ToggleSwitch.OnContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter7).EndInit();
				Controls children6 = grid6.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children6.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "OuterBorder";
				service = border5;
				context.AvaloniaNameScope.Register("OuterBorder", service);
				border5.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border5.SetValue(Layoutable.WidthProperty, 40.0, BindingPriority.Template);
				border5.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty2 = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ToggleSwitchFillOff");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(backgroundProperty2, binding6);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ToggleSwitchStrokeOff");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderBrushProperty, binding7);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ToggleSwitchOuterBorderStrokeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderThicknessProperty, binding8);
				border5.SetValue(Border.CornerRadiusProperty, new CornerRadius(10.0, 10.0, 10.0, 10.0), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children7 = grid6.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children7.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "SwitchKnobBounds";
				service = border9;
				context.AvaloniaNameScope.Register("SwitchKnobBounds", service);
				border9.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border9.SetValue(Layoutable.WidthProperty, 40.0, BindingPriority.Template);
				border9.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty3 = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ToggleSwitchFillOn");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(backgroundProperty3, binding9);
				StyledProperty<IBrush?> borderBrushProperty2 = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ToggleSwitchStrokeOn");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderBrushProperty2, binding10);
				StyledProperty<Thickness> borderThicknessProperty2 = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ToggleSwitchOnStrokeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderThicknessProperty2, binding11);
				border9.SetValue(Border.CornerRadiusProperty, new CornerRadius(10.0, 10.0, 10.0, 10.0), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children8 = grid6.Children;
				Canvas canvas;
				Canvas canvas2 = (canvas = new Canvas());
				((ISupportInitialize)canvas2).BeginInit();
				children8.Add(canvas2);
				Canvas canvas3;
				Canvas canvas4 = (canvas3 = canvas);
				context.PushParent(canvas3);
				canvas3.Name = "PART_SwitchKnob";
				service = canvas3;
				context.AvaloniaNameScope.Register("PART_SwitchKnob", service);
				canvas3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				canvas3.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				canvas3.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				canvas3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				Controls children9 = canvas3.Children;
				Grid grid11;
				Grid grid12 = (grid11 = new Grid());
				((ISupportInitialize)grid12).BeginInit();
				children9.Add(grid12);
				Grid grid13 = (grid = grid11);
				context.PushParent(grid);
				Grid grid14 = grid;
				grid14.Name = "PART_MovingKnobs";
				service = grid14;
				context.AvaloniaNameScope.Register("PART_MovingKnobs", service);
				grid14.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				grid14.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				Controls children10 = grid14.Children;
				Ellipse ellipse;
				Ellipse ellipse2 = (ellipse = new Ellipse());
				((ISupportInitialize)ellipse2).BeginInit();
				children10.Add(ellipse2);
				Ellipse ellipse3;
				Ellipse ellipse4 = (ellipse3 = ellipse);
				context.PushParent(ellipse3);
				Ellipse ellipse5 = ellipse3;
				ellipse5.Name = "SwitchKnobOn";
				service = ellipse5;
				context.AvaloniaNameScope.Register("SwitchKnobOn", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ToggleSwitchKnobFillOn");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse5.Bind(fillProperty, binding12);
				ellipse5.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse5.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse4).EndInit();
				Controls children11 = grid14.Children;
				Ellipse ellipse6;
				Ellipse ellipse7 = (ellipse6 = new Ellipse());
				((ISupportInitialize)ellipse7).BeginInit();
				children11.Add(ellipse7);
				Ellipse ellipse8 = (ellipse3 = ellipse6);
				context.PushParent(ellipse3);
				Ellipse ellipse9 = ellipse3;
				ellipse9.Name = "SwitchKnobOff";
				service = ellipse9;
				context.AvaloniaNameScope.Register("SwitchKnobOff", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ToggleSwitchKnobFillOff");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse9.Bind(fillProperty2, binding13);
				ellipse9.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse9.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid13).EndInit();
				context.PopParent();
				((ISupportInitialize)canvas4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid5).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleSwitch);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ToggleSwitchContentForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.HorizontalAlignmentProperty;
			setter4.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.VerticalAlignmentProperty;
			setter5.Value = VerticalAlignment.Center;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter6.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = ContentControl.VerticalContentAlignmentProperty;
			setter7.Value = VerticalAlignment.Center;
			controlTheme.Add(setter7);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ToggleSwitch.KnobTransitionsProperty;
			Transitions transitions = new Transitions();
			DoubleTransition doubleTransition = new DoubleTransition();
			doubleTransition.Easing = Easing.Parse("CubicEaseOut");
			doubleTransition.Property = Canvas.LeftProperty;
			doubleTransition.Duration = TimeSpan.FromTicks(2000000L);
			transitions.Add(doubleTransition);
			setter10.Value = transitions;
			controlTheme.Add(setter10);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_221.Build, context);
			context.PopParent();
			setter12.Value = value3;
			context.PopParent();
			controlTheme.Add(setter11);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter")
				.Class(":empty");
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.MarginProperty;
			setter13.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style.Add(setter13);
			controlTheme.Add(style);
			Style style2;
			Style style3 = (style2 = new Style());
			context.PushParent(style2);
			Style style4 = style2;
			style4.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ToggleSwitchStrokeOffPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value4;
			context.PopParent();
			style4.Add(setter14);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ToggleSwitchFillOffPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value5;
			context.PopParent();
			style4.Add(setter16);
			context.PopParent();
			controlTheme.Add(style3);
			Style style5 = (style2 = new Style());
			context.PushParent(style2);
			Style style6 = style2;
			style6.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ToggleSwitchKnobFillOffPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value6;
			context.PopParent();
			style6.Add(setter18);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style2 = new Style());
			context.PushParent(style2);
			Style style8 = style2;
			style8.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ToggleSwitchKnobFillOnPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			style8.Add(setter20);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style2 = new Style());
			context.PushParent(style2);
			Style style10 = style2;
			style10.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ToggleSwitchFillOnPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value8;
			context.PopParent();
			style10.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ToggleSwitchStrokeOnPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value9;
			context.PopParent();
			style10.Add(setter24);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style2 = new Style());
			context.PushParent(style2);
			Style style12 = style2;
			style12.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Grid))
				.Name("SwitchAreaGrid");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ToggleSwitchContainerBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value10;
			context.PopParent();
			style12.Add(setter26);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = (style2 = new Style());
			context.PushParent(style2);
			Style style14 = style2;
			style14.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ToggleSwitchStrokeOffPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value11;
			context.PopParent();
			style14.Add(setter28);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ToggleSwitchFillOffPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value12;
			context.PopParent();
			style14.Add(setter30);
			context.PopParent();
			controlTheme.Add(style13);
			Style style15 = (style2 = new Style());
			context.PushParent(style2);
			Style style16 = style2;
			style16.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ToggleSwitchFillOnPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value13;
			context.PopParent();
			style16.Add(setter32);
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ToggleSwitchStrokeOnPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value14;
			context.PopParent();
			style16.Add(setter34);
			context.PopParent();
			controlTheme.Add(style15);
			Style style17 = (style2 = new Style());
			context.PushParent(style2);
			Style style18 = style2;
			style18.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ToggleSwitchKnobFillOffPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value15;
			context.PopParent();
			style18.Add(setter36);
			context.PopParent();
			controlTheme.Add(style17);
			Style style19 = (style2 = new Style());
			context.PushParent(style2);
			Style style20 = style2;
			style20.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ToggleSwitchKnobFillOnPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value16;
			context.PopParent();
			style20.Add(setter38);
			context.PopParent();
			controlTheme.Add(style19);
			Style style21 = (style2 = new Style());
			context.PushParent(style2);
			Style style22 = style2;
			style22.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Grid))
				.Name("SwitchAreaGrid");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ToggleSwitchContainerBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value17;
			context.PopParent();
			style22.Add(setter40);
			context.PopParent();
			controlTheme.Add(style21);
			Style style23 = (style2 = new Style());
			context.PushParent(style2);
			Style style24 = style2;
			style24.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ToggleSwitchHeaderForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value18;
			context.PopParent();
			style24.Add(setter42);
			context.PopParent();
			controlTheme.Add(style23);
			Style style25 = (style2 = new Style());
			context.PushParent(style2);
			Style style26 = style2;
			style26.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ToggleSwitchStrokeOffDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value19;
			context.PopParent();
			style26.Add(setter44);
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ToggleSwitchFillOffDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value20;
			context.PopParent();
			style26.Add(setter46);
			context.PopParent();
			controlTheme.Add(style25);
			Style style27 = (style2 = new Style());
			context.PushParent(style2);
			Style style28 = style2;
			style28.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ToggleSwitchKnobFillOffDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value21;
			context.PopParent();
			style28.Add(setter48);
			context.PopParent();
			controlTheme.Add(style27);
			Style style29 = (style2 = new Style());
			context.PushParent(style2);
			Style style30 = style2;
			style30.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ToggleSwitchKnobFillOnDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value22;
			context.PopParent();
			style30.Add(setter50);
			context.PopParent();
			controlTheme.Add(style29);
			Style style31 = (style2 = new Style());
			context.PushParent(style2);
			Style style32 = style2;
			style32.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter52 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter53 = setter;
			setter53.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ToggleSwitchFillOnDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value23;
			context.PopParent();
			style32.Add(setter52);
			Setter setter54 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter55 = setter;
			setter55.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("ToggleSwitchStrokeOnDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value24;
			context.PopParent();
			style32.Add(setter54);
			context.PopParent();
			controlTheme.Add(style31);
			Style style33 = new Style();
			style33.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter56 = new Setter();
			setter56.Property = Visual.OpacityProperty;
			setter56.Value = 0.0;
			style33.Add(setter56);
			controlTheme.Add(style33);
			Style style34 = new Style();
			style34.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter57 = new Setter();
			setter57.Property = Visual.OpacityProperty;
			setter57.Value = 0.0;
			style34.Add(setter57);
			controlTheme.Add(style34);
			Style style35 = new Style();
			style35.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter58 = new Setter();
			setter58.Property = Visual.OpacityProperty;
			setter58.Value = 1.0;
			style35.Add(setter58);
			controlTheme.Add(style35);
			Style style36 = new Style();
			style36.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter59 = new Setter();
			setter59.Property = Visual.OpacityProperty;
			setter59.Value = 1.0;
			style36.Add(setter59);
			controlTheme.Add(style36);
			Style style37 = new Style();
			style37.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OffContentPresenter");
			Setter setter60 = new Setter();
			setter60.Property = Visual.OpacityProperty;
			setter60.Value = 0.0;
			style37.Add(setter60);
			controlTheme.Add(style37);
			Style style38 = new Style();
			style38.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OnContentPresenter");
			Setter setter61 = new Setter();
			setter61.Property = Visual.OpacityProperty;
			setter61.Value = 1.0;
			style38.Add(setter61);
			controlTheme.Add(style38);
			Style style39 = new Style();
			style39.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter62 = new Setter();
			setter62.Property = Visual.OpacityProperty;
			setter62.Value = 1.0;
			style39.Add(setter62);
			controlTheme.Add(style39);
			Style style40 = new Style();
			style40.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter63 = new Setter();
			setter63.Property = Visual.OpacityProperty;
			setter63.Value = 1.0;
			style40.Add(setter63);
			controlTheme.Add(style40);
			Style style41 = new Style();
			style41.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter64 = new Setter();
			setter64.Property = Visual.OpacityProperty;
			setter64.Value = 0.0;
			style41.Add(setter64);
			controlTheme.Add(style41);
			Style style42 = new Style();
			style42.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter65 = new Setter();
			setter65.Property = Visual.OpacityProperty;
			setter65.Value = 0.0;
			style42.Add(setter65);
			controlTheme.Add(style42);
			Style style43 = new Style();
			style43.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OffContentPresenter");
			Setter setter66 = new Setter();
			setter66.Property = Visual.OpacityProperty;
			setter66.Value = 1.0;
			style43.Add(setter66);
			controlTheme.Add(style43);
			Style style44 = new Style();
			style44.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OnContentPresenter");
			Setter setter67 = new Setter();
			setter67.Property = Visual.OpacityProperty;
			setter67.Value = 0.0;
			style44.Add(setter67);
			controlTheme.Add(style44);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_223
	{
		private class XamlClosure_224
		{
			private class DynamicSetters_225
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_LayoutRoot";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(Layoutable.MaxWidthProperty, new TemplateBinding(Layoutable.MaxWidthProperty).ProvideValue());
				DynamicSetters_225.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.SetValue(TextBlock.TextWrappingProperty, TextWrapping.Wrap, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToolTip);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ToolTipForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ToolTipBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ToolTipBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ToolTipBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ToolTipContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ToolTipBorderThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = Layoutable.MaxWidthProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ToolTipContentMaxWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value8;
			context.PopParent();
			controlTheme.Add(setter16);
			Setter setter18 = new Setter();
			setter18.Property = Visual.OpacityProperty;
			setter18.Value = 0.0;
			controlTheme.Add(setter18);
			Setter setter19 = new Setter();
			setter19.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			DoubleTransition doubleTransition = new DoubleTransition();
			doubleTransition.Property = Visual.OpacityProperty;
			doubleTransition.Duration = TimeSpan.FromTicks(1500000L);
			transitions.Add(doubleTransition);
			setter19.Value = transitions;
			controlTheme.Add(setter19);
			Setter setter20 = new Setter();
			setter20.Property = TemplatedControl.TemplateProperty;
			setter20.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_224.Build, context)
			};
			controlTheme.Add(setter20);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":open");
			Setter setter21 = new Setter();
			setter21.Property = Visual.OpacityProperty;
			setter21.Value = 1.0;
			style.Add(setter21);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_226
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z");
		}
	}

	private class XamlClosure_227
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M0,1 L10,10 20,1 19,0 10,8 1,0 Z");
		}
	}

	private class XamlClosure_228
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter;
			MarginMultiplierConverter result = (marginMultiplierConverter = new MarginMultiplierConverter());
			context.PushParent(marginMultiplierConverter);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TreeViewItemIndent");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EConverters_002EMarginMultiplierConverter_002CAvalonia_002EControls_002EIndent_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			marginMultiplierConverter.Indent = (double)obj;
			marginMultiplierConverter.Left = true;
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_229
	{
		private class XamlClosure_230
		{
			private class DynamicSetters_231
			{
				public static void DynamicSetter_1(Path P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Path.DataProperty, binding);
						return;
					}
					if (P_2 is Geometry)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				border.Bind(Layoutable.WidthProperty, new TemplateBinding(Layoutable.WidthProperty).ProvideValue());
				border.Bind(Layoutable.HeightProperty, new TemplateBinding(Layoutable.HeightProperty).ProvideValue());
				border.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				border.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				border.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "ChevronPath";
				service = path3;
				context.AvaloniaNameScope.Register("ChevronPath", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TreeViewItemCollapsedChevronPathData");
				context.ProvideTargetProperty = Path.DataProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_231.DynamicSetter_1(path3, BindingPriority.Template, obj);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TreeViewItemForeground");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter = new Setter();
			setter.Property = Layoutable.MarginProperty;
			setter.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TreeViewItemExpandCollapseChevronSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = Layoutable.HeightProperty;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("TreeViewItemExpandCollapseChevronSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_230.Build, context);
			context.PopParent();
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Path))
				.Name("ChevronPath");
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = Path.DataProperty;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("TreeViewItemExpandedChevronPathData");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value4 = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style.Add(setter9);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_232
	{
		private class XamlClosure_233
		{
			private class DynamicSetters_234
			{
				public static void DynamicSetter_1(Layoutable P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Layoutable.MarginProperty, binding);
						return;
					}
					if (P_2 is Thickness value)
					{
						int priority = (int)P_1;
						P_0.SetValue(Layoutable.MarginProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						throw new NullReferenceException();
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				StackPanel stackPanel = (StackPanel)intermediateRoot;
				context.PushParent(stackPanel);
				Controls children = stackPanel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "PART_LayoutRoot";
				service = border3;
				context.AvaloniaNameScope.Register("PART_LayoutRoot", service);
				border3.Classes.Add("TreeViewItemLayoutRoot");
				border3.SetValue(InputElement.FocusableProperty, value: true, BindingPriority.Template);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border3.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				border3.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border3.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.Name = "PART_Header";
				service = grid3;
				context.AvaloniaNameScope.Register("PART_Header", service);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid3.ColumnDefinitions = columnDefinitions;
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TreeViewItem.LevelProperty));
				context.PushParent(templateBinding);
				templateBinding.Mode = BindingMode.OneWay;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TreeViewItemLeftMarginConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding.Converter = (IValueConverter)obj;
				context.PopParent();
				grid3.Bind(marginProperty, templateBinding2.ProvideValue());
				Controls children2 = grid3.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children2.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.Name = "PART_ExpandCollapseChevronContainer";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_ExpandCollapseChevronContainer", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("TreeViewItemExpandCollapseChevronMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_234.DynamicSetter_1(panel3, BindingPriority.Template, obj2);
				Controls children3 = panel3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children3.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_ExpandCollapseChevron";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_ExpandCollapseChevron", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentTreeViewExpandCollapseChevron");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_234.DynamicSetter_2(toggleButton3, BindingPriority.Template, obj3);
				toggleButton3.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(TreeViewItem.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children4 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children4.Add(contentPresenter2);
				contentPresenter.Name = "PART_HeaderPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				DynamicSetters_234.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(HeaderedItemsControl.HeaderProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedItemsControl.HeaderTemplateProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children5 = stackPanel.Children;
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				children5.Add(itemsPresenter2);
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(TreeViewItem.IsExpandedProperty).ProvideValue());
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TreeViewItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TreeViewItemBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TreeViewItemBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TreeViewItemBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TreeViewItemForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TreeViewItemMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.VerticalAlignmentProperty;
			setter13.Value = VerticalAlignment.Center;
			controlTheme.Add(setter13);
			Setter setter14 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter15 = setter2;
			setter15.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_233.Build, context);
			context.PopParent();
			setter15.Value = value6;
			context.PopParent();
			controlTheme.Add(setter14);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter16 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter17 = setter2;
			setter17.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TreeViewItemBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			style3.Add(setter16);
			Setter setter18 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter19 = setter2;
			setter19.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TreeViewItemBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style3.Add(setter18);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter20 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter21 = setter2;
			setter21.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TreeViewItemForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style5.Add(setter20);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter22 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter23 = setter2;
			setter23.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TreeViewItemBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style7.Add(setter22);
			Setter setter24 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter25 = setter2;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TreeViewItemBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value11;
			context.PopParent();
			style7.Add(setter24);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter26 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter27 = setter2;
			setter27.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TreeViewItemForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value12;
			context.PopParent();
			style9.Add(setter26);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter28 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter29 = setter2;
			setter29.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("TreeViewItemBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value13;
			context.PopParent();
			style11.Add(setter28);
			Setter setter30 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter31 = setter2;
			setter31.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TreeViewItemBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value14;
			context.PopParent();
			style11.Add(setter30);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter32 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter33 = setter2;
			setter33.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TreeViewItemForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value15;
			context.PopParent();
			style13.Add(setter32);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter34 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter35 = setter2;
			setter35.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("TreeViewItemBackgroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value16;
			context.PopParent();
			style15.Add(setter34);
			Setter setter36 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter37 = setter2;
			setter37.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("TreeViewItemBorderBrushSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value17;
			context.PopParent();
			style15.Add(setter36);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter38 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter39 = setter2;
			setter39.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("TreeViewItemForegroundSelected");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value18;
			context.PopParent();
			style17.Add(setter38);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter40 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter41 = setter2;
			setter41.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("TreeViewItemBackgroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value19;
			context.PopParent();
			style19.Add(setter40);
			Setter setter42 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter43 = setter2;
			setter43.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("TreeViewItemBorderBrushSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value20;
			context.PopParent();
			style19.Add(setter42);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter44 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter45 = setter2;
			setter45.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("TreeViewItemForegroundSelectedPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value21;
			context.PopParent();
			style21.Add(setter44);
			context.PopParent();
			controlTheme.Add(style20);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Class(":pressed").Class(":selected")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover");
			Setter setter46 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter47 = setter2;
			setter47.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("TreeViewItemBackgroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value22;
			context.PopParent();
			style23.Add(setter46);
			Setter setter48 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter49 = setter2;
			setter49.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("TreeViewItemBorderBrushSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value23;
			context.PopParent();
			style23.Add(setter48);
			context.PopParent();
			controlTheme.Add(style22);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":pressed").Class(":selected")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Class(":pointerover")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter50 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter51 = setter2;
			setter51.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("TreeViewItemForegroundSelectedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value24;
			context.PopParent();
			style25.Add(setter50);
			context.PopParent();
			controlTheme.Add(style24);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":disabled").Class(":selected")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot");
			Setter setter52 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter53 = setter2;
			setter53.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("TreeViewItemBackgroundSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter53.Value = value25;
			context.PopParent();
			style27.Add(setter52);
			Setter setter54 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter55 = setter2;
			setter55.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("TreeViewItemBorderBrushSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter55.Value = value26;
			context.PopParent();
			style27.Add(setter54);
			context.PopParent();
			controlTheme.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Class(":disabled").Class(":selected")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_LayoutRoot")
				.Child()
				.OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter56 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter57 = setter2;
			setter57.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("TreeViewItemForegroundSelectedDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value27;
			context.PopParent();
			style29.Add(setter56);
			context.PopParent();
			controlTheme.Add(style28);
			Style style30 = new Style();
			style30.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_ExpandCollapseChevron");
			Setter setter58 = new Setter();
			setter58.Property = Visual.IsVisibleProperty;
			setter58.Value = false;
			style30.Add(setter58);
			controlTheme.Add(style30);
			Style style31 = (style = new Style());
			context.PushParent(style);
			Style style32 = style;
			style32.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(Panel))
				.Name("PART_ExpandCollapseChevronContainer");
			Setter setter59 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter60 = setter2;
			setter60.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TreeViewItemExpandCollapseChevronSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value28 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter60.Value = value28;
			context.PopParent();
			style32.Add(setter59);
			context.PopParent();
			controlTheme.Add(style31);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_235
	{
		private class XamlClosure_236
		{
			private class DynamicSetters_237
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(Popup P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Popup.PlacementTargetProperty, binding);
						return;
					}
					if (P_2 is Control)
					{
						Control value = (Control)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Popup.PlacementTargetProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Control value = (Control)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Popup.PlacementTargetProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(32.0, GridUnitType.Pixel)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "Background";
				service = border5;
				context.AvaloniaNameScope.Register("Background", service);
				border5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				border5.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border5.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border5.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ComboBoxThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(minWidthProperty, binding);
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children2 = grid3.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children2.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "HighlightBackground";
				service = border9;
				context.AvaloniaNameScope.Register("HighlightBackground", service);
				border9.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				border9.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ComboBoxBackgroundUnfocused");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(backgroundProperty, binding2);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ComboBoxBackgroundBorderBrushUnfocused");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderBrushProperty, binding3);
				border9.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border9.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border9.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children3 = grid3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children3.Add(textBlock2);
				textBlock.Name = "PlaceholderTextBlock";
				service = textBlock;
				context.AvaloniaNameScope.Register("PlaceholderTextBlock", service);
				textBlock.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				textBlock.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ComboBox.HorizontalContentAlignmentProperty).ProvideValue());
				textBlock.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ComboBox.VerticalContentAlignmentProperty).ProvideValue());
				textBlock.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBlock.Bind(TextBlock.TextProperty, new TemplateBinding(ComboBox.PlaceholderTextProperty).ProvideValue());
				textBlock.Bind(TextBlock.ForegroundProperty, new TemplateBinding(ComboBox.PlaceholderForegroundProperty).ProvideValue());
				textBlock.Bind(Visual.IsVisibleProperty, new TemplateBinding(ComboBox.SelectionBoxItemProperty)
				{
					Converter = ObjectConverters.IsNull
				}.ProvideValue());
				((ISupportInitialize)textBlock).EndInit();
				Controls children4 = grid3.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children4.Add(contentControl2);
				contentControl.Name = "ContentPresenter";
				service = contentControl;
				context.AvaloniaNameScope.Register("ContentPresenter", service);
				DynamicSetters_237.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ComboBox.SelectionBoxItemProperty).ProvideValue());
				contentControl.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ItemsControl.ItemTemplateProperty).ProvideValue());
				contentControl.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				contentControl.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentControl.Bind(ContentControl.HorizontalContentAlignmentProperty, new TemplateBinding(ComboBox.HorizontalContentAlignmentProperty).ProvideValue());
				contentControl.Bind(ContentControl.VerticalContentAlignmentProperty, new TemplateBinding(ComboBox.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentControl).EndInit();
				Controls children5 = grid3.Children;
				Border border10;
				Border border11 = (border10 = new Border());
				((ISupportInitialize)border11).BeginInit();
				children5.Add(border11);
				border10.Name = "DropDownOverlay";
				service = border10;
				context.AvaloniaNameScope.Register("DropDownOverlay", service);
				border10.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				border10.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				border10.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				border10.SetValue(Layoutable.WidthProperty, 30.0, BindingPriority.Template);
				border10.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				border10.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				((ISupportInitialize)border10).EndInit();
				Controls children6 = grid3.Children;
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				children6.Add(pathIcon2);
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				pathIcon3.Name = "DropDownGlyph";
				service = pathIcon3;
				context.AvaloniaNameScope.Register("DropDownGlyph", service);
				pathIcon3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				pathIcon3.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 10.0, 0.0), BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> foregroundProperty = TemplatedControl.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ComboBoxDropDownGlyphForeground");
				context.ProvideTargetProperty = TemplatedControl.ForegroundProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon3.Bind(foregroundProperty, binding4);
				pathIcon3.SetValue(PathIcon.DataProperty, Geometry.Parse("M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				Controls children7 = grid3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children7.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(ComboBox.IsDropDownOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StyledProperty<double> minWidthProperty2 = Layoutable.MinWidthProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EWidth_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension binding5 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(minWidthProperty2, binding5);
				popup3.Bind(Layoutable.MaxHeightProperty, new TemplateBinding(ComboBox.MaxDropDownHeightProperty).ProvideValue());
				ResolveByNameExtension resolveByNameExtension = new ResolveByNameExtension("Background");
				context.ProvideTargetProperty = Popup.PlacementTargetProperty;
				object? obj = resolveByNameExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_237.DynamicSetter_2(popup3, BindingPriority.Template, obj);
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.SetValue(Popup.InheritsTransformProperty, value: true, BindingPriority.Template);
				Border border12;
				Border border13 = (border12 = new Border());
				((ISupportInitialize)border13).BeginInit();
				popup3.Child = border13;
				Border border14 = (border3 = border12);
				context.PushParent(border3);
				Border border15 = border3;
				border15.Name = "PopupBorder";
				service = border15;
				context.AvaloniaNameScope.Register("PopupBorder", service);
				StyledProperty<IBrush?> backgroundProperty2 = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ComboBoxDropDownBackground");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding6 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border15.Bind(backgroundProperty2, binding6);
				StyledProperty<IBrush?> borderBrushProperty2 = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ComboBoxDropDownBorderBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding7 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border15.Bind(borderBrushProperty2, binding7);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ComboBoxDropdownBorderThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding8 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border15.Bind(borderThicknessProperty, binding8);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ComboBoxDropdownBorderPadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding9 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border15.Bind(paddingProperty, binding9);
				border15.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("OverlayCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding10 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border15.Bind(cornerRadiusProperty, binding10);
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border15.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				scrollViewer3.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer3.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				ItemsPresenter itemsPresenter3;
				ItemsPresenter itemsPresenter4 = (itemsPresenter3 = itemsPresenter);
				context.PushParent(itemsPresenter3);
				itemsPresenter3.Name = "PART_ItemsPresenter";
				service = itemsPresenter3;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ComboBoxDropdownContentMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding11 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsPresenter3.Bind(marginProperty, binding11);
				itemsPresenter3.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)itemsPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)border14).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ComboBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ComboBoxPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Control.FocusAdornerProperty;
			setter4.Value = null;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ComboBox.MaxDropDownHeightProperty;
			setter5.Value = 504.0;
			controlTheme.Add(setter5);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ComboBoxForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ComboBoxBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ComboBoxBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value4;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ComboBoxBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value5;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value6;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter16.Value = ScrollBarVisibility.Disabled;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter17.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter17);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ComboBoxMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = new Setter();
			setter20.Property = ComboBox.HorizontalContentAlignmentProperty;
			setter20.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter20);
			Setter setter21 = new Setter();
			setter21.Property = ComboBox.VerticalContentAlignmentProperty;
			setter21.Value = VerticalAlignment.Center;
			controlTheme.Add(setter21);
			Setter setter22 = new Setter();
			setter22.Property = Layoutable.HorizontalAlignmentProperty;
			setter22.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter22);
			Setter setter23 = new Setter();
			setter23.Property = Layoutable.VerticalAlignmentProperty;
			setter23.Value = VerticalAlignment.Top;
			controlTheme.Add(setter23);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value8;
			context.PopParent();
			controlTheme.Add(setter24);
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = ComboBox.PlaceholderForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ComboBoxPlaceHolderForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value9;
			context.PopParent();
			controlTheme.Add(setter26);
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value10 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_236.Build, context);
			context.PopParent();
			setter29.Value = value10;
			context.PopParent();
			controlTheme.Add(setter28);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ComboBoxBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value11;
			context.PopParent();
			style3.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ComboBoxBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value12;
			context.PopParent();
			style3.Add(setter32);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ComboBoxBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value13;
			context.PopParent();
			style5.Add(setter34);
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ComboBoxBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value14;
			context.PopParent();
			style5.Add(setter36);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Border))
				.Name("Background");
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value15;
			context.PopParent();
			style7.Add(setter38);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":focused").Class(":pressed");
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentControl))
				.Name("ContentPresenter");
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ComboBoxForegroundFocusedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value16;
			context.PopParent();
			style11.Add(setter40);
			context.PopParent();
			style9.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PlaceholderTextBlock");
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ComboBoxPlaceHolderForegroundFocusedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value17;
			context.PopParent();
			style13.Add(setter42);
			context.PopParent();
			style9.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(PathIcon))
				.Name("DropDownGlyph");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ComboBoxDropDownGlyphForegroundFocusedPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value18;
			context.PopParent();
			style15.Add(setter44);
			context.PopParent();
			style9.Add(style14);
			context.PopParent();
			controlTheme.Add(style8);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":focus-visible");
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("HighlightBackground");
			Setter setter46 = new Setter();
			setter46.Property = Visual.IsVisibleProperty;
			setter46.Value = true;
			style19.Add(setter46);
			Setter setter47 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter48 = setter;
			setter48.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ComboBoxBackgroundBorderBrushFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter48.Value = value19;
			context.PopParent();
			style19.Add(setter47);
			context.PopParent();
			style17.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentControl))
				.Name("ContentPresenter");
			Setter setter49 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter50 = setter;
			setter50.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ComboBoxForegroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter50.Value = value20;
			context.PopParent();
			style21.Add(setter49);
			context.PopParent();
			style17.Add(style20);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PlaceholderTextBlock");
			Setter setter51 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter52 = setter;
			setter52.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ComboBoxForegroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value21;
			context.PopParent();
			style23.Add(setter51);
			context.PopParent();
			style17.Add(style22);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(PathIcon))
				.Name("DropDownGlyph");
			Setter setter53 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter54 = setter;
			setter54.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ComboBoxDropDownGlyphForegroundFocused");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value22 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter54.Value = value22;
			context.PopParent();
			style25.Add(setter53);
			context.PopParent();
			style17.Add(style24);
			context.PopParent();
			controlTheme.Add(style16);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("Background");
			Setter setter55 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter56 = setter;
			setter56.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ComboBoxBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value23 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter56.Value = value23;
			context.PopParent();
			style29.Add(setter55);
			Setter setter57 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter58 = setter;
			setter58.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("ComboBoxBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter58.Value = value24;
			context.PopParent();
			style29.Add(setter57);
			context.PopParent();
			style27.Add(style28);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentControl))
				.Name("ContentPresenter");
			Setter setter59 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter60 = setter;
			setter60.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("ComboBoxForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter60.Value = value25;
			context.PopParent();
			style31.Add(setter59);
			context.PopParent();
			style27.Add(style30);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TextBlock))
				.Name("PlaceholderTextBlock");
			Setter setter61 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter62 = setter;
			setter62.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("ComboBoxForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter62.Value = value26;
			context.PopParent();
			style33.Add(setter61);
			context.PopParent();
			style27.Add(style32);
			Style style34 = (style = new Style());
			context.PushParent(style);
			Style style35 = style;
			style35.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(PathIcon))
				.Name("DropDownGlyph");
			Setter setter63 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter64 = setter;
			setter64.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("ComboBoxDropDownGlyphForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter64.Value = value27;
			context.PopParent();
			style35.Add(setter63);
			context.PopParent();
			style27.Add(style34);
			context.PopParent();
			controlTheme.Add(style26);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_238
	{
		private class XamlClosure_239
		{
			private class DynamicSetters_240
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border.Bind(Layoutable.MaxWidthProperty, new TemplateBinding(Layoutable.MaxWidthProperty).ProvideValue());
				border.Bind(Layoutable.MinHeightProperty, new TemplateBinding(Layoutable.MinHeightProperty).ProvideValue());
				border.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_240.DynamicSetter_1(scrollViewer3, BindingPriority.Template, obj);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				ItemsPresenter itemsPresenter3;
				ItemsPresenter itemsPresenter4 = (itemsPresenter3 = itemsPresenter);
				context.PushParent(itemsPresenter3);
				itemsPresenter3.Name = "PART_ItemsPresenter";
				service = itemsPresenter3;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter3.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutScrollerMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsPresenter3.Bind(marginProperty, binding);
				itemsPresenter3.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				itemsPresenter3.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)itemsPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ContextMenu);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("MenuFlyoutPresenterBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("MenuFlyoutPresenterBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("MenuFlyoutPresenterBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.MaxWidthProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("FlyoutThemeMaxWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("MenuFlyoutThemeMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("MenuFlyoutPresenterThemePadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = Layoutable.HorizontalAlignmentProperty;
			setter16.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter16);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TextBlock.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = new Setter();
			setter19.Property = TextBlock.FontWeightProperty;
			setter19.Value = FontWeight.Normal;
			controlTheme.Add(setter19);
			Setter setter20 = new Setter();
			setter20.Property = ContextMenu.WindowManagerAddShadowHintProperty;
			setter20.Value = false;
			controlTheme.Add(setter20);
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_239.Build, context);
			context.PopParent();
			setter22.Value = value9;
			context.PopParent();
			controlTheme.Add(setter21);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_241
	{
		private class XamlClosure_242
		{
			private class DynamicSetters_243
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, CompiledBindingExtension P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(StyledElement.DataContextProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.DataContextProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				dockPanel.SetValue(DockPanel.LastChildFillProperty, value: true, BindingPriority.Template);
				Controls children = dockPanel.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children.Add(contentControl2);
				ContentControl contentControl3;
				ContentControl contentControl4 = (contentControl3 = contentControl);
				context.PushParent(contentControl3);
				contentControl3.Name = "InlineDataValidationContentControl";
				service = contentControl3;
				context.AvaloniaNameScope.Register("InlineDataValidationContentControl", service);
				contentControl3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 4.0, 0.0, 0.0), BindingPriority.Template);
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.ErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ContentControl.ContentProperty;
				CompiledBindingExtension compiledBindingExtension2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_243.DynamicSetter_1(contentControl3, BindingPriority.Template, compiledBindingExtension2);
				contentControl3.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(DataValidationErrors.ErrorTemplateProperty).ProvideValue());
				DynamicSetters_243.DynamicSetter_2(contentControl3, BindingPriority.Template, new TemplateBinding(DataValidationErrors.OwnerProperty).ProvideValue());
				contentControl3.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.HasErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentControl3.Bind(isVisibleProperty, binding);
				context.PopParent();
				((ISupportInitialize)contentControl4).EndInit();
				Controls children2 = dockPanel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_243.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_244
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ItemsControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ItemsControl itemsControl = (ItemsControl)intermediateRoot;
				context.PushParent(itemsControl);
				StyledProperty<IBrush?> foregroundProperty = TemplatedControl.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
				context.ProvideTargetProperty = TemplatedControl.ForegroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsControl.Bind(foregroundProperty, binding);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsControl.Bind(itemsSourceProperty, binding2);
				Styles styles = itemsControl.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(TextBlock));
				Setter setter = new Setter();
				setter.Property = TextBlock.TextWrappingProperty;
				setter.Value = TextWrapping.Wrap;
				style.Add(setter);
				styles.Add(style);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DataValidationErrors);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(DataValidationErrors);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_242.Build, context);
			context.PopParent();
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = DataValidationErrors.ErrorTemplateProperty;
			DataTemplate dataTemplate;
			DataTemplate value2 = (dataTemplate = new DataTemplate());
			context.PushParent(dataTemplate);
			dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_244.Build, context);
			context.PopParent();
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_245
	{
		private class XamlClosure_246
		{
			private class DynamicSetters_247
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, CompiledBindingExtension P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(StyledElement.DataContextProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.DataContextProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				dockPanel.SetValue(DockPanel.LastChildFillProperty, value: true, BindingPriority.Template);
				Controls children = dockPanel.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children.Add(contentControl2);
				ContentControl contentControl3;
				ContentControl contentControl4 = (contentControl3 = contentControl);
				context.PushParent(contentControl3);
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.ErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ContentControl.ContentProperty;
				CompiledBindingExtension compiledBindingExtension2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_247.DynamicSetter_1(contentControl3, BindingPriority.Template, compiledBindingExtension2);
				contentControl3.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(DataValidationErrors.ErrorTemplateProperty).ProvideValue());
				DynamicSetters_247.DynamicSetter_2(contentControl3, BindingPriority.Template, new TemplateBinding(DataValidationErrors.OwnerProperty).ProvideValue());
				contentControl3.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.HasErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentControl3.Bind(isVisibleProperty, binding);
				context.PopParent();
				((ISupportInitialize)contentControl4).EndInit();
				Controls children2 = dockPanel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_247.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_248
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				panel.Name = "PART_InlineErrorTemplatePanel";
				service = panel;
				context.AvaloniaNameScope.Register("PART_InlineErrorTemplatePanel", service);
				panel.Background = new ImmutableSolidColorBrush(16777215u);
				Styles styles = panel.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(Panel)).Name("PART_InlineErrorTemplatePanel");
				Setter setter = new Setter();
				setter.Property = Layoutable.MarginProperty;
				setter.Value = new Thickness(8.0, 0.0, 8.0, 0.0);
				style.Add(setter);
				styles.Add(style);
				Styles styles2 = panel.Styles;
				Style style2;
				Style item = (style2 = new Style());
				context.PushParent(style2);
				style2.Selector = ((Selector?)null).OfType(typeof(Panel)).Name("PART_InlineErrorTemplatePanel").Descendant()
					.OfType(typeof(ToolTip));
				Setter setter2;
				Setter setter3 = (setter2 = new Setter());
				context.PushParent(setter2);
				setter2.Property = TemplatedControl.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter2.Value = value;
				context.PopParent();
				style2.Add(setter3);
				context.PopParent();
				styles2.Add(item);
				Styles styles3 = panel.Styles;
				Style style3 = new Style();
				style3.Selector = ((Selector?)null).OfType(typeof(Panel)).Name("PART_InlineErrorTemplatePanel").Descendant()
					.OfType(typeof(ToolTip))
					.Descendant()
					.OfType(typeof(TextBlock));
				Setter setter4 = new Setter();
				setter4.Property = TextBlock.TextWrappingProperty;
				setter4.Value = TextWrapping.Wrap;
				style3.Add(setter4);
				styles3.Add(style3);
				ItemsControl itemsControl;
				ItemsControl itemsControl2 = (itemsControl = new ItemsControl());
				((ISupportInitialize)itemsControl2).BeginInit();
				ToolTip.SetTip(panel, itemsControl2);
				ItemsControl itemsControl3;
				ItemsControl itemsControl4 = (itemsControl3 = itemsControl);
				context.PushParent(itemsControl3);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsControl3.Bind(itemsSourceProperty, binding);
				context.PopParent();
				((ISupportInitialize)itemsControl4).EndInit();
				Controls children = panel.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Width = 14.0;
				path3.Height = 14.0;
				path3.Data = Geometry.Parse("M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2");
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding2);
				path3.StrokeThickness = 2.0;
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DataValidationErrors);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(DataValidationErrors);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_246.Build, context);
			context.PopParent();
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = DataValidationErrors.ErrorTemplateProperty;
			DataTemplate dataTemplate;
			DataTemplate value2 = (dataTemplate = new DataTemplate());
			context.PushParent(dataTemplate);
			dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_248.Build, context);
			context.PopParent();
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_249
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ListBoxItem);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension(typeof(ListBoxItem));
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DatePickerFlyoutPresenterItemPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = ContentControl.VerticalContentAlignmentProperty;
			setter4.Value = VerticalAlignment.Center;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter5.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected");
			Setter setter6 = new Setter();
			setter6.Property = InputElement.IsHitTestVisibleProperty;
			setter6.Value = false;
			style3.Add(setter6);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("PressedBackground");
			Setter setter7 = new Setter();
			setter7.Property = Shape.FillProperty;
			setter7.Value = new ImmutableSolidColorBrush(16777215u);
			style4.Add(setter7);
			style3.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter8 = new Setter();
			setter8.Property = ContentPresenter.BackgroundProperty;
			setter8.Value = new ImmutableSolidColorBrush(16777215u);
			style6.Add(setter8);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SystemControlForegroundBaseHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style6.Add(setter9);
			context.PopParent();
			style3.Add(style5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class("MonthItem");
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerFlyoutPresenterMonthPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style8.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter13.Value = HorizontalAlignment.Left;
			style8.Add(setter13);
			context.PopParent();
			controlTheme.Add(style7);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_250
	{
		private class XamlClosure_251
		{
			private class DynamicSetters_252
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				border.Child = contentPresenter2;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("ContentPresenter", service);
				contentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<IBrush?> borderBrushProperty = ContentPresenter.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimePickerFlyoutButtonBorderBrush");
				context.ProvideTargetProperty = ContentPresenter.BorderBrushProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(borderBrushProperty, binding);
				StyledProperty<Thickness> borderThicknessProperty = ContentPresenter.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DateTimeFlyoutButtonBorderThickness");
				context.ProvideTargetProperty = ContentPresenter.BorderThicknessProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(borderThicknessProperty, binding2);
				DynamicSetters_252.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				StyledProperty<IBrush?> foregroundProperty = ContentPresenter.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SystemControlHighlightAltBaseHighBrush");
				context.ProvideTargetProperty = ContentPresenter.ForegroundProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(foregroundProperty, binding3);
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimePickerFlyoutButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.HeightProperty;
			setter4.Value = 22.0;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter5.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = ContentControl.VerticalContentAlignmentProperty;
			setter6.Value = VerticalAlignment.Center;
			controlTheme.Add(setter6);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_251.Build, context);
			context.PopParent();
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DateTimePickerFlyoutButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style3.Add(setter9);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DateTimePickerFlyoutButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value4;
			context.PopParent();
			style3.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DateTimePickerFlyoutButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value5;
			context.PopParent();
			style3.Add(setter13);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DateTimePickerFlyoutButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style5.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DateTimePickerFlyoutButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			style5.Add(setter17);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("DateTimePickerFlyoutButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value8;
			context.PopParent();
			style5.Add(setter19);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_253
	{
		private class XamlClosure_254
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Viewbox();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Viewbox viewbox = (Viewbox)intermediateRoot;
				context.PushParent(viewbox);
				viewbox.Height = 10.0;
				viewbox.Width = 10.0;
				viewbox.HorizontalAlignment = HorizontalAlignment.Center;
				viewbox.VerticalAlignment = VerticalAlignment.Center;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(RepeatButton), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding);
				path3.StrokeThickness = 1.0;
				path3.Data = Geometry.Parse("M 0,9 L 9,0 L 18,9");
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentDateTimePickerButton");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Setter setter = new Setter();
			setter.Property = Layoutable.VerticalAlignmentProperty;
			setter.Value = VerticalAlignment.Top;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.HeightProperty;
			setter2.Value = 22.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.FocusableProperty;
			setter4.Value = false;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlBackgroundChromeMediumLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			controlTheme.Add(setter8);
			Setter setter9 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter10 = setter5;
			setter10.Property = ContentControl.ContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_254.Build, context);
			context.PopParent();
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_255
	{
		private class XamlClosure_256
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Viewbox();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Viewbox viewbox = (Viewbox)intermediateRoot;
				context.PushParent(viewbox);
				viewbox.Height = 10.0;
				viewbox.Width = 10.0;
				viewbox.HorizontalAlignment = HorizontalAlignment.Center;
				viewbox.VerticalAlignment = VerticalAlignment.Center;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(RepeatButton), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding);
				path3.StrokeThickness = 1.0;
				path3.Data = Geometry.Parse("M 0,0 L 9,9 L 18,0");
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentDateTimePickerButton");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			Setter setter = new Setter();
			setter.Property = Layoutable.VerticalAlignmentProperty;
			setter.Value = VerticalAlignment.Bottom;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.HeightProperty;
			setter2.Value = 22.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.FocusableProperty;
			setter4.Value = false;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SystemControlBackgroundChromeMediumLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			controlTheme.Add(setter8);
			Setter setter9 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter10 = setter5;
			setter10.Property = ContentControl.ContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_256.Build, context);
			context.PopParent();
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_257
	{
		private class XamlClosure_258
		{
			private class DynamicSetters_259
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_259.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = Visual.RenderTransformProperty;
			setter3.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.TemplateProperty;
			setter4.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_258.Build, context)
			};
			controlTheme.Add(setter4);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Visual.RenderTransformProperty;
			setter6.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style3.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DatePickerButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			style5.Add(setter7);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style5.Add(setter9);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style7.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style7.Add(setter13);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DatePickerButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_260
	{
		private class XamlClosure_261
		{
			private class DynamicSetters_262
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "LayoutRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Controls children = grid5.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				button3.Name = "PART_FlyoutButton";
				service = button3;
				context.AvaloniaNameScope.Register("PART_FlyoutButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentDatePickerFlyoutButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_262.DynamicSetter_1(button3, BindingPriority.Template, obj);
				button3.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				button3.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				button3.Bind(InputElement.IsEnabledProperty, new TemplateBinding(InputElement.IsEnabledProperty).ProvideValue());
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DatePickerThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(minWidthProperty, binding);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(maxWidthProperty, binding2);
				button3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button3.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				button3.Content = grid7;
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_ButtonContentGrid";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_ButtonContentGrid", service);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 5;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(78.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(132.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(78.0, GridUnitType.Star)));
				grid9.ColumnDefinitions = columnDefinitions;
				Controls children2 = grid9.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children2.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				TextBlock textBlock5 = textBlock3;
				textBlock5.Name = "PART_DayTextBlock";
				service = textBlock5;
				context.AvaloniaNameScope.Register("PART_DayTextBlock", service);
				textBlock5.SetValue(TextBlock.TextProperty, "day", BindingPriority.Template);
				textBlock5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock5.Bind(paddingProperty, binding3);
				textBlock5.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children3 = grid9.Children;
				TextBlock textBlock6;
				TextBlock textBlock7 = (textBlock6 = new TextBlock());
				((ISupportInitialize)textBlock7).BeginInit();
				children3.Add(textBlock7);
				TextBlock textBlock8 = (textBlock3 = textBlock6);
				context.PushParent(textBlock3);
				TextBlock textBlock9 = textBlock3;
				textBlock9.Name = "PART_MonthTextBlock";
				service = textBlock9;
				context.AvaloniaNameScope.Register("PART_MonthTextBlock", service);
				textBlock9.SetValue(TextBlock.TextProperty, "month", BindingPriority.Template);
				textBlock9.SetValue(TextBlock.TextAlignmentProperty, TextAlignment.Left, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty2 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerHostMonthPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock9.Bind(paddingProperty2, binding4);
				textBlock9.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock8).EndInit();
				Controls children4 = grid9.Children;
				TextBlock textBlock10;
				TextBlock textBlock11 = (textBlock10 = new TextBlock());
				((ISupportInitialize)textBlock11).BeginInit();
				children4.Add(textBlock11);
				TextBlock textBlock12 = (textBlock3 = textBlock10);
				context.PushParent(textBlock3);
				TextBlock textBlock13 = textBlock3;
				textBlock13.Name = "PART_YearTextBlock";
				service = textBlock13;
				context.AvaloniaNameScope.Register("PART_YearTextBlock", service);
				textBlock13.SetValue(TextBlock.TextProperty, "year", BindingPriority.Template);
				textBlock13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty3 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DatePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock13.Bind(paddingProperty3, binding5);
				textBlock13.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock12).EndInit();
				Controls children5 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children5.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "PART_FirstSpacer";
				service = rectangle5;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DatePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding6);
				rectangle5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children6 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children6.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_SecondSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("DatePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children7 = grid5.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children7.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.PlacementProperty, PlacementMode.Bottom, BindingPriority.Template);
				DatePickerPresenter datePickerPresenter;
				DatePickerPresenter datePickerPresenter2 = (datePickerPresenter = new DatePickerPresenter());
				((ISupportInitialize)datePickerPresenter2).BeginInit();
				popup.Child = datePickerPresenter2;
				datePickerPresenter.Name = "PART_PickerPresenter";
				service = datePickerPresenter;
				context.AvaloniaNameScope.Register("PART_PickerPresenter", service);
				((ISupportInitialize)datePickerPresenter).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DatePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.BorderThicknessProperty;
			setter10.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter10);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			controlTheme.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.HorizontalAlignmentProperty;
			setter13.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.VerticalAlignmentProperty;
			setter14.Value = VerticalAlignment.Center;
			controlTheme.Add(setter14);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_261.Build, context);
			context.PopParent();
			setter16.Value = value6;
			context.PopParent();
			controlTheme.Add(setter15);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Rectangle));
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DatePickerSpacerFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			style3.Add(setter17);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":hasnodate").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton")
				.Descendant()
				.OfType(typeof(TextBlock));
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TextControlPlaceholderForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value8;
			context.PopParent();
			style5.Add(setter19);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value9;
			context.PopParent();
			style7.Add(setter21);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_263
	{
		private class XamlClosure_264
		{
			private class DynamicSetters_265
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimeFlyoutBorderPadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.SetValue(Layoutable.MaxHeightProperty, 398.0, BindingPriority.Template);
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "ContentRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid5.RowDefinitions = rowDefinitions;
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_PickerContainer";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_PickerContainer", service);
				Styles styles = grid9.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(DateTimePickerPanel)).Child().OfType(typeof(ListBoxItem));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = StyledElement.ThemeProperty;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentDateTimePickerItem");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				object? value = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value;
				context.PopParent();
				style.Add(setter2);
				context.PopParent();
				styles.Add(item);
				Controls children2 = grid9.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children2.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Panel panel5 = panel3;
				panel5.Name = "PART_MonthHost";
				service = panel5;
				context.AvaloniaNameScope.Register("PART_MonthHost", service);
				Controls children3 = panel5.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children3.Add(scrollViewer2);
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer5 = scrollViewer3;
				scrollViewer5.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer5.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel;
				DateTimePickerPanel dateTimePickerPanel2 = (dateTimePickerPanel = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel2).BeginInit();
				scrollViewer5.Content = dateTimePickerPanel2;
				DateTimePickerPanel dateTimePickerPanel3;
				DateTimePickerPanel dateTimePickerPanel4 = (dateTimePickerPanel3 = dateTimePickerPanel);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel5 = dateTimePickerPanel3;
				dateTimePickerPanel5.Name = "PART_MonthSelector";
				service = dateTimePickerPanel5;
				context.AvaloniaNameScope.Register("PART_MonthSelector", service);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Month, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel5.Bind(itemHeightProperty, binding2);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				Controls children4 = panel5.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children4.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_MonthUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_MonthUpButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children5 = panel5.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children5.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_MonthDownButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_MonthDownButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children6 = grid9.Children;
				Panel panel6;
				Panel panel7 = (panel6 = new Panel());
				((ISupportInitialize)panel7).BeginInit();
				children6.Add(panel7);
				Panel panel8 = (panel3 = panel6);
				context.PushParent(panel3);
				Panel panel9 = panel3;
				panel9.Name = "PART_DayHost";
				service = panel9;
				context.AvaloniaNameScope.Register("PART_DayHost", service);
				Controls children7 = panel9.Children;
				ScrollViewer scrollViewer6;
				ScrollViewer scrollViewer7 = (scrollViewer6 = new ScrollViewer());
				((ISupportInitialize)scrollViewer7).BeginInit();
				children7.Add(scrollViewer7);
				ScrollViewer scrollViewer8 = (scrollViewer3 = scrollViewer6);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer9 = scrollViewer3;
				scrollViewer9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer9.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel6;
				DateTimePickerPanel dateTimePickerPanel7 = (dateTimePickerPanel6 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel7).BeginInit();
				scrollViewer9.Content = dateTimePickerPanel7;
				DateTimePickerPanel dateTimePickerPanel8 = (dateTimePickerPanel3 = dateTimePickerPanel6);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel9 = dateTimePickerPanel3;
				dateTimePickerPanel9.Name = "PART_DaySelector";
				service = dateTimePickerPanel9;
				context.AvaloniaNameScope.Register("PART_DaySelector", service);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Day, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty2 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel9.Bind(itemHeightProperty2, binding3);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel8).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer8).EndInit();
				Controls children8 = panel9.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children8.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_DayUpButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_DayUpButton", service);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Controls children9 = panel9.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children9.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_DayDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_DayDownButton", service);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj4);
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)panel8).EndInit();
				Controls children10 = grid9.Children;
				Panel panel10;
				Panel panel11 = (panel10 = new Panel());
				((ISupportInitialize)panel11).BeginInit();
				children10.Add(panel11);
				Panel panel12 = (panel3 = panel10);
				context.PushParent(panel3);
				Panel panel13 = panel3;
				panel13.Name = "PART_YearHost";
				service = panel13;
				context.AvaloniaNameScope.Register("PART_YearHost", service);
				Controls children11 = panel13.Children;
				ScrollViewer scrollViewer10;
				ScrollViewer scrollViewer11 = (scrollViewer10 = new ScrollViewer());
				((ISupportInitialize)scrollViewer11).BeginInit();
				children11.Add(scrollViewer11);
				ScrollViewer scrollViewer12 = (scrollViewer3 = scrollViewer10);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer13 = scrollViewer3;
				scrollViewer13.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer13.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel10;
				DateTimePickerPanel dateTimePickerPanel11 = (dateTimePickerPanel10 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel11).BeginInit();
				scrollViewer13.Content = dateTimePickerPanel11;
				DateTimePickerPanel dateTimePickerPanel12 = (dateTimePickerPanel3 = dateTimePickerPanel10);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel13 = dateTimePickerPanel3;
				dateTimePickerPanel13.Name = "PART_YearSelector";
				service = dateTimePickerPanel13;
				context.AvaloniaNameScope.Register("PART_YearSelector", service);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Year, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty3 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel13.Bind(itemHeightProperty3, binding4);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel12).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer12).EndInit();
				Controls children12 = panel13.Children;
				RepeatButton repeatButton18;
				RepeatButton repeatButton19 = (repeatButton18 = new RepeatButton());
				((ISupportInitialize)repeatButton19).BeginInit();
				children12.Add(repeatButton19);
				RepeatButton repeatButton20 = (repeatButton3 = repeatButton18);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton21 = repeatButton3;
				repeatButton21.Name = "PART_YearUpButton";
				service = repeatButton21;
				context.AvaloniaNameScope.Register("PART_YearUpButton", service);
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton21, BindingPriority.Template, obj5);
				context.PopParent();
				((ISupportInitialize)repeatButton20).EndInit();
				Controls children13 = panel13.Children;
				RepeatButton repeatButton22;
				RepeatButton repeatButton23 = (repeatButton22 = new RepeatButton());
				((ISupportInitialize)repeatButton23).BeginInit();
				children13.Add(repeatButton23);
				RepeatButton repeatButton24 = (repeatButton3 = repeatButton22);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton25 = repeatButton3;
				repeatButton25.Name = "PART_YearDownButton";
				service = repeatButton25;
				context.AvaloniaNameScope.Register("PART_YearDownButton", service);
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj6 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(repeatButton25, BindingPriority.Template, obj6);
				context.PopParent();
				((ISupportInitialize)repeatButton24).EndInit();
				context.PopParent();
				((ISupportInitialize)panel12).EndInit();
				Controls children14 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children14.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "HighlightRect";
				service = rectangle5;
				context.AvaloniaNameScope.Register("HighlightRect", service);
				rectangle5.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				rectangle5.SetValue(Visual.ZIndexProperty, -1, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DatePickerFlyoutPresenterHighlightFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding5);
				rectangle5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnSpanProperty, 5, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DatePickerFlyoutPresenterHighlightHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(heightProperty, binding6);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children15 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children15.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_FirstSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("DatePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty, binding8);
				rectangle9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children16 = grid9.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children16.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.Name = "PART_SecondSpacer";
				service = rectangle13;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("DatePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(fillProperty3, binding9);
				rectangle13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(widthProperty2, binding10);
				rectangle13.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children17 = grid5.Children;
				Grid grid10;
				Grid grid11 = (grid10 = new Grid());
				((ISupportInitialize)grid11).BeginInit();
				children17.Add(grid11);
				Grid grid12 = (grid3 = grid10);
				context.PushParent(grid3);
				Grid grid13 = grid3;
				grid13.Name = "AcceptDismissGrid";
				service = grid13;
				context.AvaloniaNameScope.Register("AcceptDismissGrid", service);
				grid13.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid13.ColumnDefinitions = columnDefinitions;
				Controls children18 = grid13.Children;
				Rectangle rectangle14;
				Rectangle rectangle15 = (rectangle14 = new Rectangle());
				((ISupportInitialize)rectangle15).BeginInit();
				children18.Add(rectangle15);
				Rectangle rectangle16 = (rectangle3 = rectangle14);
				context.PushParent(rectangle3);
				Rectangle rectangle17 = rectangle3;
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(heightProperty2, binding11);
				rectangle17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty4 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("DatePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(fillProperty4, binding12);
				rectangle17.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle16).EndInit();
				Controls children19 = grid13.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children19.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_AcceptButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_AcceptButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("FluentDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj7 = staticResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(button5, BindingPriority.Template, obj7);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("DatePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(heightProperty3, binding13);
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding14);
				path5.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path5.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0.5,8.5 5,13.5 15.5,3"), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children20 = grid13.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children20.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_DismissButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_DismissButton", service);
				button9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension9 = new StaticResourceExtension("FluentDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj8 = staticResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(button9, BindingPriority.Template, obj8);
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("DatePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding15 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(heightProperty4, binding15);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding16 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(strokeProperty2, binding16);
				path9.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path9.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				path9.SetValue(Path.DataProperty, Geometry.Parse("M2,2 14,14 M2,14 14 2"), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DatePickerPresenter);
			Setter setter = new Setter();
			setter.Property = Layoutable.WidthProperty;
			setter.Value = 296.0;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 296.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MaxHeightProperty;
			setter3.Value = 398.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.FontWeightProperty;
			setter4.Value = FontWeight.Normal;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter9 = setter5;
			setter9.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerFlyoutPresenterBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter11 = setter5;
			setter11.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerFlyoutPresenterBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter13 = setter5;
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DateTimeFlyoutBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter15 = setter5;
			setter15.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter17 = setter5;
			setter17.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_264.Build, context);
			context.PopParent();
			setter17.Value = value6;
			context.PopParent();
			controlTheme.Add(setter16);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel));
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pointerover").Descendant()
				.OfType(typeof(RepeatButton));
			Setter setter18 = new Setter();
			setter18.Property = Visual.IsVisibleProperty;
			setter18.Value = true;
			style2.Add(setter18);
			style.Add(style2);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_266
	{
		private class XamlClosure_267
		{
			private class DynamicSetters_268
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_268.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = Visual.RenderTransformProperty;
			setter3.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.TemplateProperty;
			setter4.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_267.Build, context)
			};
			controlTheme.Add(setter4);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Visual.RenderTransformProperty;
			setter6.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style3.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TimePickerButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			style5.Add(setter7);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style5.Add(setter9);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style7.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style7.Add(setter13);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_269
	{
		private class XamlClosure_270
		{
			private class DynamicSetters_271
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "LayoutRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Controls children = grid5.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				button3.Name = "PART_FlyoutButton";
				service = button3;
				context.AvaloniaNameScope.Register("PART_FlyoutButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentTimePickerFlyoutButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_271.DynamicSetter_1(button3, BindingPriority.Template, obj);
				button3.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				button3.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				button3.Bind(InputElement.IsEnabledProperty, new TemplateBinding(InputElement.IsEnabledProperty).ProvideValue());
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TimePickerThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(minWidthProperty, binding);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(maxWidthProperty, binding2);
				button3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				button3.Content = grid7;
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_FlyoutButtonContentGrid";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_FlyoutButtonContentGrid", service);
				Controls children2 = grid9.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children2.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "PART_FirstPickerHost";
				service = border5;
				context.AvaloniaNameScope.Register("PART_FirstPickerHost", service);
				border5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				border5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				border5.Child = textBlock2;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				TextBlock textBlock5 = textBlock3;
				textBlock5.Name = "PART_HourTextBlock";
				service = textBlock5;
				context.AvaloniaNameScope.Register("PART_HourTextBlock", service);
				textBlock5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock5.Bind(paddingProperty, binding3);
				textBlock5.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children3 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "PART_FirstColumnDivider";
				service = rectangle5;
				context.AvaloniaNameScope.Register("PART_FirstColumnDivider", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding4);
				rectangle5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(widthProperty, binding5);
				rectangle5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children4 = grid9.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children4.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "PART_SecondPickerHost";
				service = border9;
				context.AvaloniaNameScope.Register("PART_SecondPickerHost", service);
				border9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				border9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock6;
				TextBlock textBlock7 = (textBlock6 = new TextBlock());
				((ISupportInitialize)textBlock7).BeginInit();
				border9.Child = textBlock7;
				TextBlock textBlock8 = (textBlock3 = textBlock6);
				context.PushParent(textBlock3);
				TextBlock textBlock9 = textBlock3;
				textBlock9.Name = "PART_MinuteTextBlock";
				service = textBlock9;
				context.AvaloniaNameScope.Register("PART_MinuteTextBlock", service);
				textBlock9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty2 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock9.Bind(paddingProperty2, binding6);
				textBlock9.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock8).EndInit();
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children5 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children5.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_SecondColumnDivider";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_SecondColumnDivider", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TimePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty2, binding8);
				rectangle9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children6 = grid9.Children;
				Border border10;
				Border border11 = (border10 = new Border());
				((ISupportInitialize)border11).BeginInit();
				children6.Add(border11);
				Border border12 = (border3 = border10);
				context.PushParent(border3);
				Border border13 = border3;
				border13.Name = "PART_ThirdPickerHost";
				service = border13;
				context.AvaloniaNameScope.Register("PART_ThirdPickerHost", service);
				border13.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				border13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border13.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock10;
				TextBlock textBlock11 = (textBlock10 = new TextBlock());
				((ISupportInitialize)textBlock11).BeginInit();
				border13.Child = textBlock11;
				TextBlock textBlock12 = (textBlock3 = textBlock10);
				context.PushParent(textBlock3);
				TextBlock textBlock13 = textBlock3;
				textBlock13.Name = "PART_PeriodTextBlock";
				service = textBlock13;
				context.AvaloniaNameScope.Register("PART_PeriodTextBlock", service);
				textBlock13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty3 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock13.Bind(paddingProperty3, binding9);
				textBlock13.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock12).EndInit();
				context.PopParent();
				((ISupportInitialize)border12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children7 = grid5.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children7.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.PlacementProperty, PlacementMode.Bottom, BindingPriority.Template);
				TimePickerPresenter timePickerPresenter;
				TimePickerPresenter timePickerPresenter2 = (timePickerPresenter = new TimePickerPresenter());
				((ISupportInitialize)timePickerPresenter2).BeginInit();
				popup.Child = timePickerPresenter2;
				timePickerPresenter.Name = "PART_PickerPresenter";
				service = timePickerPresenter;
				context.AvaloniaNameScope.Register("PART_PickerPresenter", service);
				((ISupportInitialize)timePickerPresenter).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TimePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_270.Build, context);
			context.PopParent();
			setter17.Value = value7;
			context.PopParent();
			controlTheme.Add(setter16);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Rectangle));
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TimePickerSpacerFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style3.Add(setter18);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":hasnotime").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton")
				.Descendant()
				.OfType(typeof(TextBlock));
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TextControlPlaceholderForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style5.Add(setter20);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style7.Add(setter22);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_272
	{
		private class XamlClosure_273
		{
			private class DynamicSetters_274
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimeFlyoutBorderPadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.SetValue(Layoutable.MaxHeightProperty, 398.0, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "ContentPanel";
				service = grid5;
				context.AvaloniaNameScope.Register("ContentPanel", service);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid5.RowDefinitions = rowDefinitions;
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_PickerContainer";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_PickerContainer", service);
				Controls children2 = grid9.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children2.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Panel panel5 = panel3;
				panel5.Name = "PART_HourHost";
				service = panel5;
				context.AvaloniaNameScope.Register("PART_HourHost", service);
				panel5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				Controls children3 = panel5.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children3.Add(scrollViewer2);
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer5 = scrollViewer3;
				scrollViewer5.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer5.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel;
				DateTimePickerPanel dateTimePickerPanel2 = (dateTimePickerPanel = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel2).BeginInit();
				scrollViewer5.Content = dateTimePickerPanel2;
				DateTimePickerPanel dateTimePickerPanel3;
				DateTimePickerPanel dateTimePickerPanel4 = (dateTimePickerPanel3 = dateTimePickerPanel);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel5 = dateTimePickerPanel3;
				dateTimePickerPanel5.Name = "PART_HourSelector";
				service = dateTimePickerPanel5;
				context.AvaloniaNameScope.Register("PART_HourSelector", service);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Hour, BindingPriority.Template);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel5.Bind(itemHeightProperty, binding2);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				Controls children4 = panel5.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children4.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_HourUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_HourUpButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children5 = panel5.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children5.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_HourDownButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_HourDownButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children6 = grid9.Children;
				Panel panel6;
				Panel panel7 = (panel6 = new Panel());
				((ISupportInitialize)panel7).BeginInit();
				children6.Add(panel7);
				Panel panel8 = (panel3 = panel6);
				context.PushParent(panel3);
				Panel panel9 = panel3;
				panel9.Name = "PART_MinuteHost";
				service = panel9;
				context.AvaloniaNameScope.Register("PART_MinuteHost", service);
				panel9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				Controls children7 = panel9.Children;
				ScrollViewer scrollViewer6;
				ScrollViewer scrollViewer7 = (scrollViewer6 = new ScrollViewer());
				((ISupportInitialize)scrollViewer7).BeginInit();
				children7.Add(scrollViewer7);
				ScrollViewer scrollViewer8 = (scrollViewer3 = scrollViewer6);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer9 = scrollViewer3;
				scrollViewer9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer9.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel6;
				DateTimePickerPanel dateTimePickerPanel7 = (dateTimePickerPanel6 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel7).BeginInit();
				scrollViewer9.Content = dateTimePickerPanel7;
				DateTimePickerPanel dateTimePickerPanel8 = (dateTimePickerPanel3 = dateTimePickerPanel6);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel9 = dateTimePickerPanel3;
				dateTimePickerPanel9.Name = "PART_MinuteSelector";
				service = dateTimePickerPanel9;
				context.AvaloniaNameScope.Register("PART_MinuteSelector", service);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Minute, BindingPriority.Template);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty2 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel9.Bind(itemHeightProperty2, binding3);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel8).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer8).EndInit();
				Controls children8 = panel9.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children8.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_MinuteUpButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_MinuteUpButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Controls children9 = panel9.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children9.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_MinuteDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_MinuteDownButton", service);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj4);
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)panel8).EndInit();
				Controls children10 = grid9.Children;
				Panel panel10;
				Panel panel11 = (panel10 = new Panel());
				((ISupportInitialize)panel11).BeginInit();
				children10.Add(panel11);
				Panel panel12 = (panel3 = panel10);
				context.PushParent(panel3);
				Panel panel13 = panel3;
				panel13.Name = "PART_PeriodHost";
				service = panel13;
				context.AvaloniaNameScope.Register("PART_PeriodHost", service);
				panel13.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				Controls children11 = panel13.Children;
				ScrollViewer scrollViewer10;
				ScrollViewer scrollViewer11 = (scrollViewer10 = new ScrollViewer());
				((ISupportInitialize)scrollViewer11).BeginInit();
				children11.Add(scrollViewer11);
				ScrollViewer scrollViewer12 = (scrollViewer3 = scrollViewer10);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer13 = scrollViewer3;
				scrollViewer13.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer13.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel10;
				DateTimePickerPanel dateTimePickerPanel11 = (dateTimePickerPanel10 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel11).BeginInit();
				scrollViewer13.Content = dateTimePickerPanel11;
				DateTimePickerPanel dateTimePickerPanel12 = (dateTimePickerPanel3 = dateTimePickerPanel10);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel13 = dateTimePickerPanel3;
				dateTimePickerPanel13.Name = "PART_PeriodSelector";
				service = dateTimePickerPanel13;
				context.AvaloniaNameScope.Register("PART_PeriodSelector", service);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.TimePeriod, BindingPriority.Template);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: false, BindingPriority.Template);
				StyledProperty<double> itemHeightProperty3 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel13.Bind(itemHeightProperty3, binding4);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel12).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer12).EndInit();
				Controls children12 = panel13.Children;
				RepeatButton repeatButton18;
				RepeatButton repeatButton19 = (repeatButton18 = new RepeatButton());
				((ISupportInitialize)repeatButton19).BeginInit();
				children12.Add(repeatButton19);
				RepeatButton repeatButton20 = (repeatButton3 = repeatButton18);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton21 = repeatButton3;
				repeatButton21.Name = "PART_PeriodUpButton";
				service = repeatButton21;
				context.AvaloniaNameScope.Register("PART_PeriodUpButton", service);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("FluentDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton21, BindingPriority.Template, obj5);
				context.PopParent();
				((ISupportInitialize)repeatButton20).EndInit();
				Controls children13 = panel13.Children;
				RepeatButton repeatButton22;
				RepeatButton repeatButton23 = (repeatButton22 = new RepeatButton());
				((ISupportInitialize)repeatButton23).BeginInit();
				children13.Add(repeatButton23);
				RepeatButton repeatButton24 = (repeatButton3 = repeatButton22);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton25 = repeatButton3;
				repeatButton25.Name = "PART_PeriodDownButton";
				service = repeatButton25;
				context.AvaloniaNameScope.Register("PART_PeriodDownButton", service);
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("FluentDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj6 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(repeatButton25, BindingPriority.Template, obj6);
				context.PopParent();
				((ISupportInitialize)repeatButton24).EndInit();
				context.PopParent();
				((ISupportInitialize)panel12).EndInit();
				Controls children14 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children14.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "HighlightRect";
				service = rectangle5;
				context.AvaloniaNameScope.Register("HighlightRect", service);
				rectangle5.SetValue(Visual.ZIndexProperty, -1, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerFlyoutPresenterHighlightFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding5);
				rectangle5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnSpanProperty, 5, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TimePickerFlyoutPresenterHighlightHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(heightProperty, binding6);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children15 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children15.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_FirstSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TimePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty, binding8);
				rectangle9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children16 = grid9.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children16.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.Name = "PART_SecondSpacer";
				service = rectangle13;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TimePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(fillProperty3, binding9);
				rectangle13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(widthProperty2, binding10);
				rectangle13.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children17 = grid5.Children;
				Grid grid10;
				Grid grid11 = (grid10 = new Grid());
				((ISupportInitialize)grid11).BeginInit();
				children17.Add(grid11);
				Grid grid12 = (grid3 = grid10);
				context.PushParent(grid3);
				Grid grid13 = grid3;
				grid13.Name = "AcceptDismissGrid";
				service = grid13;
				context.AvaloniaNameScope.Register("AcceptDismissGrid", service);
				grid13.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid13.ColumnDefinitions = columnDefinitions;
				Controls children18 = grid13.Children;
				Rectangle rectangle14;
				Rectangle rectangle15 = (rectangle14 = new Rectangle());
				((ISupportInitialize)rectangle15).BeginInit();
				children18.Add(rectangle15);
				Rectangle rectangle16 = (rectangle3 = rectangle14);
				context.PushParent(rectangle3);
				Rectangle rectangle17 = rectangle3;
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(heightProperty2, binding11);
				rectangle17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty4 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("TimePickerFlyoutPresenterSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(fillProperty4, binding12);
				rectangle17.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle16).EndInit();
				Controls children19 = grid13.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children19.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_AcceptButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_AcceptButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("FluentDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj7 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(button5, BindingPriority.Template, obj7);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TimePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(heightProperty3, binding13);
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding14);
				path5.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path5.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0.5,8.5 5,13.5 15.5,3"), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children20 = grid13.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children20.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_DismissButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_DismissButton", service);
				button9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("FluentDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj8 = staticResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_274.DynamicSetter_1(button9, BindingPriority.Template, obj8);
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TimePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding15 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(heightProperty4, binding15);
				button9.SetValue(TemplatedControl.FontSizeProperty, 16.0, BindingPriority.Template);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding16 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(strokeProperty2, binding16);
				path9.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path9.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				path9.SetValue(Path.DataProperty, Geometry.Parse("M2,2 14,14 M2,14 14 2"), BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TimePickerPresenter);
			Setter setter = new Setter();
			setter.Property = Layoutable.WidthProperty;
			setter.Value = 242.0;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 242.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MaxHeightProperty;
			setter3.Value = 398.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.FontWeightProperty;
			setter4.Value = FontWeight.Normal;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TimePickerFlyoutPresenterBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter9 = setter5;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerFlyoutPresenterBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter11 = setter5;
			setter11.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DateTimeFlyoutBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter13 = setter5;
			setter13.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("OverlayCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter15 = setter5;
			setter15.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_273.Build, context);
			context.PopParent();
			setter15.Value = value5;
			context.PopParent();
			controlTheme.Add(setter14);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel));
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pointerover").Descendant()
				.OfType(typeof(RepeatButton));
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style2.Add(setter16);
			style.Add(style2);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_275
	{
		private class XamlClosure_276
		{
			private class DynamicSetters_277
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "RootBorder";
				service = border;
				context.AvaloniaNameScope.Register("RootBorder", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.Name = "InnerGrid";
				service = grid3;
				context.AvaloniaNameScope.Register("InnerGrid", service);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				Controls children = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				DynamicSetters_277.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = grid3.Children;
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				children2.Add(pathIcon2);
				PathIcon pathIcon3;
				PathIcon pathIcon4 = (pathIcon3 = pathIcon);
				context.PushParent(pathIcon3);
				pathIcon3.Name = "DropDownGlyph";
				service = pathIcon3;
				context.AvaloniaNameScope.Register("DropDownGlyph", service);
				pathIcon3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				pathIcon3.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 10.0, 0.0), BindingPriority.Template);
				pathIcon3.SetValue(PathIcon.DataProperty, Geometry.Parse("M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"), BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				pathIcon3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> foregroundProperty = TemplatedControl.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ComboBoxDropDownGlyphForeground");
				context.ProvideTargetProperty = TemplatedControl.ForegroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				pathIcon3.Bind(foregroundProperty, binding);
				context.PopParent();
				((ISupportInitialize)pathIcon4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DropDownButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ButtonBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ButtonForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ButtonBorderBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ButtonPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DropDownButtonMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.HorizontalAlignmentProperty;
			setter14.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.VerticalAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter16.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = ContentControl.VerticalContentAlignmentProperty;
			setter17.Value = VerticalAlignment.Center;
			controlTheme.Add(setter17);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TemplatedControl.CornerRadiusProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ControlCornerRadius");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			controlTheme.Add(setter18);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value8 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_276.Build, context);
			context.PopParent();
			setter21.Value = value8;
			context.PopParent();
			controlTheme.Add(setter20);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ButtonBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value9;
			context.PopParent();
			style3.Add(setter22);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ButtonBorderBrushPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value10;
			context.PopParent();
			style3.Add(setter24);
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ButtonForegroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value11;
			context.PopParent();
			style3.Add(setter26);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Visual.RenderTransformProperty;
			setter29.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "scale(0.98)");
			context.PopParent();
			style5.Add(setter28);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ButtonBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value12;
			context.PopParent();
			style7.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ButtonBorderBrushPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value13;
			context.PopParent();
			style7.Add(setter32);
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ButtonForegroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value14;
			context.PopParent();
			style7.Add(setter34);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ButtonBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value15;
			context.PopParent();
			style9.Add(setter36);
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ButtonBorderBrushDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value16;
			context.PopParent();
			style9.Add(setter38);
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value17;
			context.PopParent();
			style9.Add(setter40);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(PathIcon))
				.Name("DropDownGlyph");
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ButtonForegroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value18;
			context.PopParent();
			style11.Add(setter42);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_278
	{
		private class XamlClosure_279
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "FocusTarget";
				service = border;
				context.AvaloniaNameScope.Register("FocusTarget", service);
				border.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -10.0, 0.0, -10.0), BindingPriority.Template);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5;
				Border border6 = (border5 = border3);
				context.PushParent(border5);
				border5.Name = "TrackBackground";
				service = border5;
				context.AvaloniaNameScope.Register("TrackBackground", service);
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(cornerRadiusProperty, binding);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SliderTrackThemeHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(heightProperty, binding2);
				border5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border6).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_279.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_280
	{
		private class XamlClosure_281
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "FocusTarget";
				service = border;
				context.AvaloniaNameScope.Register("FocusTarget", service);
				border.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -10.0, 0.0, -10.0), BindingPriority.Template);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				Border border5;
				Border border6 = (border5 = border3);
				context.PushParent(border5);
				border5.Name = "TrackBackground";
				service = border5;
				context.AvaloniaNameScope.Register("TrackBackground", service);
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ControlCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(cornerRadiusProperty, binding);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SliderTrackThemeHeight");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(widthProperty, binding2);
				border5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)border6).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_281.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_282
	{
		private class XamlClosure_283
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty = Border.CornerRadiusProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SliderThumbCornerRadius");
				context.ProvideTargetProperty = Border.CornerRadiusProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(cornerRadiusProperty, binding);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Thumb);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_283.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_284
	{
		private class XamlClosure_285
		{
			private class DynamicSetters_286
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(StyledElement.DataContextProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.DataContextProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				dataValidationErrors.Content = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border3.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "SliderContainer";
				service = grid5;
				context.AvaloniaNameScope.Register("SliderContainer", service);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SliderContainerBackground");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid5.Bind(backgroundProperty, binding);
				Styles styles = grid5.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(TickBar));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = TickBar.ReservedSpaceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_Track").Property(Track.ThumbProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value;
				context.PopParent();
				style.Add(setter2);
				context.PopParent();
				styles.Add(item);
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "HorizontalTemplate";
				service = grid9;
				context.AvaloniaNameScope.Register("HorizontalTemplate", service);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SliderHorizontalHeight");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid9.Bind(minHeightProperty, binding2);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid9.ColumnDefinitions = columnDefinitions;
				RowDefinitions rowDefinitions = grid9.RowDefinitions;
				RowDefinition rowDefinition;
				RowDefinition item2 = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target = rowDefinition;
				StyledProperty<GridLength> heightProperty = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SliderPreContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(heightProperty, binding3);
				context.PopParent();
				rowDefinitions.Add(item2);
				RowDefinitions rowDefinitions2 = grid9.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions2.Add(rowDefinition2);
				RowDefinitions rowDefinitions3 = grid9.RowDefinitions;
				RowDefinition item3 = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target2 = rowDefinition;
				StyledProperty<GridLength> heightProperty2 = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SliderPostContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target2.Bind(heightProperty2, binding4);
				context.PopParent();
				rowDefinitions3.Add(item3);
				Controls children2 = grid9.Children;
				TickBar tickBar;
				TickBar tickBar2 = (tickBar = new TickBar());
				((ISupportInitialize)tickBar2).BeginInit();
				children2.Add(tickBar2);
				TickBar tickBar3;
				TickBar tickBar4 = (tickBar3 = tickBar);
				context.PushParent(tickBar3);
				TickBar tickBar5 = tickBar3;
				tickBar5.Name = "TopTickBar";
				service = tickBar5;
				context.AvaloniaNameScope.Register("TopTickBar", service);
				tickBar5.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				tickBar5.Bind(TickBar.TicksProperty, new TemplateBinding(Slider.TicksProperty).ProvideValue());
				tickBar5.Bind(TickBar.TickFrequencyProperty, new TemplateBinding(Slider.TickFrequencyProperty).ProvideValue());
				tickBar5.Bind(TickBar.OrientationProperty, new TemplateBinding(Slider.OrientationProperty).ProvideValue());
				tickBar5.Bind(TickBar.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				tickBar5.Bind(TickBar.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SliderOutsideTickBarThemeHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar5.Bind(heightProperty3, binding5);
				tickBar5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 4.0), BindingPriority.Template);
				tickBar5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Bottom, BindingPriority.Template);
				tickBar5.SetValue(TickBar.PlacementProperty, TickBarPlacement.Top, BindingPriority.Template);
				tickBar5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = TickBar.FillProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SliderTickBarFill");
				context.ProvideTargetProperty = TickBar.FillProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar5.Bind(fillProperty, binding6);
				context.PopParent();
				((ISupportInitialize)tickBar4).EndInit();
				Controls children3 = grid9.Children;
				TickBar tickBar6;
				TickBar tickBar7 = (tickBar6 = new TickBar());
				((ISupportInitialize)tickBar7).BeginInit();
				children3.Add(tickBar7);
				TickBar tickBar8 = (tickBar3 = tickBar6);
				context.PushParent(tickBar3);
				TickBar tickBar9 = tickBar3;
				tickBar9.Name = "BottomTickBar";
				service = tickBar9;
				context.AvaloniaNameScope.Register("BottomTickBar", service);
				tickBar9.SetValue(Grid.RowProperty, 2, BindingPriority.Template);
				tickBar9.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				tickBar9.Bind(TickBar.TicksProperty, new TemplateBinding(Slider.TicksProperty).ProvideValue());
				tickBar9.Bind(TickBar.TickFrequencyProperty, new TemplateBinding(Slider.TickFrequencyProperty).ProvideValue());
				tickBar9.Bind(TickBar.OrientationProperty, new TemplateBinding(Slider.OrientationProperty).ProvideValue());
				tickBar9.Bind(TickBar.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				tickBar9.Bind(TickBar.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("SliderOutsideTickBarThemeHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar9.Bind(heightProperty4, binding7);
				tickBar9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 4.0, 0.0, 0.0), BindingPriority.Template);
				tickBar9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				tickBar9.SetValue(TickBar.PlacementProperty, TickBarPlacement.Bottom, BindingPriority.Template);
				tickBar9.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = TickBar.FillProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SliderTickBarFill");
				context.ProvideTargetProperty = TickBar.FillProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar9.Bind(fillProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)tickBar8).EndInit();
				Controls children4 = grid9.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children4.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.Name = "PART_Track";
				service = track3;
				context.AvaloniaNameScope.Register("PART_Track", service);
				track3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				track3.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				track3.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track3.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track3.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				track3.Bind(Track.IsDirectionReversedProperty, new TemplateBinding(Slider.IsDirectionReversedProperty).ProvideValue());
				track3.SetValue(Track.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton2, BindingPriority.Template);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_DecreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentSliderHorizontalRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_286.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				repeatButton5.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_IncreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentSliderHorizontalRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_286.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				repeatButton9.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				repeatButton9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				thumb3.Name = "thumb";
				service = thumb3;
				context.AvaloniaNameScope.Register("thumb", service);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SliderHorizontalThumbWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(widthProperty, binding9);
				StyledProperty<double> heightProperty5 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SliderHorizontalThumbHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(heightProperty5, binding10);
				thumb3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				thumb3.SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty2 = TemplatedControl.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SliderThumbBackground");
				context.ProvideTargetProperty = TemplatedControl.BackgroundProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(backgroundProperty2, binding11);
				thumb3.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentSliderThumbTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_286.DynamicSetter_1(thumb3, BindingPriority.Template, obj3);
				DynamicSetters_286.DynamicSetter_2(thumb3, BindingPriority.Template, new TemplateBinding(RangeBase.ValueProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_287
		{
			private class DynamicSetters_288
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(StyledElement.DataContextProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.DataContextProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				dataValidationErrors.Content = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border3.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "SliderContainer";
				service = grid5;
				context.AvaloniaNameScope.Register("SliderContainer", service);
				grid5.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SliderContainerBackground");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid5.Bind(backgroundProperty, binding);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Styles styles = grid5.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(TickBar));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = TickBar.ReservedSpaceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_Track").Property(Track.ThumbProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value;
				context.PopParent();
				style.Add(setter2);
				context.PopParent();
				styles.Add(item);
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "VerticalTemplate";
				service = grid9;
				context.AvaloniaNameScope.Register("VerticalTemplate", service);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SliderVerticalWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				grid9.Bind(minWidthProperty, binding2);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 3;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid9.RowDefinitions = rowDefinitions;
				ColumnDefinitions columnDefinitions = grid9.ColumnDefinitions;
				ColumnDefinition columnDefinition;
				ColumnDefinition item2 = (columnDefinition = new ColumnDefinition());
				context.PushParent(columnDefinition);
				ColumnDefinition target = columnDefinition;
				StyledProperty<GridLength> widthProperty = ColumnDefinition.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SliderPreContentMargin");
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(widthProperty, binding3);
				context.PopParent();
				columnDefinitions.Add(item2);
				ColumnDefinitions columnDefinitions2 = grid9.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid9.ColumnDefinitions;
				ColumnDefinition item3 = (columnDefinition = new ColumnDefinition());
				context.PushParent(columnDefinition);
				ColumnDefinition target2 = columnDefinition;
				StyledProperty<GridLength> widthProperty2 = ColumnDefinition.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SliderPostContentMargin");
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target2.Bind(widthProperty2, binding4);
				context.PopParent();
				columnDefinitions3.Add(item3);
				Controls children2 = grid9.Children;
				TickBar tickBar;
				TickBar tickBar2 = (tickBar = new TickBar());
				((ISupportInitialize)tickBar2).BeginInit();
				children2.Add(tickBar2);
				TickBar tickBar3;
				TickBar tickBar4 = (tickBar3 = tickBar);
				context.PushParent(tickBar3);
				TickBar tickBar5 = tickBar3;
				tickBar5.Name = "LeftTickBar";
				service = tickBar5;
				context.AvaloniaNameScope.Register("LeftTickBar", service);
				tickBar5.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				tickBar5.Bind(TickBar.TicksProperty, new TemplateBinding(Slider.TicksProperty).ProvideValue());
				tickBar5.Bind(TickBar.TickFrequencyProperty, new TemplateBinding(Slider.TickFrequencyProperty).ProvideValue());
				tickBar5.Bind(TickBar.OrientationProperty, new TemplateBinding(Slider.OrientationProperty).ProvideValue());
				tickBar5.Bind(TickBar.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				tickBar5.Bind(TickBar.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				StyledProperty<double> widthProperty3 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SliderOutsideTickBarThemeHeight");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar5.Bind(widthProperty3, binding5);
				tickBar5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 4.0, 0.0), BindingPriority.Template);
				tickBar5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				tickBar5.SetValue(TickBar.PlacementProperty, TickBarPlacement.Left, BindingPriority.Template);
				tickBar5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = TickBar.FillProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SliderTickBarFill");
				context.ProvideTargetProperty = TickBar.FillProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar5.Bind(fillProperty, binding6);
				context.PopParent();
				((ISupportInitialize)tickBar4).EndInit();
				Controls children3 = grid9.Children;
				TickBar tickBar6;
				TickBar tickBar7 = (tickBar6 = new TickBar());
				((ISupportInitialize)tickBar7).BeginInit();
				children3.Add(tickBar7);
				TickBar tickBar8 = (tickBar3 = tickBar6);
				context.PushParent(tickBar3);
				TickBar tickBar9 = tickBar3;
				tickBar9.Name = "RightTickBar";
				service = tickBar9;
				context.AvaloniaNameScope.Register("RightTickBar", service);
				tickBar9.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				tickBar9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				tickBar9.Bind(TickBar.TicksProperty, new TemplateBinding(Slider.TicksProperty).ProvideValue());
				tickBar9.Bind(TickBar.TickFrequencyProperty, new TemplateBinding(Slider.TickFrequencyProperty).ProvideValue());
				tickBar9.Bind(TickBar.OrientationProperty, new TemplateBinding(Slider.OrientationProperty).ProvideValue());
				tickBar9.Bind(TickBar.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				tickBar9.Bind(TickBar.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				StyledProperty<double> widthProperty4 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("SliderOutsideTickBarThemeHeight");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar9.Bind(widthProperty4, binding7);
				tickBar9.SetValue(Layoutable.MarginProperty, new Thickness(4.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				tickBar9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				tickBar9.SetValue(TickBar.PlacementProperty, TickBarPlacement.Right, BindingPriority.Template);
				tickBar9.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = TickBar.FillProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SliderTickBarFill");
				context.ProvideTargetProperty = TickBar.FillProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				tickBar9.Bind(fillProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)tickBar8).EndInit();
				Controls children4 = grid9.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children4.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.Name = "PART_Track";
				service = track3;
				context.AvaloniaNameScope.Register("PART_Track", service);
				track3.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				track3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				track3.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				track3.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track3.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track3.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				track3.Bind(Track.IsDirectionReversedProperty, new TemplateBinding(Slider.IsDirectionReversedProperty).ProvideValue());
				track3.SetValue(Track.OrientationProperty, Orientation.Vertical, BindingPriority.Template);
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton2, BindingPriority.Template);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_DecreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentSliderVerticalRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_288.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				repeatButton5.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_IncreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				repeatButton9.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("FluentSliderVerticalRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_288.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				repeatButton9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				thumb3.Name = "SliderThumb";
				service = thumb3;
				context.AvaloniaNameScope.Register("SliderThumb", service);
				StyledProperty<double> widthProperty5 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SliderVerticalThumbWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(widthProperty5, binding9);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SliderVerticalThumbHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(heightProperty, binding10);
				thumb3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				thumb3.SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty2 = TemplatedControl.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SliderThumbBackground");
				context.ProvideTargetProperty = TemplatedControl.BackgroundProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				thumb3.Bind(backgroundProperty2, binding11);
				thumb3.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("FluentSliderThumbTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_288.DynamicSetter_1(thumb3, BindingPriority.Template, obj3);
				DynamicSetters_288.DynamicSetter_2(thumb3, BindingPriority.Template, new TemplateBinding(RangeBase.ValueProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Slider);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SliderTrackFill");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SliderBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SliderTrackValueFill");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ControlContentThemeFontSize");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_285.Build, context);
			context.PopParent();
			setter11.Value = value5;
			context.PopParent();
			style3.Add(setter10);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_287.Build, context);
			context.PopParent();
			setter13.Value = value6;
			context.PopParent();
			style5.Add(setter12);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = new Style();
			style6.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.TopLeft).Template()
					.OfType(typeof(TickBar))
					.Name("LeftTickBar"),
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.Outside).Template()
					.OfType(typeof(TickBar))
					.Name("LeftTickBar")
			});
			Setter setter14 = new Setter();
			setter14.Property = Visual.IsVisibleProperty;
			setter14.Value = true;
			style6.Add(setter14);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.TopLeft).Template()
					.OfType(typeof(TickBar))
					.Name("TopTickBar"),
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.Outside).Template()
					.OfType(typeof(TickBar))
					.Name("TopTickBar")
			});
			Setter setter15 = new Setter();
			setter15.Property = Visual.IsVisibleProperty;
			setter15.Value = true;
			style7.Add(setter15);
			controlTheme.Add(style7);
			Style style8 = new Style();
			style8.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.BottomRight).Template()
					.OfType(typeof(TickBar))
					.Name("BottomTickBar"),
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.Outside).Template()
					.OfType(typeof(TickBar))
					.Name("BottomTickBar")
			});
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style8.Add(setter16);
			controlTheme.Add(style8);
			Style style9 = new Style();
			style9.Selector = Selectors.Or(new List<Selector>
			{
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.BottomRight).Template()
					.OfType(typeof(TickBar))
					.Name("RightTickBar"),
				((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Slider.TickPlacementProperty, (object?)TickPlacement.Outside).Template()
					.OfType(typeof(TickBar))
					.Name("RightTickBar")
			});
			Setter setter17 = new Setter();
			setter17.Property = Visual.IsVisibleProperty;
			setter17.Value = true;
			style9.Add(setter17);
			controlTheme.Add(style9);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":pointerover");
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Grid))
				.Name("SliderContainer");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SliderContainerBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			style13.Add(setter18);
			context.PopParent();
			style11.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_IncreaseButton");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("SliderTrackFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value8;
			context.PopParent();
			style15.Add(setter20);
			context.PopParent();
			style11.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb));
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("SliderThumbBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value9;
			context.PopParent();
			style17.Add(setter22);
			context.PopParent();
			style11.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Grid))
				.Name("SliderContainer");
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("SliderContainerBackgroundPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value10;
			context.PopParent();
			style19.Add(setter24);
			context.PopParent();
			style11.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_DecreaseButton");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("SliderTrackValueFillPointerOver");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value11;
			context.PopParent();
			style21.Add(setter26);
			context.PopParent();
			style11.Add(style20);
			context.PopParent();
			controlTheme.Add(style10);
			Style style22 = (style = new Style());
			context.PushParent(style);
			Style style23 = style;
			style23.Selector = ((Selector?)null).Nesting().Class(":pressed");
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Grid))
				.Name("SliderContainer");
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Panel.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("SliderContainerBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value12;
			context.PopParent();
			style25.Add(setter28);
			context.PopParent();
			style23.Add(style24);
			Style style26 = (style = new Style());
			context.PushParent(style);
			Style style27 = style;
			style27.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_DecreaseButton");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("SliderTrackValueFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value13;
			context.PopParent();
			style27.Add(setter30);
			context.PopParent();
			style23.Add(style26);
			Style style28 = (style = new Style());
			context.PushParent(style);
			Style style29 = style;
			style29.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_IncreaseButton");
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("SliderTrackFillPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value14;
			context.PopParent();
			style29.Add(setter32);
			context.PopParent();
			style23.Add(style28);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb));
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("SliderThumbBackgroundPressed");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value15;
			context.PopParent();
			style31.Add(setter34);
			context.PopParent();
			style23.Add(style30);
			context.PopParent();
			controlTheme.Add(style22);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Style style34 = (style = new Style());
			context.PushParent(style);
			Style style35 = style;
			style35.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_DecreaseButton");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("SliderTrackValueFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value16;
			context.PopParent();
			style35.Add(setter36);
			context.PopParent();
			style33.Add(style34);
			Style style36 = (style = new Style());
			context.PushParent(style);
			Style style37 = style;
			style37.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Name("PART_IncreaseButton");
			Setter setter38 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter39 = setter;
			setter39.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("SliderTrackFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter39.Value = value17;
			context.PopParent();
			style37.Add(setter38);
			context.PopParent();
			style33.Add(style36);
			Style style38 = (style = new Style());
			context.PushParent(style);
			Style style39 = style;
			style39.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb));
			Setter setter40 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter41 = setter;
			setter41.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("SliderThumbBackgroundDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter41.Value = value18;
			context.PopParent();
			style39.Add(setter40);
			context.PopParent();
			style33.Add(style38);
			Style style40 = (style = new Style());
			context.PushParent(style);
			Style style41 = style;
			style41.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TickBar));
			Setter setter42 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter43 = setter;
			setter43.Property = TickBar.FillProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("SliderTickBarFillDisabled");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter43.Value = value19;
			context.PopParent();
			style41.Add(setter42);
			context.PopParent();
			style33.Add(style40);
			context.PopParent();
			controlTheme.Add(style32);
			Style style42 = (style = new Style());
			context.PushParent(style);
			Style style43 = style;
			style43.Selector = ((Selector?)null).Nesting().Class(":error");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value20;
			context.PopParent();
			style43.Add(setter44);
			Style style44 = (style = new Style());
			context.PushParent(style);
			Style style45 = style;
			style45.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb));
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("SystemControlErrorTextForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value21;
			context.PopParent();
			style45.Add(setter46);
			context.PopParent();
			style43.Add(style44);
			context.PopParent();
			controlTheme.Add(style42);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_289
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			object service;
			if (P_0 != null)
			{
				service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MenuFlyout menuFlyout;
			MenuFlyout result = (menuFlyout = new MenuFlyout());
			context.PushParent(menuFlyout);
			menuFlyout.Placement = PlacementMode.Bottom;
			ItemCollection items = menuFlyout.Items;
			MenuItem menuItem;
			MenuItem menuItem2 = (menuItem = new MenuItem());
			((ISupportInitialize)menuItem2).BeginInit();
			items.Add(menuItem2);
			MenuItem menuItem3;
			MenuItem menuItem4 = (menuItem3 = menuItem);
			context.PushParent(menuItem3);
			menuItem3.Name = "SelectableTextBlockContextFlyoutCopyItem";
			service = menuItem3;
			context.AvaloniaNameScope.Register("SelectableTextBlockContextFlyoutCopyItem", service);
			menuItem3.Header = "Copy";
			StyledProperty<ICommand?> commandProperty = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(SelectableTextBlock), 0).Command("Copy", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ESelectableTextBlock_002BCopy_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem3.Bind(commandProperty, binding);
			StyledProperty<bool> isEnabledProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(SelectableTextBlock), 0).Property(SelectableTextBlock.CanCopyProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem3.Bind(isEnabledProperty, binding2);
			menuItem3.InputGesture = TextBox.CopyGesture;
			context.PopParent();
			((ISupportInitialize)menuItem4).EndInit();
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_290
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SelectableTextBlock);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = SelectableTextBlock.SelectionBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TextControlSelectionHighlightColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)InputElement.IsEnabledProperty, (object?)true);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.CursorProperty;
			setter4.Value = Cursor.Parse("IBeam");
			style.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Control.ContextFlyoutProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SelectableTextBlockContextFlyout");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	public class NamespaceInfo_003A_002FControls_002FUserControl_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Fluent", "Avalonia.Themes.Fluent")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FControls_002FUserControl_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FControls_002FUserControl_002Examl();
		}
	}

	private class XamlClosure_291
	{
		private class XamlClosure_292
		{
			private class DynamicSetters_293
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/UserControl.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Style)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_293.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/UserControl.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Style)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(UserControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_292.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	public class NamespaceInfo_003A_002FDensityStyles_002FCompact_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Fluent", "Avalonia.Themes.Fluent")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FDensityStyles_002FCompact_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FDensityStyles_002FCompact_002Examl();
		}
	}

	public class NamespaceInfo_003A_002FFluentTheme_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(4);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Fluent", "Avalonia.Themes.Fluent")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			dictionary.Add("fluent", new AvaloniaXamlIlXmlNamespaceInfo[1] { CreateNamespaceInfo("Avalonia.Themes.Fluent", (string)null) });
			dictionary.Add("accents", new AvaloniaXamlIlXmlNamespaceInfo[1] { CreateNamespaceInfo("Avalonia.Themes.Fluent.Accents", (string)null) });
			return dictionary;
		}

		static NamespaceInfo_003A_002FFluentTheme_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FFluentTheme_002Examl();
		}
	}

	static void Populate_003A_002FControls_002FUserControl_002Examl(IServiceProvider P_0, Style P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/UserControl.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		Style style;
		Style style2 = (style = P_1);
		context.PushParent(style);
		style.Selector = ((Selector?)null).Is(typeof(UserControl));
		((ResourceDictionary)style.Resources).AddDeferred((object)"FluentUserControl", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_291.Build, context));
		Setter setter;
		Setter setter2 = (setter = new Setter());
		context.PushParent(setter);
		setter.Property = StyledElement.ThemeProperty;
		StaticResourceExtension staticResourceExtension = new StaticResourceExtension("FluentUserControl");
		context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
		object? value = staticResourceExtension.ProvideValue(context);
		context.ProvideTargetProperty = null;
		setter.Value = value;
		context.PopParent();
		style.Add(setter2);
		context.PopParent();
		if (style2 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static Style Build_003A_002FControls_002FUserControl_002Examl(IServiceProvider P_0)
	{
		Style style = new Style();
		Populate_003A_002FControls_002FUserControl_002Examl(P_0, style);
		return style;
	}

	static void Populate_003A_002FDensityStyles_002FCompact_002Examl(IServiceProvider P_0, ResourceDictionary P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<ResourceDictionary> context = new CompiledAvaloniaXaml.XamlIlContext.Context<ResourceDictionary>(P_0, new object[1] { NamespaceInfo_003A_002FDensityStyles_002FCompact_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/DensityStyles/Compact.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		P_1.Add("ControlContentThemeFontSize", 14.0);
		P_1.Add("ContentControlFontSize", 14.0);
		P_1.Add("TextControlThemeMinHeight", 24.0);
		P_1.Add("TextControlThemeMinWidth", 32.0);
		P_1.Add("TextControlThemePadding", new Thickness(4.0, 2.0, 4.0, 2.0));
		P_1.Add("ListBoxItemPadding", new Thickness(4.0, 2.0, 4.0, 2.0));
		P_1.Add("ListViewItemMinHeight", 24.0);
		P_1.Add("ComboBoxItemThemePadding", new Thickness(11.0, 5.0, 11.0, 7.0));
		P_1.Add("MenuFlyoutItemThemePaddingNarrow", new Thickness(4.0, 4.0, 8.0, 4.0));
		P_1.Add("MenuBarItemPadding", new Thickness(5.0, 2.0, 5.0, 2.0));
		P_1.Add("TreeViewItemMinHeight", 24.0);
		P_1.Add("TimePickerHostPadding", new Thickness(0.0, 1.0, 0.0, 2.0));
		P_1.Add("DatePickerHostPadding", new Thickness(0.0, 1.0, 0.0, 2.0));
		P_1.Add("DatePickerHostMonthPadding", new Thickness(9.0, 0.0, 0.0, 1.0));
		P_1.Add("ComboBoxEditableTextPadding", new Thickness(10.0, 0.0, 30.0, 0.0));
		P_1.Add("ComboBoxMinHeight", 24.0);
		P_1.Add("ComboBoxPadding", new Thickness(12.0, 1.0, 0.0, 3.0));
		P_1.Add("NavigationViewItemOnLeftMinHeight", 32.0);
		P_1.Add("TabItemMinHeight", 28.0);
		P_1.Add("TabItemHeaderMargin", new Thickness(6.0, 0.0, 6.0, 0.0));
		P_1.Add("ButtonPadding", new Thickness(6.0, 4.0, 6.0, 4.0));
		if (P_1 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static ResourceDictionary Build_003A_002FDensityStyles_002FCompact_002Examl(IServiceProvider P_0)
	{
		ResourceDictionary resourceDictionary = new ResourceDictionary();
		Populate_003A_002FDensityStyles_002FCompact_002Examl(P_0, resourceDictionary);
		return resourceDictionary;
	}

	static void Populate_003A_002FAccents_002FBaseColorsPalette_002Examl(IServiceProvider P_0, ResourceDictionary P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<ResourceDictionary> context = new CompiledAvaloniaXaml.XamlIlContext.Context<ResourceDictionary>(P_0, new object[1] { NamespaceInfo_003A_002FAccents_002FBaseColorsPalette_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Accents/BaseColorsPalette.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		IDictionary<ThemeVariant, IThemeVariantProvider> themeDictionaries = P_1.ThemeDictionaries;
		ThemeVariant @default = ThemeVariant.Default;
		ResourceDictionary resourceDictionary = new ResourceDictionary();
		((IThemeVariantProvider)resourceDictionary).Key = ThemeVariant.Default;
		resourceDictionary.Add("SystemAltHighColor", Color.FromUInt32(uint.MaxValue));
		resourceDictionary.Add("SystemAltLowColor", Color.FromUInt32(872415231u));
		resourceDictionary.Add("SystemAltMediumColor", Color.FromUInt32(2583691263u));
		resourceDictionary.Add("SystemAltMediumHighColor", Color.FromUInt32(3439329279u));
		resourceDictionary.Add("SystemAltMediumLowColor", Color.FromUInt32(1728053247u));
		resourceDictionary.Add("SystemBaseHighColor", Color.FromUInt32(4278190080u));
		resourceDictionary.Add("SystemBaseLowColor", Color.FromUInt32(855638016u));
		resourceDictionary.Add("SystemBaseMediumColor", Color.FromUInt32(2566914048u));
		resourceDictionary.Add("SystemBaseMediumHighColor", Color.FromUInt32(3422552064u));
		resourceDictionary.Add("SystemBaseMediumLowColor", Color.FromUInt32(1711276032u));
		resourceDictionary.Add("SystemChromeAltLowColor", Color.FromUInt32(4279703319u));
		resourceDictionary.Add("SystemChromeBlackHighColor", Color.FromUInt32(4278190080u));
		resourceDictionary.Add("SystemChromeBlackLowColor", Color.FromUInt32(855638016u));
		resourceDictionary.Add("SystemChromeBlackMediumLowColor", Color.FromUInt32(1711276032u));
		resourceDictionary.Add("SystemChromeBlackMediumColor", Color.FromUInt32(3422552064u));
		resourceDictionary.Add("SystemChromeDisabledHighColor", Color.FromUInt32(4291611852u));
		resourceDictionary.Add("SystemChromeDisabledLowColor", Color.FromUInt32(4286216826u));
		resourceDictionary.Add("SystemChromeHighColor", Color.FromUInt32(4291611852u));
		resourceDictionary.Add("SystemChromeLowColor", Color.FromUInt32(4294111986u));
		resourceDictionary.Add("SystemChromeMediumColor", Color.FromUInt32(4293322470u));
		resourceDictionary.Add("SystemChromeMediumLowColor", Color.FromUInt32(4294111986u));
		resourceDictionary.Add("SystemChromeWhiteColor", Color.FromUInt32(uint.MaxValue));
		resourceDictionary.Add("SystemChromeGrayColor", Color.FromUInt32(4285953654u));
		resourceDictionary.Add("SystemListLowColor", Color.FromUInt32(419430400u));
		resourceDictionary.Add("SystemListMediumColor", Color.FromUInt32(855638016u));
		resourceDictionary.Add("SystemErrorTextColor", Color.FromUInt32(4291101952u));
		resourceDictionary.Add("SystemRegionColor", Color.FromUInt32(uint.MaxValue));
		resourceDictionary.Add("SystemRevealListLowColor", Color.FromUInt32(385875968u));
		resourceDictionary.Add("SystemRevealListMediumColor", Color.FromUInt32(771751936u));
		themeDictionaries.Add(@default, resourceDictionary);
		IDictionary<ThemeVariant, IThemeVariantProvider> themeDictionaries2 = P_1.ThemeDictionaries;
		ThemeVariant dark = ThemeVariant.Dark;
		ResourceDictionary resourceDictionary2 = new ResourceDictionary();
		((IThemeVariantProvider)resourceDictionary2).Key = ThemeVariant.Dark;
		resourceDictionary2.Add("SystemAltHighColor", Color.FromUInt32(4278190080u));
		resourceDictionary2.Add("SystemAltLowColor", Color.FromUInt32(855638016u));
		resourceDictionary2.Add("SystemAltMediumColor", Color.FromUInt32(2566914048u));
		resourceDictionary2.Add("SystemAltMediumHighColor", Color.FromUInt32(3422552064u));
		resourceDictionary2.Add("SystemAltMediumLowColor", Color.FromUInt32(1711276032u));
		resourceDictionary2.Add("SystemBaseHighColor", Color.FromUInt32(uint.MaxValue));
		resourceDictionary2.Add("SystemBaseLowColor", Color.FromUInt32(872415231u));
		resourceDictionary2.Add("SystemBaseMediumColor", Color.FromUInt32(2583691263u));
		resourceDictionary2.Add("SystemBaseMediumHighColor", Color.FromUInt32(3439329279u));
		resourceDictionary2.Add("SystemBaseMediumLowColor", Color.FromUInt32(1728053247u));
		resourceDictionary2.Add("SystemChromeAltLowColor", Color.FromUInt32(4294111986u));
		resourceDictionary2.Add("SystemChromeBlackHighColor", Color.FromUInt32(4278190080u));
		resourceDictionary2.Add("SystemChromeBlackLowColor", Color.FromUInt32(855638016u));
		resourceDictionary2.Add("SystemChromeBlackMediumLowColor", Color.FromUInt32(1711276032u));
		resourceDictionary2.Add("SystemChromeBlackMediumColor", Color.FromUInt32(3422552064u));
		resourceDictionary2.Add("SystemChromeDisabledHighColor", Color.FromUInt32(4281545523u));
		resourceDictionary2.Add("SystemChromeDisabledLowColor", Color.FromUInt32(4286940549u));
		resourceDictionary2.Add("SystemChromeHighColor", Color.FromUInt32(4285953654u));
		resourceDictionary2.Add("SystemChromeLowColor", Color.FromUInt32(4279703319u));
		resourceDictionary2.Add("SystemChromeMediumColor", Color.FromUInt32(4280229663u));
		resourceDictionary2.Add("SystemChromeMediumLowColor", Color.FromUInt32(4281019179u));
		resourceDictionary2.Add("SystemChromeWhiteColor", Color.FromUInt32(uint.MaxValue));
		resourceDictionary2.Add("SystemChromeGrayColor", Color.FromUInt32(4285953654u));
		resourceDictionary2.Add("SystemListLowColor", Color.FromUInt32(436207615u));
		resourceDictionary2.Add("SystemListMediumColor", Color.FromUInt32(872415231u));
		resourceDictionary2.Add("SystemErrorTextColor", Color.FromUInt32(4294963200u));
		resourceDictionary2.Add("SystemRegionColor", Color.FromUInt32(4278190080u));
		resourceDictionary2.Add("SystemRevealListLowColor", Color.FromUInt32(419430399u));
		resourceDictionary2.Add("SystemRevealListMediumColor", Color.FromUInt32(822083583u));
		themeDictionaries2.Add(dark, resourceDictionary2);
		if (P_1 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static ResourceDictionary Build_003A_002FAccents_002FBaseColorsPalette_002Examl(IServiceProvider P_0)
	{
		ResourceDictionary resourceDictionary = new ResourceDictionary();
		Populate_003A_002FAccents_002FBaseColorsPalette_002Examl(P_0, resourceDictionary);
		return resourceDictionary;
	}

	static void Populate_003A_002FControls_002FFluentControls_002Examl(IServiceProvider P_0, Styles P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FFluentControls_002Examl.Singleton }, "avares://Avalonia.Themes.Fluent/Controls/FluentControls.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		Styles styles;
		Styles styles2 = (styles = P_1);
		context.PushParent(styles);
		ResourceDictionary resourceDictionary;
		ResourceDictionary resources = (resourceDictionary = new ResourceDictionary());
		context.PushParent(resourceDictionary);
		resourceDictionary.AddDeferred(typeof(Button), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1.Build, context));
		resourceDictionary.AddDeferred(typeof(RadioButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_4.Build, context));
		resourceDictionary.AddDeferred(typeof(AutoCompleteBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_7.Build, context));
		resourceDictionary.AddDeferred(typeof(Avalonia.Controls.Calendar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_9.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_11.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarDayButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_14.Build, context));
		resourceDictionary.AddDeferred(typeof(Carousel), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_17.Build, context));
		resourceDictionary.AddDeferred(typeof(CheckBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_19.Build, context));
		resourceDictionary.AddDeferred(typeof(GridSplitter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_22.Build, context));
		resourceDictionary.AddDeferred(typeof(ItemsControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_25.Build, context));
		resourceDictionary.AddDeferred(typeof(Label), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_27.Build, context));
		resourceDictionary.AddDeferred(typeof(ListBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_30.Build, context));
		resourceDictionary.AddDeferred("FluentMenuScrollViewer", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_32.Build, context));
		resourceDictionary.AddDeferred(typeof(MenuFlyoutPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_34.Build, context));
		resourceDictionary.AddDeferred(typeof(NotificationCard), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_37.Build, context));
		resourceDictionary.AddDeferred(typeof(NumericUpDown), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_40.Build, context));
		resourceDictionary.AddDeferred(typeof(OverlayPopupHost), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_42.Build, context));
		resourceDictionary.AddDeferred(typeof(PopupRoot), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_45.Build, context));
		resourceDictionary.AddDeferred(typeof(PathIcon), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_48.Build, context));
		resourceDictionary.AddDeferred(typeof(RepeatButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_50.Build, context));
		resourceDictionary.AddDeferred(typeof(ScrollViewer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_53.Build, context));
		resourceDictionary.AddDeferred(typeof(Separator), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_55.Build, context));
		resourceDictionary.AddDeferred(typeof(TabStrip), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_57.Build, context));
		resourceDictionary.AddDeferred(typeof(ToggleButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_60.Build, context));
		resourceDictionary.AddDeferred(typeof(TitleBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_63.Build, context));
		resourceDictionary.AddDeferred(typeof(TransitioningContentControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_65.Build, context));
		resourceDictionary.AddDeferred(typeof(TreeView), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_67.Build, context));
		resourceDictionary.AddDeferred(typeof(WindowNotificationManager), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_69.Build, context));
		resourceDictionary.AddDeferred(typeof(Window), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_73.Build, context));
		resourceDictionary.AddDeferred(typeof(ComboBoxItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_76.Build, context));
		resourceDictionary.AddDeferred(typeof(ContentControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_79.Build, context));
		resourceDictionary.AddDeferred(typeof(EmbeddableControlRoot), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_82.Build, context));
		resourceDictionary.AddDeferred(typeof(ManagedFileChooser), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_85.Build, context));
		resourceDictionary.AddDeferred(typeof(RefreshContainer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_98.Build, context));
		resourceDictionary.AddDeferred(typeof(RefreshVisualizer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_101.Build, context));
		resourceDictionary.AddDeferred(typeof(ThemeVariantScope), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_103.Build, context));
		resourceDictionary.Add("SystemControlFocusVisualMargin", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary.Add("SystemControlFocusVisualPrimaryThickness", new Thickness(2.0, 2.0, 2.0, 2.0));
		resourceDictionary.Add("SystemControlFocusVisualSecondaryThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.AddDeferred(typeof(AdornerLayer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_104.Build, context));
		resourceDictionary.Add("ExpanderMinHeight", 48.0);
		resourceDictionary.Add("ExpanderHeaderHorizontalContentAlignment", HorizontalAlignment.Stretch);
		resourceDictionary.Add("ExpanderHeaderVerticalContentAlignment", VerticalAlignment.Center);
		resourceDictionary.Add("ExpanderHeaderPadding", new Thickness(16.0, 0.0, 0.0, 0.0));
		resourceDictionary.Add("ExpanderHeaderBorderThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.Add("ExpanderChevronBorderThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary.Add("ExpanderChevronMargin", new Thickness(20.0, 0.0, 8.0, 0.0));
		resourceDictionary.Add("ExpanderChevronButtonSize", 32.0);
		resourceDictionary.Add("ExpanderContentPadding", new Thickness(16.0, 16.0, 16.0, 16.0));
		resourceDictionary.Add("ExpanderContentLeftBorderThickness", new Thickness(1.0, 1.0, 0.0, 1.0));
		resourceDictionary.Add("ExpanderContentUpBorderThickness", new Thickness(1.0, 1.0, 1.0, 0.0));
		resourceDictionary.Add("ExpanderContentRightBorderThickness", new Thickness(0.0, 1.0, 1.0, 1.0));
		resourceDictionary.Add("ExpanderContentDownBorderThickness", new Thickness(1.0, 0.0, 1.0, 1.0));
		resourceDictionary.AddDeferred("FluentExpanderToggleButtonTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_106.Build, context));
		resourceDictionary.AddDeferred("FluentExpanderToggleButtonUpTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_109.Build, context));
		resourceDictionary.AddDeferred("FluentExpanderToggleButtonDownTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_110.Build, context));
		resourceDictionary.AddDeferred("FluentExpanderToggleButtonLeftTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_111.Build, context));
		resourceDictionary.AddDeferred("FluentExpanderToggleButtonRightTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_112.Build, context));
		resourceDictionary.AddDeferred(typeof(Expander), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_113.Build, context));
		resourceDictionary.AddDeferred("StringFormatConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_116.Build, context));
		resourceDictionary.AddDeferred(typeof(ProgressBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_117.Build, context));
		resourceDictionary.AddDeferred("ButtonSpinnerLeftThickness", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_119.Build, context));
		resourceDictionary.AddDeferred("ButtonSpinnerRightThickness", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_120.Build, context));
		resourceDictionary.AddDeferred("ButtonSpinnerIncreaseButtonIcon", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_121.Build, context));
		resourceDictionary.AddDeferred("ButtonSpinnerDecreaseButtonIcon", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_122.Build, context));
		resourceDictionary.AddDeferred("FluentButtonSpinnerRepeatButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_123.Build, context));
		resourceDictionary.AddDeferred(typeof(ButtonSpinner), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_126.Build, context));
		resourceDictionary.Add("CalendarDatePickerCurrentDayFontSize", 12.0);
		resourceDictionary.Add("CalendarDatePickerMinHeight", 32.0);
		resourceDictionary.AddDeferred("FluentCalendarDatePickerButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_129.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarDatePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_131.Build, context));
		resourceDictionary.AddDeferred("FluentCalendarButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_134.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_137.Build, context));
		resourceDictionary.AddDeferred("FluentCaptionButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_141.Build, context));
		resourceDictionary.AddDeferred(typeof(CaptionButtons), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_144.Build, context));
		resourceDictionary.Add("FlyoutBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.AddDeferred(typeof(FlyoutPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_147.Build, context));
		resourceDictionary.Add("ListBoxItemPadding", new Thickness(12.0, 9.0, 12.0, 12.0));
		resourceDictionary.AddDeferred(typeof(ListBoxItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_150.Build, context));
		resourceDictionary.Add("MenuBarHeight", 32.0);
		resourceDictionary.AddDeferred("FluentTopLevelMenuItem", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_153.Build, context));
		resourceDictionary.AddDeferred(typeof(Menu), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_156.Build, context));
		resourceDictionary.AddDeferred("KeyGestureConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_158.Build, context));
		resourceDictionary.Add("MenuFlyoutSubItemPopupHorizontalOffset", -4.0);
		resourceDictionary.Add("MenuIconPresenterMargin", new Thickness(0.0, 0.0, 12.0, 0.0));
		resourceDictionary.Add("MenuInputGestureTextMargin", new Thickness(24.0, 0.0, 0.0, 0.0));
		resourceDictionary.AddDeferred("MenuItemChevronPathData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_159.Build, context));
		resourceDictionary.AddDeferred(typeof(MenuItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_160.Build, context));
		resourceDictionary.AddDeferred("AvaloniaThemesFluentNativeMenuBarIBitmapToImageConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_164.Build, context));
		resourceDictionary.AddDeferred(typeof(NativeMenuBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_165.Build, context));
		resourceDictionary.AddDeferred("FluentScrollBarThumb", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_167.Build, context));
		resourceDictionary.AddDeferred("FluentScrollBarPageButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_169.Build, context));
		resourceDictionary.AddDeferred("FluentScrollBarLineButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_171.Build, context));
		resourceDictionary.AddDeferred(typeof(ScrollBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_174.Build, context));
		resourceDictionary.Add("SplitButtonPrimaryButtonSize", 32.0);
		resourceDictionary.Add("SplitButtonSecondaryButtonSize", 32.0);
		resourceDictionary.Add("SplitButtonSeparatorWidth", 1.0);
		resourceDictionary.Add("SplitButtonMinHeight", 32.0);
		resourceDictionary.AddDeferred("PrimaryButtonBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_179.Build, context));
		resourceDictionary.AddDeferred("SecondaryButtonBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_180.Build, context));
		resourceDictionary.AddDeferred("SeparatorBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_181.Build, context));
		resourceDictionary.AddDeferred("FluentSplitButtonComponent", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_182.Build, context));
		resourceDictionary.AddDeferred(typeof(SplitButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_185.Build, context));
		resourceDictionary.Add("SplitViewOpenPaneThemeLength", 320.0);
		resourceDictionary.Add("SplitViewCompactPaneThemeLength", 48.0);
		resourceDictionary.Add("SplitViewPaneAnimationOpenDuration", TimeSpan.FromTicks(2000000L));
		resourceDictionary.Add("SplitViewPaneAnimationCloseDuration", TimeSpan.FromTicks(1000000L));
		resourceDictionary.AddDeferred("SplitViewPaneAnimationEasing", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_188.Build, context));
		resourceDictionary.AddDeferred(typeof(SplitView), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_189.Build, context));
		resourceDictionary.Add("TabControlTopPlacementItemMargin", new Thickness(0.0, 0.0, 0.0, 2.0));
		resourceDictionary.AddDeferred(typeof(TabControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_194.Build, context));
		resourceDictionary.Add("TabItemMinHeight", 48.0);
		resourceDictionary.Add("TabItemVerticalPipeHeight", 24.0);
		resourceDictionary.Add("TabItemPipeThickness", 2.0);
		resourceDictionary.AddDeferred(typeof(TabItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_197.Build, context));
		resourceDictionary.Add("TabStripItemMinHeight", 48.0);
		resourceDictionary.Add("TabStripItemPipeThickness", 2.0);
		resourceDictionary.AddDeferred(typeof(TabStripItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_200.Build, context));
		resourceDictionary.Add("TextBoxTopHeaderMargin", new Thickness(0.0, 0.0, 0.0, 4.0));
		resourceDictionary.AddDeferred("TextBoxClearButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_203.Build, context));
		resourceDictionary.AddDeferred("PasswordBoxRevealButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_204.Build, context));
		resourceDictionary.AddDeferred("PasswordBoxHideButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_205.Build, context));
		resourceDictionary.AddDeferred("DefaultTextBoxContextFlyout", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_206.Build, context));
		resourceDictionary.AddDeferred("FluentTextBoxButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_207.Build, context));
		resourceDictionary.AddDeferred("FluentTextBoxToggleButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_210.Build, context));
		resourceDictionary.AddDeferred(typeof(TextBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_213.Build, context));
		resourceDictionary.Add("ToggleSwitchTopHeaderMargin", new Thickness(0.0, 0.0, 0.0, 6.0));
		resourceDictionary.Add("ToggleSwitchPreContentMargin", new GridLength(6.0, GridUnitType.Pixel));
		resourceDictionary.Add("ToggleSwitchPostContentMargin", new GridLength(6.0, GridUnitType.Pixel));
		resourceDictionary.Add("ToggleSwitchThemeMinWidth", 0.0);
		resourceDictionary.AddDeferred(typeof(ToggleSwitch), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_220.Build, context));
		resourceDictionary.Add("ToolTipContentMaxWidth", 320.0);
		resourceDictionary.AddDeferred(typeof(ToolTip), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_223.Build, context));
		resourceDictionary.Add("TreeViewItemIndent", 16.0);
		resourceDictionary.Add("TreeViewItemExpandCollapseChevronSize", 12.0);
		resourceDictionary.Add("TreeViewItemExpandCollapseChevronMargin", new Thickness(12.0, 0.0, 12.0, 0.0));
		resourceDictionary.AddDeferred("TreeViewItemCollapsedChevronPathData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_226.Build, context));
		resourceDictionary.AddDeferred("TreeViewItemExpandedChevronPathData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_227.Build, context));
		resourceDictionary.AddDeferred("TreeViewItemLeftMarginConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_228.Build, context));
		resourceDictionary.AddDeferred("FluentTreeViewExpandCollapseChevron", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_229.Build, context));
		resourceDictionary.AddDeferred(typeof(TreeViewItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_232.Build, context));
		resourceDictionary.Add("ComboBoxTopHeaderMargin", new Thickness(0.0, 0.0, 0.0, 4.0));
		resourceDictionary.Add("ComboBoxPopupMaxNumberOfItems", 15);
		resourceDictionary.Add("ComboBoxPopupMaxNumberOfItemsThatCanBeShownOnOneSide", 7);
		resourceDictionary.Add("ComboBoxPadding", new Thickness(12.0, 5.0, 0.0, 7.0));
		resourceDictionary.Add("ComboBoxEditableTextPadding", new Thickness(11.0, 5.0, 32.0, 6.0));
		resourceDictionary.Add("ComboBoxMinHeight", 32.0);
		resourceDictionary.AddDeferred(typeof(ComboBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_235.Build, context));
		resourceDictionary.Add("MenuFlyoutScrollerMargin", new Thickness(0.0, 4.0, 0.0, 4.0));
		resourceDictionary.AddDeferred(typeof(ContextMenu), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_238.Build, context));
		resourceDictionary.AddDeferred(typeof(DataValidationErrors), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_241.Build, context));
		resourceDictionary.AddDeferred("TooltipDataValidationErrors", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_245.Build, context));
		resourceDictionary.AddDeferred("FluentDateTimePickerItem", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_249.Build, context));
		resourceDictionary.AddDeferred("FluentDateTimePickerButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_250.Build, context));
		resourceDictionary.AddDeferred("FluentDateTimePickerUpButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_253.Build, context));
		resourceDictionary.AddDeferred("FluentDateTimePickerDownButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_255.Build, context));
		resourceDictionary.Add("DatePickerFlyoutPresenterHighlightHeight", 40.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterItemHeight", 40.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterAcceptDismissHostGridHeight", 41.0);
		resourceDictionary.Add("DatePickerThemeMinWidth", 296.0);
		resourceDictionary.Add("DatePickerThemeMaxWidth", 456.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterItemPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerFlyoutPresenterMonthPadding", new Thickness(9.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerHostPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerHostMonthPadding", new Thickness(9.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerSpacerThemeWidth", 1.0);
		resourceDictionary.AddDeferred("FluentDatePickerFlyoutButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_257.Build, context));
		resourceDictionary.AddDeferred(typeof(DatePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_260.Build, context));
		resourceDictionary.AddDeferred(typeof(DatePickerPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_263.Build, context));
		resourceDictionary.Add("TimePickerFlyoutPresenterItemHeight", 40.0);
		resourceDictionary.Add("TimePickerSpacerThemeWidth", 1.0);
		resourceDictionary.Add("TimePickerBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.Add("TimePickerFlyoutPresenterHighlightHeight", 40.0);
		resourceDictionary.Add("TimePickerFlyoutPresenterAcceptDismissHostGridHeight", 41.0);
		resourceDictionary.Add("TimePickerThemeMinWidth", 242.0);
		resourceDictionary.Add("TimePickerThemeMaxWidth", 456.0);
		resourceDictionary.Add("TimePickerFlyoutPresenterItemPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("TimePickerHostPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.AddDeferred("FluentTimePickerFlyoutButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_266.Build, context));
		resourceDictionary.AddDeferred(typeof(TimePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_269.Build, context));
		resourceDictionary.AddDeferred(typeof(TimePickerPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_272.Build, context));
		resourceDictionary.Add("DropDownButtonMinHeight", 32.0);
		resourceDictionary.AddDeferred(typeof(DropDownButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_275.Build, context));
		resourceDictionary.Add("SliderTopHeaderMargin", new Thickness(0.0, 0.0, 0.0, 4.0));
		resourceDictionary.Add("SliderPreContentMargin", new GridLength(15.0, GridUnitType.Pixel));
		resourceDictionary.Add("SliderPostContentMargin", new GridLength(15.0, GridUnitType.Pixel));
		resourceDictionary.Add("SliderHorizontalHeight", 32.0);
		resourceDictionary.Add("SliderVerticalWidth", 32.0);
		resourceDictionary.Add("SliderThumbCornerRadius", new CornerRadius(10.0, 10.0, 10.0, 10.0));
		resourceDictionary.Add("SliderHorizontalThumbWidth", 20.0);
		resourceDictionary.Add("SliderHorizontalThumbHeight", 20.0);
		resourceDictionary.Add("SliderVerticalThumbWidth", 20.0);
		resourceDictionary.Add("SliderVerticalThumbHeight", 20.0);
		resourceDictionary.AddDeferred("FluentSliderHorizontalRepeatButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_278.Build, context));
		resourceDictionary.AddDeferred("FluentSliderVerticalRepeatButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_280.Build, context));
		resourceDictionary.AddDeferred("FluentSliderThumbTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_282.Build, context));
		resourceDictionary.AddDeferred(typeof(Slider), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_284.Build, context));
		resourceDictionary.AddDeferred("SelectableTextBlockContextFlyout", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_289.Build, context));
		resourceDictionary.AddDeferred(typeof(SelectableTextBlock), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_290.Build, context));
		context.PopParent();
		styles.Resources = resources;
		styles.Add(Build_003A_002FControls_002FUserControl_002Examl(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(context)));
		context.PopParent();
		if (styles2 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static Styles Build_003A_002FControls_002FFluentControls_002Examl(IServiceProvider P_0)
	{
		Styles styles = new Styles();
		Populate_003A_002FControls_002FFluentControls_002Examl(P_0, styles);
		return styles;
	}
}
