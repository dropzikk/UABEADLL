using System;
using System.Runtime.CompilerServices;

namespace SixLabors.ImageSharp.Formats.Webp;

internal static class WebpLookupTables
{
	public static readonly byte[,][] ModesProba;

	public static readonly ushort[] GammaToLinearTab;

	public static readonly int[] LinearToGammaTab;

	public static readonly short[,][] Vp8FixedCostsI4;

	public static readonly int[] Vp8DspScan;

	public static readonly short[] Vp8Scan;

	public static readonly short[] Vp8ScanUv;

	public static readonly short[] Vp8LevelFixedCosts;

	public static readonly byte[,] LevelsFromDelta;

	public static readonly ushort[] Vp8EntropyCost;

	public static readonly ushort[][] Vp8LevelCodes;

	public static readonly float[] Log2Table;

	public static readonly float[] SLog2Table;

	public static readonly int[] CodeToPlane;

	public static readonly uint[] PlaneToCodeLut;

	public static readonly ushort[] AcTable;

	public static readonly ushort[] AcTable2;

	public static readonly byte[,,,] CoeffsUpdateProba;

	public static readonly byte[,,,] DefaultCoeffsProba;

	public static readonly (int Code, int ExtraBits)[] PrefixEncodeCode;

	public static readonly uint[] InvAlpha;

	public static ReadOnlySpan<byte> Norm => new byte[128]
	{
		7, 6, 6, 5, 5, 5, 5, 4, 4, 4,
		4, 4, 4, 4, 4, 3, 3, 3, 3, 3,
		3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
		3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 0
	};

	public static ReadOnlySpan<byte> NewRange => new byte[128]
	{
		127, 127, 191, 127, 159, 191, 223, 127, 143, 159,
		175, 191, 207, 223, 239, 127, 135, 143, 151, 159,
		167, 175, 183, 191, 199, 207, 215, 223, 231, 239,
		247, 127, 131, 135, 139, 143, 147, 151, 155, 159,
		163, 167, 171, 175, 179, 183, 187, 191, 195, 199,
		203, 207, 211, 215, 219, 223, 227, 231, 235, 239,
		243, 247, 251, 127, 129, 131, 133, 135, 137, 139,
		141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
		161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
		181, 183, 185, 187, 189, 191, 193, 195, 197, 199,
		201, 203, 205, 207, 209, 211, 213, 215, 217, 219,
		221, 223, 225, 227, 229, 231, 233, 235, 237, 239,
		241, 243, 245, 247, 249, 251, 253, 127
	};

	public static ReadOnlySpan<byte> LogTable8Bit => new byte[256]
	{
		0, 0, 1, 1, 2, 2, 2, 2, 3, 3,
		3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
		4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
		4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
		5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
		5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
		6, 6, 6, 6, 6, 6, 6, 6, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7
	};

	public static ReadOnlySpan<byte> DcTable => new byte[128]
	{
		4, 5, 6, 7, 8, 9, 10, 10, 11, 12,
		13, 14, 15, 16, 17, 17, 18, 19, 20, 20,
		21, 21, 22, 22, 23, 23, 24, 25, 25, 26,
		27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
		37, 37, 38, 39, 40, 41, 42, 43, 44, 45,
		46, 46, 47, 48, 49, 50, 51, 52, 53, 54,
		55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
		65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
		75, 76, 76, 77, 78, 79, 80, 81, 82, 83,
		84, 85, 86, 87, 88, 89, 91, 93, 95, 96,
		98, 100, 101, 102, 104, 106, 108, 110, 112, 114,
		116, 118, 122, 124, 126, 128, 130, 132, 134, 136,
		138, 140, 143, 145, 148, 151, 154, 157
	};

	public static ReadOnlySpan<byte> PrefixEncodeExtraBitsValue => new byte[512]
	{
		0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
		1, 2, 3, 0, 1, 2, 3, 0, 1, 2,
		3, 4, 5, 6, 7, 0, 1, 2, 3, 4,
		5, 6, 7, 0, 1, 2, 3, 4, 5, 6,
		7, 8, 9, 10, 11, 12, 13, 14, 15, 0,
		1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
		11, 12, 13, 14, 15, 0, 1, 2, 3, 4,
		5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
		15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
		25, 26, 27, 28, 29, 30, 31, 0, 1, 2,
		3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
		13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
		23, 24, 25, 26, 27, 28, 29, 30, 31, 0,
		1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
		11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
		21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
		31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
		41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
		51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
		61, 62, 63, 0, 1, 2, 3, 4, 5, 6,
		7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
		17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
		27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
		37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
		47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
		57, 58, 59, 60, 61, 62, 63, 0, 1, 2,
		3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
		13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
		23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
		33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
		43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
		53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
		63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
		73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
		83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
		93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
		103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
		113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
		123, 124, 125, 126, 127, 0, 1, 2, 3, 4,
		5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
		15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
		25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
		35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
		45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
		55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
		65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
		75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
		85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
		95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
		105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
		115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
		125, 126
	};

	private static ReadOnlySpan<byte> Abs0Table => new byte[511]
	{
		255, 254, 253, 252, 251, 250, 249, 248, 247, 246,
		245, 244, 243, 242, 241, 240, 239, 238, 237, 236,
		235, 234, 233, 232, 231, 230, 229, 228, 227, 226,
		225, 224, 223, 222, 221, 220, 219, 218, 217, 216,
		215, 214, 213, 212, 211, 210, 209, 208, 207, 206,
		205, 204, 203, 202, 201, 200, 199, 198, 197, 196,
		195, 194, 193, 192, 191, 190, 189, 188, 187, 186,
		185, 184, 183, 182, 181, 180, 179, 178, 177, 176,
		175, 174, 173, 172, 171, 170, 169, 168, 167, 166,
		165, 164, 163, 162, 161, 160, 159, 158, 157, 156,
		155, 154, 153, 152, 151, 150, 149, 148, 147, 146,
		145, 144, 143, 142, 141, 140, 139, 138, 137, 136,
		135, 134, 133, 132, 131, 130, 129, 128, 127, 126,
		125, 124, 123, 122, 121, 120, 119, 118, 117, 116,
		115, 114, 113, 112, 111, 110, 109, 108, 107, 106,
		105, 104, 103, 102, 101, 100, 99, 98, 97, 96,
		95, 94, 93, 92, 91, 90, 89, 88, 87, 86,
		85, 84, 83, 82, 81, 80, 79, 78, 77, 76,
		75, 74, 73, 72, 71, 70, 69, 68, 67, 66,
		65, 64, 63, 62, 61, 60, 59, 58, 57, 56,
		55, 54, 53, 52, 51, 50, 49, 48, 47, 46,
		45, 44, 43, 42, 41, 40, 39, 38, 37, 36,
		35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
		25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
		15, 14, 13, 12, 11, 10, 9, 8, 7, 6,
		5, 4, 3, 2, 1, 0, 1, 2, 3, 4,
		5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
		15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
		25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
		35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
		45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
		55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
		65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
		75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
		85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
		95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
		105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
		115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
		125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
		135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
		145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
		155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
		165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
		175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
		185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
		195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
		205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
		215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
		235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
		245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
		255
	};

	private static ReadOnlySpan<byte> Clip1Table => new byte[766]
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 2, 3, 4,
		5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
		15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
		25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
		35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
		45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
		55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
		65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
		75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
		85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
		95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
		105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
		115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
		125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
		135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
		145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
		155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
		165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
		175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
		185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
		195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
		205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
		215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
		225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
		235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
		245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255
	};

	private static ReadOnlySpan<sbyte> Sclip1Table => new sbyte[2041]
	{
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
		-128, -128, -128, -127, -126, -125, -124, -123, -122, -121,
		-120, -119, -118, -117, -116, -115, -114, -113, -112, -111,
		-110, -109, -108, -107, -106, -105, -104, -103, -102, -101,
		-100, -99, -98, -97, -96, -95, -94, -93, -92, -91,
		-90, -89, -88, -87, -86, -85, -84, -83, -82, -81,
		-80, -79, -78, -77, -76, -75, -74, -73, -72, -71,
		-70, -69, -68, -67, -66, -65, -64, -63, -62, -61,
		-60, -59, -58, -57, -56, -55, -54, -53, -52, -51,
		-50, -49, -48, -47, -46, -45, -44, -43, -42, -41,
		-40, -39, -38, -37, -36, -35, -34, -33, -32, -31,
		-30, -29, -28, -27, -26, -25, -24, -23, -22, -21,
		-20, -19, -18, -17, -16, -15, -14, -13, -12, -11,
		-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
		0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
		10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
		20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
		30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
		40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
		50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
		60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
		70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
		80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
		90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
		100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
		110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
		120, 121, 122, 123, 124, 125, 126, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		127
	};

	private static ReadOnlySpan<sbyte> Sclip2Table => new sbyte[225]
	{
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
		-16, -16, -16, -16, -16, -16, -16, -15, -14, -13,
		-12, -11, -10, -9, -8, -7, -6, -5, -4, -3,
		-2, -1, 0, 1, 2, 3, 4, 5, 6, 7,
		8, 9, 10, 11, 12, 13, 14, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
		15, 15, 15, 15, 15
	};

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static byte Abs0(int x)
	{
		return Abs0Table[x + 255];
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static sbyte Sclip1(int x)
	{
		return Sclip1Table[x + 1020];
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static sbyte Sclip2(int x)
	{
		return Sclip2Table[x + 112];
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static byte Clip1(int x)
	{
		return Clip1Table[x + 255];
	}

	static WebpLookupTables()
	{
		ModesProba = new byte[10, 10][];
		GammaToLinearTab = new ushort[256];
		LinearToGammaTab = new int[33];
		Vp8FixedCostsI4 = new short[10, 10][];
		Vp8DspScan = new int[24]
		{
			0, 4, 8, 12, 128, 132, 136, 140, 256, 260,
			264, 268, 384, 388, 392, 396, 0, 4, 128, 132,
			8, 12, 136, 140
		};
		Vp8Scan = new short[16]
		{
			0, 4, 8, 12, 128, 132, 136, 140, 256, 260,
			264, 268, 384, 388, 392, 396
		};
		Vp8ScanUv = new short[8] { 0, 4, 128, 132, 8, 12, 136, 140 };
		Vp8LevelFixedCosts = new short[2048]
		{
			0, 256, 256, 256, 256, 432, 618, 630, 731, 640,
			640, 828, 901, 948, 1021, 1101, 1174, 1221, 1294, 1042,
			1085, 1115, 1158, 1202, 1245, 1275, 1318, 1337, 1380, 1410,
			1453, 1497, 1540, 1570, 1613, 1280, 1295, 1317, 1332, 1358,
			1373, 1395, 1410, 1454, 1469, 1491, 1506, 1532, 1547, 1569,
			1584, 1601, 1616, 1638, 1653, 1679, 1694, 1716, 1731, 1775,
			1790, 1812, 1827, 1853, 1868, 1890, 1905, 1727, 1733, 1742,
			1748, 1759, 1765, 1774, 1780, 1800, 1806, 1815, 1821, 1832,
			1838, 1847, 1853, 1878, 1884, 1893, 1899, 1910, 1916, 1925,
			1931, 1951, 1957, 1966, 1972, 1983, 1989, 1998, 2004, 2027,
			2033, 2042, 2048, 2059, 2065, 2074, 2080, 2100, 2106, 2115,
			2121, 2132, 2138, 2147, 2153, 2178, 2184, 2193, 2199, 2210,
			2216, 2225, 2231, 2251, 2257, 2266, 2272, 2283, 2289, 2298,
			2304, 2168, 2174, 2183, 2189, 2200, 2206, 2215, 2221, 2241,
			2247, 2256, 2262, 2273, 2279, 2288, 2294, 2319, 2325, 2334,
			2340, 2351, 2357, 2366, 2372, 2392, 2398, 2407, 2413, 2424,
			2430, 2439, 2445, 2468, 2474, 2483, 2489, 2500, 2506, 2515,
			2521, 2541, 2547, 2556, 2562, 2573, 2579, 2588, 2594, 2619,
			2625, 2634, 2640, 2651, 2657, 2666, 2672, 2692, 2698, 2707,
			2713, 2724, 2730, 2739, 2745, 2540, 2546, 2555, 2561, 2572,
			2578, 2587, 2593, 2613, 2619, 2628, 2634, 2645, 2651, 2660,
			2666, 2691, 2697, 2706, 2712, 2723, 2729, 2738, 2744, 2764,
			2770, 2779, 2785, 2796, 2802, 2811, 2817, 2840, 2846, 2855,
			2861, 2872, 2878, 2887, 2893, 2913, 2919, 2928, 2934, 2945,
			2951, 2960, 2966, 2991, 2997, 3006, 3012, 3023, 3029, 3038,
			3044, 3064, 3070, 3079, 3085, 3096, 3102, 3111, 3117, 2981,
			2987, 2996, 3002, 3013, 3019, 3028, 3034, 3054, 3060, 3069,
			3075, 3086, 3092, 3101, 3107, 3132, 3138, 3147, 3153, 3164,
			3170, 3179, 3185, 3205, 3211, 3220, 3226, 3237, 3243, 3252,
			3258, 3281, 3287, 3296, 3302, 3313, 3319, 3328, 3334, 3354,
			3360, 3369, 3375, 3386, 3392, 3401, 3407, 3432, 3438, 3447,
			3453, 3464, 3470, 3479, 3485, 3505, 3511, 3520, 3526, 3537,
			3543, 3552, 3558, 2816, 2822, 2831, 2837, 2848, 2854, 2863,
			2869, 2889, 2895, 2904, 2910, 2921, 2927, 2936, 2942, 2967,
			2973, 2982, 2988, 2999, 3005, 3014, 3020, 3040, 3046, 3055,
			3061, 3072, 3078, 3087, 3093, 3116, 3122, 3131, 3137, 3148,
			3154, 3163, 3169, 3189, 3195, 3204, 3210, 3221, 3227, 3236,
			3242, 3267, 3273, 3282, 3288, 3299, 3305, 3314, 3320, 3340,
			3346, 3355, 3361, 3372, 3378, 3387, 3393, 3257, 3263, 3272,
			3278, 3289, 3295, 3304, 3310, 3330, 3336, 3345, 3351, 3362,
			3368, 3377, 3383, 3408, 3414, 3423, 3429, 3440, 3446, 3455,
			3461, 3481, 3487, 3496, 3502, 3513, 3519, 3528, 3534, 3557,
			3563, 3572, 3578, 3589, 3595, 3604, 3610, 3630, 3636, 3645,
			3651, 3662, 3668, 3677, 3683, 3708, 3714, 3723, 3729, 3740,
			3746, 3755, 3761, 3781, 3787, 3796, 3802, 3813, 3819, 3828,
			3834, 3629, 3635, 3644, 3650, 3661, 3667, 3676, 3682, 3702,
			3708, 3717, 3723, 3734, 3740, 3749, 3755, 3780, 3786, 3795,
			3801, 3812, 3818, 3827, 3833, 3853, 3859, 3868, 3874, 3885,
			3891, 3900, 3906, 3929, 3935, 3944, 3950, 3961, 3967, 3976,
			3982, 4002, 4008, 4017, 4023, 4034, 4040, 4049, 4055, 4080,
			4086, 4095, 4101, 4112, 4118, 4127, 4133, 4153, 4159, 4168,
			4174, 4185, 4191, 4200, 4206, 4070, 4076, 4085, 4091, 4102,
			4108, 4117, 4123, 4143, 4149, 4158, 4164, 4175, 4181, 4190,
			4196, 4221, 4227, 4236, 4242, 4253, 4259, 4268, 4274, 4294,
			4300, 4309, 4315, 4326, 4332, 4341, 4347, 4370, 4376, 4385,
			4391, 4402, 4408, 4417, 4423, 4443, 4449, 4458, 4464, 4475,
			4481, 4490, 4496, 4521, 4527, 4536, 4542, 4553, 4559, 4568,
			4574, 4594, 4600, 4609, 4615, 4626, 4632, 4641, 4647, 3515,
			3521, 3530, 3536, 3547, 3553, 3562, 3568, 3588, 3594, 3603,
			3609, 3620, 3626, 3635, 3641, 3666, 3672, 3681, 3687, 3698,
			3704, 3713, 3719, 3739, 3745, 3754, 3760, 3771, 3777, 3786,
			3792, 3815, 3821, 3830, 3836, 3847, 3853, 3862, 3868, 3888,
			3894, 3903, 3909, 3920, 3926, 3935, 3941, 3966, 3972, 3981,
			3987, 3998, 4004, 4013, 4019, 4039, 4045, 4054, 4060, 4071,
			4077, 4086, 4092, 3956, 3962, 3971, 3977, 3988, 3994, 4003,
			4009, 4029, 4035, 4044, 4050, 4061, 4067, 4076, 4082, 4107,
			4113, 4122, 4128, 4139, 4145, 4154, 4160, 4180, 4186, 4195,
			4201, 4212, 4218, 4227, 4233, 4256, 4262, 4271, 4277, 4288,
			4294, 4303, 4309, 4329, 4335, 4344, 4350, 4361, 4367, 4376,
			4382, 4407, 4413, 4422, 4428, 4439, 4445, 4454, 4460, 4480,
			4486, 4495, 4501, 4512, 4518, 4527, 4533, 4328, 4334, 4343,
			4349, 4360, 4366, 4375, 4381, 4401, 4407, 4416, 4422, 4433,
			4439, 4448, 4454, 4479, 4485, 4494, 4500, 4511, 4517, 4526,
			4532, 4552, 4558, 4567, 4573, 4584, 4590, 4599, 4605, 4628,
			4634, 4643, 4649, 4660, 4666, 4675, 4681, 4701, 4707, 4716,
			4722, 4733, 4739, 4748, 4754, 4779, 4785, 4794, 4800, 4811,
			4817, 4826, 4832, 4852, 4858, 4867, 4873, 4884, 4890, 4899,
			4905, 4769, 4775, 4784, 4790, 4801, 4807, 4816, 4822, 4842,
			4848, 4857, 4863, 4874, 4880, 4889, 4895, 4920, 4926, 4935,
			4941, 4952, 4958, 4967, 4973, 4993, 4999, 5008, 5014, 5025,
			5031, 5040, 5046, 5069, 5075, 5084, 5090, 5101, 5107, 5116,
			5122, 5142, 5148, 5157, 5163, 5174, 5180, 5189, 5195, 5220,
			5226, 5235, 5241, 5252, 5258, 5267, 5273, 5293, 5299, 5308,
			5314, 5325, 5331, 5340, 5346, 4604, 4610, 4619, 4625, 4636,
			4642, 4651, 4657, 4677, 4683, 4692, 4698, 4709, 4715, 4724,
			4730, 4755, 4761, 4770, 4776, 4787, 4793, 4802, 4808, 4828,
			4834, 4843, 4849, 4860, 4866, 4875, 4881, 4904, 4910, 4919,
			4925, 4936, 4942, 4951, 4957, 4977, 4983, 4992, 4998, 5009,
			5015, 5024, 5030, 5055, 5061, 5070, 5076, 5087, 5093, 5102,
			5108, 5128, 5134, 5143, 5149, 5160, 5166, 5175, 5181, 5045,
			5051, 5060, 5066, 5077, 5083, 5092, 5098, 5118, 5124, 5133,
			5139, 5150, 5156, 5165, 5171, 5196, 5202, 5211, 5217, 5228,
			5234, 5243, 5249, 5269, 5275, 5284, 5290, 5301, 5307, 5316,
			5322, 5345, 5351, 5360, 5366, 5377, 5383, 5392, 5398, 5418,
			5424, 5433, 5439, 5450, 5456, 5465, 5471, 5496, 5502, 5511,
			5517, 5528, 5534, 5543, 5549, 5569, 5575, 5584, 5590, 5601,
			5607, 5616, 5622, 5417, 5423, 5432, 5438, 5449, 5455, 5464,
			5470, 5490, 5496, 5505, 5511, 5522, 5528, 5537, 5543, 5568,
			5574, 5583, 5589, 5600, 5606, 5615, 5621, 5641, 5647, 5656,
			5662, 5673, 5679, 5688, 5694, 5717, 5723, 5732, 5738, 5749,
			5755, 5764, 5770, 5790, 5796, 5805, 5811, 5822, 5828, 5837,
			5843, 5868, 5874, 5883, 5889, 5900, 5906, 5915, 5921, 5941,
			5947, 5956, 5962, 5973, 5979, 5988, 5994, 5858, 5864, 5873,
			5879, 5890, 5896, 5905, 5911, 5931, 5937, 5946, 5952, 5963,
			5969, 5978, 5984, 6009, 6015, 6024, 6030, 6041, 6047, 6056,
			6062, 6082, 6088, 6097, 6103, 6114, 6120, 6129, 6135, 6158,
			6164, 6173, 6179, 6190, 6196, 6205, 6211, 6231, 6237, 6246,
			6252, 6263, 6269, 6278, 6284, 6309, 6315, 6324, 6330, 6341,
			6347, 6356, 6362, 6382, 6388, 6397, 6403, 6414, 6420, 6429,
			6435, 3515, 3521, 3530, 3536, 3547, 3553, 3562, 3568, 3588,
			3594, 3603, 3609, 3620, 3626, 3635, 3641, 3666, 3672, 3681,
			3687, 3698, 3704, 3713, 3719, 3739, 3745, 3754, 3760, 3771,
			3777, 3786, 3792, 3815, 3821, 3830, 3836, 3847, 3853, 3862,
			3868, 3888, 3894, 3903, 3909, 3920, 3926, 3935, 3941, 3966,
			3972, 3981, 3987, 3998, 4004, 4013, 4019, 4039, 4045, 4054,
			4060, 4071, 4077, 4086, 4092, 3956, 3962, 3971, 3977, 3988,
			3994, 4003, 4009, 4029, 4035, 4044, 4050, 4061, 4067, 4076,
			4082, 4107, 4113, 4122, 4128, 4139, 4145, 4154, 4160, 4180,
			4186, 4195, 4201, 4212, 4218, 4227, 4233, 4256, 4262, 4271,
			4277, 4288, 4294, 4303, 4309, 4329, 4335, 4344, 4350, 4361,
			4367, 4376, 4382, 4407, 4413, 4422, 4428, 4439, 4445, 4454,
			4460, 4480, 4486, 4495, 4501, 4512, 4518, 4527, 4533, 4328,
			4334, 4343, 4349, 4360, 4366, 4375, 4381, 4401, 4407, 4416,
			4422, 4433, 4439, 4448, 4454, 4479, 4485, 4494, 4500, 4511,
			4517, 4526, 4532, 4552, 4558, 4567, 4573, 4584, 4590, 4599,
			4605, 4628, 4634, 4643, 4649, 4660, 4666, 4675, 4681, 4701,
			4707, 4716, 4722, 4733, 4739, 4748, 4754, 4779, 4785, 4794,
			4800, 4811, 4817, 4826, 4832, 4852, 4858, 4867, 4873, 4884,
			4890, 4899, 4905, 4769, 4775, 4784, 4790, 4801, 4807, 4816,
			4822, 4842, 4848, 4857, 4863, 4874, 4880, 4889, 4895, 4920,
			4926, 4935, 4941, 4952, 4958, 4967, 4973, 4993, 4999, 5008,
			5014, 5025, 5031, 5040, 5046, 5069, 5075, 5084, 5090, 5101,
			5107, 5116, 5122, 5142, 5148, 5157, 5163, 5174, 5180, 5189,
			5195, 5220, 5226, 5235, 5241, 5252, 5258, 5267, 5273, 5293,
			5299, 5308, 5314, 5325, 5331, 5340, 5346, 4604, 4610, 4619,
			4625, 4636, 4642, 4651, 4657, 4677, 4683, 4692, 4698, 4709,
			4715, 4724, 4730, 4755, 4761, 4770, 4776, 4787, 4793, 4802,
			4808, 4828, 4834, 4843, 4849, 4860, 4866, 4875, 4881, 4904,
			4910, 4919, 4925, 4936, 4942, 4951, 4957, 4977, 4983, 4992,
			4998, 5009, 5015, 5024, 5030, 5055, 5061, 5070, 5076, 5087,
			5093, 5102, 5108, 5128, 5134, 5143, 5149, 5160, 5166, 5175,
			5181, 5045, 5051, 5060, 5066, 5077, 5083, 5092, 5098, 5118,
			5124, 5133, 5139, 5150, 5156, 5165, 5171, 5196, 5202, 5211,
			5217, 5228, 5234, 5243, 5249, 5269, 5275, 5284, 5290, 5301,
			5307, 5316, 5322, 5345, 5351, 5360, 5366, 5377, 5383, 5392,
			5398, 5418, 5424, 5433, 5439, 5450, 5456, 5465, 5471, 5496,
			5502, 5511, 5517, 5528, 5534, 5543, 5549, 5569, 5575, 5584,
			5590, 5601, 5607, 5616, 5622, 5417, 5423, 5432, 5438, 5449,
			5455, 5464, 5470, 5490, 5496, 5505, 5511, 5522, 5528, 5537,
			5543, 5568, 5574, 5583, 5589, 5600, 5606, 5615, 5621, 5641,
			5647, 5656, 5662, 5673, 5679, 5688, 5694, 5717, 5723, 5732,
			5738, 5749, 5755, 5764, 5770, 5790, 5796, 5805, 5811, 5822,
			5828, 5837, 5843, 5868, 5874, 5883, 5889, 5900, 5906, 5915,
			5921, 5941, 5947, 5956, 5962, 5973, 5979, 5988, 5994, 5858,
			5864, 5873, 5879, 5890, 5896, 5905, 5911, 5931, 5937, 5946,
			5952, 5963, 5969, 5978, 5984, 6009, 6015, 6024, 6030, 6041,
			6047, 6056, 6062, 6082, 6088, 6097, 6103, 6114, 6120, 6129,
			6135, 6158, 6164, 6173, 6179, 6190, 6196, 6205, 6211, 6231,
			6237, 6246, 6252, 6263, 6269, 6278, 6284, 6309, 6315, 6324,
			6330, 6341, 6347, 6356, 6362, 6382, 6388, 6397, 6403, 6414,
			6420, 6429, 6435, 5303, 5309, 5318, 5324, 5335, 5341, 5350,
			5356, 5376, 5382, 5391, 5397, 5408, 5414, 5423, 5429, 5454,
			5460, 5469, 5475, 5486, 5492, 5501, 5507, 5527, 5533, 5542,
			5548, 5559, 5565, 5574, 5580, 5603, 5609, 5618, 5624, 5635,
			5641, 5650, 5656, 5676, 5682, 5691, 5697, 5708, 5714, 5723,
			5729, 5754, 5760, 5769, 5775, 5786, 5792, 5801, 5807, 5827,
			5833, 5842, 5848, 5859, 5865, 5874, 5880, 5744, 5750, 5759,
			5765, 5776, 5782, 5791, 5797, 5817, 5823, 5832, 5838, 5849,
			5855, 5864, 5870, 5895, 5901, 5910, 5916, 5927, 5933, 5942,
			5948, 5968, 5974, 5983, 5989, 6000, 6006, 6015, 6021, 6044,
			6050, 6059, 6065, 6076, 6082, 6091, 6097, 6117, 6123, 6132,
			6138, 6149, 6155, 6164, 6170, 6195, 6201, 6210, 6216, 6227,
			6233, 6242, 6248, 6268, 6274, 6283, 6289, 6300, 6306, 6315,
			6321, 6116, 6122, 6131, 6137, 6148, 6154, 6163, 6169, 6189,
			6195, 6204, 6210, 6221, 6227, 6236, 6242, 6267, 6273, 6282,
			6288, 6299, 6305, 6314, 6320, 6340, 6346, 6355, 6361, 6372,
			6378, 6387, 6393, 6416, 6422, 6431, 6437, 6448, 6454, 6463,
			6469, 6489, 6495, 6504, 6510, 6521, 6527, 6536, 6542, 6567,
			6573, 6582, 6588, 6599, 6605, 6614, 6620, 6640, 6646, 6655,
			6661, 6672, 6678, 6687, 6693, 6557, 6563, 6572, 6578, 6589,
			6595, 6604, 6610, 6630, 6636, 6645, 6651, 6662, 6668, 6677,
			6683, 6708, 6714, 6723, 6729, 6740, 6746, 6755, 6761, 6781,
			6787, 6796, 6802, 6813, 6819, 6828, 6834, 6857, 6863, 6872,
			6878, 6889, 6895, 6904, 6910, 6930, 6936, 6945, 6951, 6962,
			6968, 6977, 6983, 7008, 7014, 7023, 7029, 7040, 7046, 7055,
			7061, 7081, 7087, 7096, 7102, 7113, 7119, 7128, 7134, 6392,
			6398, 6407, 6413, 6424, 6430, 6439, 6445, 6465, 6471, 6480,
			6486, 6497, 6503, 6512, 6518, 6543, 6549, 6558, 6564, 6575,
			6581, 6590, 6596, 6616, 6622, 6631, 6637, 6648, 6654, 6663,
			6669, 6692, 6698, 6707, 6713, 6724, 6730, 6739, 6745, 6765,
			6771, 6780, 6786, 6797, 6803, 6812, 6818, 6843, 6849, 6858,
			6864, 6875, 6881, 6890, 6896, 6916, 6922, 6931, 6937, 6948,
			6954, 6963, 6969, 6833, 6839, 6848, 6854, 6865, 6871, 6880,
			6886, 6906, 6912, 6921, 6927, 6938, 6944, 6953, 6959, 6984,
			6990, 6999, 7005, 7016, 7022, 7031, 7037, 7057, 7063, 7072,
			7078, 7089, 7095, 7104, 7110, 7133, 7139, 7148, 7154, 7165,
			7171, 7180, 7186, 7206, 7212, 7221, 7227, 7238, 7244, 7253,
			7259, 7284, 7290, 7299, 7305, 7316, 7322, 7331, 7337, 7357,
			7363, 7372, 7378, 7389, 7395, 7404, 7410, 7205, 7211, 7220,
			7226, 7237, 7243, 7252, 7258, 7278, 7284, 7293, 7299, 7310,
			7316, 7325, 7331, 7356, 7362, 7371, 7377, 7388, 7394, 7403,
			7409, 7429, 7435, 7444, 7450, 7461, 7467, 7476, 7482, 7505,
			7511, 7520, 7526, 7537, 7543, 7552, 7558, 7578, 7584, 7593,
			7599, 7610, 7616, 7625, 7631, 7656, 7662, 7671, 7677, 7688,
			7694, 7703, 7709, 7729, 7735, 7744, 7750, 7761
		};
		LevelsFromDelta = new byte[8, 64]
		{
			{
				0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
				10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
				20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
				30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
				40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
				50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
				60, 61, 62, 63
			},
			{
				0, 1, 2, 3, 5, 6, 7, 8, 9, 11,
				12, 13, 14, 15, 17, 18, 20, 21, 23, 24,
				26, 27, 29, 30, 32, 33, 35, 36, 38, 39,
				41, 42, 44, 45, 47, 48, 50, 51, 53, 54,
				56, 57, 59, 60, 62, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 3, 5, 6, 7, 8, 9, 11,
				12, 13, 14, 16, 17, 19, 20, 22, 23, 25,
				26, 28, 29, 31, 32, 34, 35, 37, 38, 40,
				41, 43, 44, 46, 47, 49, 50, 52, 53, 55,
				56, 58, 59, 61, 62, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 3, 5, 6, 7, 8, 9, 11,
				12, 13, 15, 16, 18, 19, 21, 22, 24, 25,
				27, 28, 30, 31, 33, 34, 36, 37, 39, 40,
				42, 43, 45, 46, 48, 49, 51, 52, 54, 55,
				57, 58, 60, 61, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 3, 5, 6, 7, 8, 9, 11,
				12, 14, 15, 17, 18, 20, 21, 23, 24, 26,
				27, 29, 30, 32, 33, 35, 36, 38, 39, 41,
				42, 44, 45, 47, 48, 50, 51, 53, 54, 56,
				57, 59, 60, 62, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 4, 5, 7, 8, 9, 11, 12,
				13, 15, 16, 17, 19, 20, 22, 23, 25, 26,
				28, 29, 31, 32, 34, 35, 37, 38, 40, 41,
				43, 44, 46, 47, 49, 50, 52, 53, 55, 56,
				58, 59, 61, 62, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 4, 5, 7, 8, 9, 11, 12,
				13, 15, 16, 18, 19, 21, 22, 24, 25, 27,
				28, 30, 31, 33, 34, 36, 37, 39, 40, 42,
				43, 45, 46, 48, 49, 51, 52, 54, 55, 57,
				58, 60, 61, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			},
			{
				0, 1, 2, 4, 5, 7, 8, 9, 11, 12,
				14, 15, 17, 18, 20, 21, 23, 24, 26, 27,
				29, 30, 32, 33, 35, 36, 38, 39, 41, 42,
				44, 45, 47, 48, 50, 51, 53, 54, 56, 57,
				59, 60, 62, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
				63, 63, 63, 63
			}
		};
		Vp8EntropyCost = new ushort[256]
		{
			1792, 1792, 1792, 1536, 1536, 1408, 1366, 1280, 1280, 1216,
			1178, 1152, 1110, 1076, 1061, 1024, 1024, 992, 968, 951,
			939, 911, 896, 878, 871, 854, 838, 820, 811, 794,
			786, 768, 768, 752, 740, 732, 720, 709, 704, 690,
			683, 672, 666, 655, 647, 640, 631, 622, 615, 607,
			598, 592, 586, 576, 572, 564, 559, 555, 547, 541,
			534, 528, 522, 512, 512, 504, 500, 494, 488, 483,
			477, 473, 467, 461, 458, 452, 448, 443, 438, 434,
			427, 424, 419, 415, 410, 406, 403, 399, 394, 390,
			384, 384, 377, 374, 370, 366, 362, 359, 355, 351,
			347, 342, 342, 336, 333, 330, 326, 323, 320, 316,
			312, 308, 305, 302, 299, 296, 293, 288, 287, 283,
			280, 277, 274, 272, 268, 266, 262, 256, 256, 256,
			251, 248, 245, 242, 240, 237, 234, 232, 228, 226,
			223, 221, 218, 216, 214, 211, 208, 205, 203, 201,
			198, 196, 192, 191, 188, 187, 183, 181, 179, 176,
			175, 171, 171, 168, 165, 163, 160, 159, 156, 154,
			152, 150, 148, 146, 144, 142, 139, 138, 135, 133,
			131, 128, 128, 125, 123, 121, 119, 117, 115, 113,
			111, 110, 107, 105, 103, 102, 100, 98, 96, 94,
			92, 91, 89, 86, 86, 83, 82, 80, 77, 76,
			74, 73, 71, 69, 67, 66, 64, 63, 61, 59,
			57, 55, 54, 52, 51, 49, 47, 46, 44, 43,
			41, 40, 38, 36, 35, 33, 32, 30, 29, 27,
			25, 24, 22, 21, 19, 18, 16, 15, 13, 12,
			10, 9, 7, 6, 4, 3
		};
		Vp8LevelCodes = new ushort[67][]
		{
			new ushort[2] { 1, 0 },
			new ushort[2] { 7, 1 },
			new ushort[2] { 15, 5 },
			new ushort[2] { 15, 13 },
			new ushort[2] { 51, 3 },
			new ushort[2] { 51, 3 },
			new ushort[2] { 51, 35 },
			new ushort[2] { 51, 35 },
			new ushort[2] { 51, 35 },
			new ushort[2] { 51, 35 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 19 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 211, 147 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 83 },
			new ushort[2] { 339, 339 }
		};
		Log2Table = new float[256]
		{
			0f, 0f, 1f, 1.5849625f, 2f, 2.321928f, 2.5849626f, 2.807355f, 3f, 3.169925f,
			3.321928f, 3.4594316f, 3.5849626f, 3.7004397f, 3.807355f, 3.9068906f, 4f, 4.087463f, 4.169925f, 4.2479277f,
			4.321928f, 4.3923173f, 4.4594316f, 4.523562f, 4.5849624f, 4.643856f, 4.70044f, 4.7548876f, 4.807355f, 4.857981f,
			4.9068904f, 4.9541965f, 5f, 5.044394f, 5.087463f, 5.129283f, 5.169925f, 5.2094536f, 5.2479277f, 5.2854023f,
			5.321928f, 5.357552f, 5.3923173f, 5.426265f, 5.4594316f, 5.491853f, 5.523562f, 5.554589f, 5.5849624f, 5.61471f,
			5.643856f, 5.6724253f, 5.70044f, 5.7279205f, 5.7548876f, 5.7813597f, 5.807355f, 5.83289f, 5.857981f, 5.882643f,
			5.9068904f, 5.9307375f, 5.9541965f, 5.97728f, 6f, 6.022368f, 6.044394f, 6.066089f, 6.087463f, 6.1085243f,
			6.129283f, 6.149747f, 6.169925f, 6.1898246f, 6.2094536f, 6.228819f, 6.2479277f, 6.2667866f, 6.2854023f, 6.3037806f,
			6.321928f, 6.33985f, 6.357552f, 6.3750396f, 6.3923173f, 6.409391f, 6.426265f, 6.4429436f, 6.4594316f, 6.4757333f,
			6.491853f, 6.507795f, 6.523562f, 6.539159f, 6.554589f, 6.5698557f, 6.5849624f, 6.5999126f, 6.61471f, 6.6293564f,
			6.643856f, 6.6582117f, 6.6724253f, 6.6865005f, 6.70044f, 6.7142453f, 6.7279205f, 6.741467f, 6.7548876f, 6.768184f,
			6.7813597f, 6.794416f, 6.807355f, 6.820179f, 6.83289f, 6.84549f, 6.857981f, 6.8703647f, 6.882643f, 6.894818f,
			6.9068904f, 6.9188633f, 6.9307375f, 6.9425144f, 6.9541965f, 6.965784f, 6.97728f, 6.9886847f, 7f, 7.011227f,
			7.022368f, 7.033423f, 7.044394f, 7.0552826f, 7.066089f, 7.0768156f, 7.087463f, 7.098032f, 7.1085243f, 7.1189413f,
			7.129283f, 7.139551f, 7.149747f, 7.159871f, 7.169925f, 7.179909f, 7.1898246f, 7.199672f, 7.2094536f, 7.2191687f,
			7.228819f, 7.2384048f, 7.2479277f, 7.2573876f, 7.2667866f, 7.2761245f, 7.2854023f, 7.2946205f, 7.3037806f, 7.312883f,
			7.321928f, 7.330917f, 7.33985f, 7.348728f, 7.357552f, 7.366322f, 7.3750396f, 7.383704f, 7.3923173f, 7.4008794f,
			7.409391f, 7.4178524f, 7.426265f, 7.434628f, 7.4429436f, 7.451211f, 7.4594316f, 7.4676056f, 7.4757333f, 7.4838157f,
			7.491853f, 7.499846f, 7.507795f, 7.5157f, 7.523562f, 7.5313816f, 7.539159f, 7.5468946f, 7.554589f, 7.5622425f,
			7.5698557f, 7.577429f, 7.5849624f, 7.592457f, 7.5999126f, 7.6073303f, 7.61471f, 7.6220517f, 7.6293564f, 7.636625f,
			7.643856f, 7.6510515f, 7.6582117f, 7.665336f, 7.6724253f, 7.67948f, 7.6865005f, 7.693487f, 7.70044f, 7.7073593f,
			7.7142453f, 7.7210994f, 7.7279205f, 7.7347097f, 7.741467f, 7.748193f, 7.7548876f, 7.7615514f, 7.768184f, 7.774787f,
			7.7813597f, 7.7879024f, 7.794416f, 7.8009f, 7.807355f, 7.8137813f, 7.820179f, 7.8265486f, 7.83289f, 7.839204f,
			7.84549f, 7.851749f, 7.857981f, 7.8641863f, 7.8703647f, 7.876517f, 7.882643f, 7.8887434f, 7.894818f, 7.900867f,
			7.9068904f, 7.9128895f, 7.9188633f, 7.9248123f, 7.9307375f, 7.936638f, 7.9425144f, 7.948367f, 7.9541965f, 7.960002f,
			7.965784f, 7.971544f, 7.97728f, 7.9829936f, 7.9886847f, 7.9943533f
		};
		SLog2Table = new float[256]
		{
			0f, 0f, 2f, 4.7548876f, 8f, 11.60964f, 15.509775f, 19.651484f, 24f, 28.529325f,
			33.21928f, 38.05375f, 43.01955f, 48.105717f, 53.302967f, 58.60336f, 64f, 69.48687f, 75.05865f, 80.710625f,
			86.43856f, 92.23866f, 98.1075f, 104.04192f, 110.0391f, 116.096405f, 122.21143f, 128.38196f, 134.60594f, 140.88145f,
			147.20671f, 153.58008f, 160f, 166.46501f, 172.97374f, 179.5249f, 186.1173f, 192.74977f, 199.42125f, 206.13069f,
			212.87712f, 219.65964f, 226.47733f, 233.32939f, 240.215f, 247.13339f, 254.08385f, 261.06567f, 268.0782f, 275.1208f,
			282.1928f, 289.2937f, 296.42285f, 303.57977f, 310.76392f, 317.9748f, 325.21188f, 332.47473f, 339.7629f, 347.07593f,
			354.41342f, 361.77496f, 369.16016f, 376.56863f, 384f, 391.45392f, 398.93002f, 406.42798f, 413.94748f, 421.4882f,
			429.0498f, 436.63205f, 444.2346f, 451.85718f, 459.49954f, 467.1614f, 474.8425f, 482.54257f, 490.26138f, 497.9987f,
			505.75424f, 513.52783f, 521.3193f, 529.1283f, 536.95465f, 544.7982f, 552.65875f, 560.5361f, 568.43f, 576.3403f,
			584.2668f, 592.2093f, 600.1677f, 608.1418f, 616.13135f, 624.1363f, 632.1564f, 640.1915f, 648.2416f, 656.30634f,
			664.3856f, 672.4794f, 680.5874f, 688.70953f, 696.8457f, 704.9958f, 713.15955f, 721.337f, 729.52783f, 737.7321f,
			745.9496f, 754.1802f, 762.42377f, 770.68024f, 778.94946f, 787.2314f, 795.5258f, 803.8327f, 812.15186f, 820.48334f,
			828.82684f, 837.18243f, 845.5499f, 853.92926f, 862.3203f, 870.723f, 879.13727f, 887.5629f, 896f, 904.4483f,
			912.90784f, 921.3784f, 929.86005f, 938.35254f, 946.85596f, 955.3701f, 963.89496f, 972.4304f, 980.9764f, 989.53284f,
			998.0996f, 1006.67676f, 1015.2641f, 1023.8616f, 1032.4692f, 1041.0868f, 1049.7144f, 1058.3518f, 1066.9991f, 1075.6561f,
			1084.3228f, 1092.9991f, 1101.6849f, 1110.3804f, 1119.0851f, 1127.7993f, 1136.5227f, 1145.2555f, 1153.9973f, 1162.7484f,
			1171.5085f, 1180.2776f, 1189.0557f, 1197.8427f, 1206.6385f, 1215.4431f, 1224.2566f, 1233.0786f, 1241.9093f, 1250.7487f,
			1259.5964f, 1268.4528f, 1277.3175f, 1286.1907f, 1295.0721f, 1303.9619f, 1312.86f, 1321.7662f, 1330.6805f, 1339.603f,
			1348.5336f, 1357.472f, 1366.4186f, 1375.373f, 1384.3354f, 1393.3055f, 1402.2836f, 1411.2693f, 1420.2627f, 1429.2638f,
			1438.2726f, 1447.289f, 1456.3127f, 1465.3442f, 1474.383f, 1483.4294f, 1492.4832f, 1501.5442f, 1510.6127f, 1519.6884f,
			1528.7712f, 1537.8615f, 1546.9587f, 1556.0632f, 1565.1748f, 1574.2935f, 1583.4191f, 1592.5518f, 1601.6914f, 1610.838f,
			1619.9916f, 1629.152f, 1638.3191f, 1647.4932f, 1656.674f, 1665.8615f, 1675.0557f, 1684.2566f, 1693.4642f, 1702.6783f,
			1711.8992f, 1721.1265f, 1730.3604f, 1739.6007f, 1748.8475f, 1758.1007f, 1767.3605f, 1776.6265f, 1785.8989f, 1795.1776f,
			1804.4628f, 1813.754f, 1823.0516f, 1832.3553f, 1841.6654f, 1850.9814f, 1860.3037f, 1869.6322f, 1878.9667f, 1888.3071f,
			1897.6537f, 1907.0063f, 1916.3649f, 1925.7295f, 1935.0999f, 1944.4763f, 1953.8585f, 1963.2467f, 1972.6406f, 1982.0405f,
			1991.446f, 2000.8574f, 2010.2745f, 2019.6974f, 2029.1259f, 2038.5602f
		};
		CodeToPlane = new int[120]
		{
			24, 7, 23, 25, 40, 6, 39, 41, 22, 26,
			38, 42, 56, 5, 55, 57, 21, 27, 54, 58,
			37, 43, 72, 4, 71, 73, 20, 28, 53, 59,
			70, 74, 36, 44, 88, 69, 75, 52, 60, 3,
			87, 89, 19, 29, 86, 90, 35, 45, 68, 76,
			85, 91, 51, 61, 104, 2, 103, 105, 18, 30,
			102, 106, 34, 46, 84, 92, 67, 77, 101, 107,
			50, 62, 120, 1, 119, 121, 83, 93, 17, 31,
			100, 108, 66, 78, 118, 122, 33, 47, 117, 123,
			49, 63, 99, 109, 82, 94, 0, 116, 124, 65,
			79, 16, 32, 98, 110, 48, 115, 125, 81, 95,
			64, 114, 126, 97, 111, 80, 113, 127, 96, 112
		};
		PlaneToCodeLut = new uint[128]
		{
			96u, 73u, 55u, 39u, 23u, 13u, 5u, 1u, 255u, 255u,
			255u, 255u, 255u, 255u, 255u, 255u, 101u, 78u, 58u, 42u,
			26u, 16u, 8u, 2u, 0u, 3u, 9u, 17u, 27u, 43u,
			59u, 79u, 102u, 86u, 62u, 46u, 32u, 20u, 10u, 6u,
			4u, 7u, 11u, 21u, 33u, 47u, 63u, 87u, 105u, 90u,
			70u, 52u, 37u, 28u, 18u, 14u, 12u, 15u, 19u, 29u,
			38u, 53u, 71u, 91u, 110u, 99u, 82u, 66u, 48u, 35u,
			30u, 24u, 22u, 25u, 31u, 36u, 49u, 67u, 83u, 100u,
			115u, 108u, 94u, 76u, 64u, 50u, 44u, 40u, 34u, 41u,
			45u, 51u, 65u, 77u, 95u, 109u, 118u, 113u, 103u, 92u,
			80u, 68u, 60u, 56u, 54u, 57u, 61u, 69u, 81u, 93u,
			104u, 114u, 119u, 116u, 111u, 106u, 97u, 88u, 84u, 74u,
			72u, 75u, 85u, 89u, 98u, 107u, 112u, 117u
		};
		AcTable = new ushort[128]
		{
			4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
			14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
			24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
			34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
			44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
			54, 55, 56, 57, 58, 60, 62, 64, 66, 68,
			70, 72, 74, 76, 78, 80, 82, 84, 86, 88,
			90, 92, 94, 96, 98, 100, 102, 104, 106, 108,
			110, 112, 114, 116, 119, 122, 125, 128, 131, 134,
			137, 140, 143, 146, 149, 152, 155, 158, 161, 164,
			167, 170, 173, 177, 181, 185, 189, 193, 197, 201,
			205, 209, 213, 217, 221, 225, 229, 234, 239, 245,
			249, 254, 259, 264, 269, 274, 279, 284
		};
		AcTable2 = new ushort[128]
		{
			8, 8, 9, 10, 12, 13, 15, 17, 18, 20,
			21, 23, 24, 26, 27, 29, 31, 32, 34, 35,
			37, 38, 40, 41, 43, 44, 46, 48, 49, 51,
			52, 54, 55, 57, 58, 60, 62, 63, 65, 66,
			68, 69, 71, 72, 74, 75, 77, 79, 80, 82,
			83, 85, 86, 88, 89, 93, 96, 99, 102, 105,
			108, 111, 114, 117, 120, 124, 127, 130, 133, 136,
			139, 142, 145, 148, 151, 155, 158, 161, 164, 167,
			170, 173, 176, 179, 184, 189, 193, 198, 203, 207,
			212, 217, 221, 226, 230, 235, 240, 244, 249, 254,
			258, 263, 268, 274, 280, 286, 292, 299, 305, 311,
			317, 323, 330, 336, 342, 348, 354, 362, 370, 379,
			385, 393, 401, 409, 416, 424, 432, 440
		};
		CoeffsUpdateProba = new byte[4, 8, 3, 11]
		{
			{
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						176, 246, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						223, 241, 252, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						249, 253, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 244, 252, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						234, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						253, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 246, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						239, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 248, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						251, 255, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						251, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 253, 255, 254, 255, 255, 255, 255, 255,
						255
					},
					{
						250, 255, 254, 255, 254, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				}
			},
			{
				{
					{
						217, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						225, 252, 241, 253, 255, 255, 254, 255, 255, 255,
						255
					},
					{
						234, 250, 241, 250, 253, 255, 253, 254, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						223, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						238, 253, 254, 254, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 248, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						249, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 253, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						247, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						252, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						253, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						250, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				}
			},
			{
				{
					{
						186, 251, 250, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						234, 251, 244, 254, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						251, 251, 243, 253, 254, 255, 254, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						236, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						251, 253, 253, 254, 254, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 254, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				}
			},
			{
				{
					{
						248, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						250, 254, 252, 254, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						248, 254, 249, 253, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 253, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						246, 253, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						252, 254, 251, 254, 254, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 254, 252, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						248, 254, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						253, 255, 254, 254, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 251, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						245, 251, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						253, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 251, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						252, 253, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 254, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 252, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						249, 255, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 254, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 253, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						250, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				},
				{
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					},
					{
						255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
						255
					}
				}
			}
		};
		DefaultCoeffsProba = new byte[4, 8, 3, 11]
		{
			{
				{
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						253, 136, 254, 255, 228, 219, 128, 128, 128, 128,
						128
					},
					{
						189, 129, 242, 255, 227, 213, 255, 219, 128, 128,
						128
					},
					{
						106, 126, 227, 252, 214, 209, 255, 255, 128, 128,
						128
					}
				},
				{
					{
						1, 98, 248, 255, 236, 226, 255, 255, 128, 128,
						128
					},
					{
						181, 133, 238, 254, 221, 234, 255, 154, 128, 128,
						128
					},
					{
						78, 134, 202, 247, 198, 180, 255, 219, 128, 128,
						128
					}
				},
				{
					{
						1, 185, 249, 255, 243, 255, 128, 128, 128, 128,
						128
					},
					{
						184, 150, 247, 255, 236, 224, 128, 128, 128, 128,
						128
					},
					{
						77, 110, 216, 255, 236, 230, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 101, 251, 255, 241, 255, 128, 128, 128, 128,
						128
					},
					{
						170, 139, 241, 252, 236, 209, 255, 255, 128, 128,
						128
					},
					{
						37, 116, 196, 243, 228, 255, 255, 255, 128, 128,
						128
					}
				},
				{
					{
						1, 204, 254, 255, 245, 255, 128, 128, 128, 128,
						128
					},
					{
						207, 160, 250, 255, 238, 128, 128, 128, 128, 128,
						128
					},
					{
						102, 103, 231, 255, 211, 171, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 152, 252, 255, 240, 255, 128, 128, 128, 128,
						128
					},
					{
						177, 135, 243, 255, 234, 225, 128, 128, 128, 128,
						128
					},
					{
						80, 129, 211, 255, 194, 224, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						246, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						255, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				}
			},
			{
				{
					{
						198, 35, 237, 223, 193, 187, 162, 160, 145, 155,
						62
					},
					{
						131, 45, 198, 221, 172, 176, 220, 157, 252, 221,
						1
					},
					{
						68, 47, 146, 208, 149, 167, 221, 162, 255, 223,
						128
					}
				},
				{
					{
						1, 149, 241, 255, 221, 224, 255, 255, 128, 128,
						128
					},
					{
						184, 141, 234, 253, 222, 220, 255, 199, 128, 128,
						128
					},
					{
						81, 99, 181, 242, 176, 190, 249, 202, 255, 255,
						128
					}
				},
				{
					{
						1, 129, 232, 253, 214, 197, 242, 196, 255, 255,
						128
					},
					{
						99, 121, 210, 250, 201, 198, 255, 202, 128, 128,
						128
					},
					{
						23, 91, 163, 242, 170, 187, 247, 210, 255, 255,
						128
					}
				},
				{
					{
						1, 200, 246, 255, 234, 255, 128, 128, 128, 128,
						128
					},
					{
						109, 178, 241, 255, 231, 245, 255, 255, 128, 128,
						128
					},
					{
						44, 130, 201, 253, 205, 192, 255, 255, 128, 128,
						128
					}
				},
				{
					{
						1, 132, 239, 251, 219, 209, 255, 165, 128, 128,
						128
					},
					{
						94, 136, 225, 251, 218, 190, 255, 255, 128, 128,
						128
					},
					{
						22, 100, 174, 245, 186, 161, 255, 199, 128, 128,
						128
					}
				},
				{
					{
						1, 182, 249, 255, 232, 235, 128, 128, 128, 128,
						128
					},
					{
						124, 143, 241, 255, 227, 234, 128, 128, 128, 128,
						128
					},
					{
						35, 77, 181, 251, 193, 211, 255, 205, 128, 128,
						128
					}
				},
				{
					{
						1, 157, 247, 255, 236, 231, 255, 255, 128, 128,
						128
					},
					{
						121, 141, 235, 255, 225, 227, 255, 255, 128, 128,
						128
					},
					{
						45, 99, 188, 251, 195, 217, 255, 224, 128, 128,
						128
					}
				},
				{
					{
						1, 1, 251, 255, 213, 255, 128, 128, 128, 128,
						128
					},
					{
						203, 1, 248, 255, 255, 128, 128, 128, 128, 128,
						128
					},
					{
						137, 1, 177, 255, 224, 255, 128, 128, 128, 128,
						128
					}
				}
			},
			{
				{
					{
						253, 9, 248, 251, 207, 208, 255, 192, 128, 128,
						128
					},
					{
						175, 13, 224, 243, 193, 185, 249, 198, 255, 255,
						128
					},
					{
						73, 17, 171, 221, 161, 179, 236, 167, 255, 234,
						128
					}
				},
				{
					{
						1, 95, 247, 253, 212, 183, 255, 255, 128, 128,
						128
					},
					{
						239, 90, 244, 250, 211, 209, 255, 255, 128, 128,
						128
					},
					{
						155, 77, 195, 248, 188, 195, 255, 255, 128, 128,
						128
					}
				},
				{
					{
						1, 24, 239, 251, 218, 219, 255, 205, 128, 128,
						128
					},
					{
						201, 51, 219, 255, 196, 186, 128, 128, 128, 128,
						128
					},
					{
						69, 46, 190, 239, 201, 218, 255, 228, 128, 128,
						128
					}
				},
				{
					{
						1, 191, 251, 255, 255, 128, 128, 128, 128, 128,
						128
					},
					{
						223, 165, 249, 255, 213, 255, 128, 128, 128, 128,
						128
					},
					{
						141, 124, 248, 255, 255, 128, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 16, 248, 255, 255, 128, 128, 128, 128, 128,
						128
					},
					{
						190, 36, 230, 255, 236, 255, 128, 128, 128, 128,
						128
					},
					{
						149, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 226, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						247, 192, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						240, 128, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						1, 134, 252, 255, 255, 128, 128, 128, 128, 128,
						128
					},
					{
						213, 62, 250, 255, 255, 128, 128, 128, 128, 128,
						128
					},
					{
						55, 93, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				},
				{
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				}
			},
			{
				{
					{
						202, 24, 213, 235, 186, 191, 220, 160, 240, 175,
						255
					},
					{
						126, 38, 182, 232, 169, 184, 228, 174, 255, 187,
						128
					},
					{
						61, 46, 138, 219, 151, 178, 240, 170, 255, 216,
						128
					}
				},
				{
					{
						1, 112, 230, 250, 199, 191, 247, 159, 255, 255,
						128
					},
					{
						166, 109, 228, 252, 211, 215, 255, 174, 128, 128,
						128
					},
					{
						39, 77, 162, 232, 172, 180, 245, 178, 255, 255,
						128
					}
				},
				{
					{
						1, 52, 220, 246, 198, 199, 249, 220, 255, 255,
						128
					},
					{
						124, 74, 191, 243, 183, 193, 250, 221, 255, 255,
						128
					},
					{
						24, 71, 130, 219, 154, 170, 243, 182, 255, 255,
						128
					}
				},
				{
					{
						1, 182, 225, 249, 219, 240, 255, 224, 128, 128,
						128
					},
					{
						149, 150, 226, 252, 216, 205, 255, 171, 128, 128,
						128
					},
					{
						28, 108, 170, 242, 183, 194, 254, 223, 255, 255,
						128
					}
				},
				{
					{
						1, 81, 230, 252, 204, 203, 255, 192, 128, 128,
						128
					},
					{
						123, 102, 209, 247, 188, 196, 255, 233, 128, 128,
						128
					},
					{
						20, 95, 153, 243, 164, 173, 255, 203, 128, 128,
						128
					}
				},
				{
					{
						1, 222, 248, 255, 216, 213, 128, 128, 128, 128,
						128
					},
					{
						168, 175, 246, 252, 235, 205, 255, 255, 128, 128,
						128
					},
					{
						47, 116, 215, 255, 211, 212, 255, 255, 128, 128,
						128
					}
				},
				{
					{
						1, 121, 236, 253, 212, 214, 255, 255, 128, 128,
						128
					},
					{
						141, 84, 213, 252, 201, 202, 255, 219, 128, 128,
						128
					},
					{
						42, 80, 160, 240, 162, 185, 255, 205, 128, 128,
						128
					}
				},
				{
					{
						1, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						244, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					},
					{
						238, 1, 255, 128, 128, 128, 128, 128, 128, 128,
						128
					}
				}
			}
		};
		PrefixEncodeCode = new(int, int)[512]
		{
			(0, 0),
			(0, 0),
			(1, 0),
			(2, 0),
			(3, 0),
			(4, 1),
			(4, 1),
			(5, 1),
			(5, 1),
			(6, 2),
			(6, 2),
			(6, 2),
			(6, 2),
			(7, 2),
			(7, 2),
			(7, 2),
			(7, 2),
			(8, 3),
			(8, 3),
			(8, 3),
			(8, 3),
			(8, 3),
			(8, 3),
			(8, 3),
			(8, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(9, 3),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(10, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(11, 4),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(12, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(13, 5),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(14, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(15, 6),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(16, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7),
			(17, 7)
		};
		InvAlpha = new uint[1021]
		{
			0u, 524288u, 262144u, 174762u, 131072u, 104857u, 87381u, 74898u, 65536u, 58254u,
			52428u, 47662u, 43690u, 40329u, 37449u, 34952u, 32768u, 30840u, 29127u, 27594u,
			26214u, 24966u, 23831u, 22795u, 21845u, 20971u, 20164u, 19418u, 18724u, 18078u,
			17476u, 16912u, 16384u, 15887u, 15420u, 14979u, 14563u, 14169u, 13797u, 13443u,
			13107u, 12787u, 12483u, 12192u, 11915u, 11650u, 11397u, 11155u, 10922u, 10699u,
			10485u, 10280u, 10082u, 9892u, 9709u, 9532u, 9362u, 9198u, 9039u, 8886u,
			8738u, 8594u, 8456u, 8322u, 8192u, 8065u, 7943u, 7825u, 7710u, 7598u,
			7489u, 7384u, 7281u, 7182u, 7084u, 6990u, 6898u, 6808u, 6721u, 6636u,
			6553u, 6472u, 6393u, 6316u, 6241u, 6168u, 6096u, 6026u, 5957u, 5890u,
			5825u, 5761u, 5698u, 5637u, 5577u, 5518u, 5461u, 5405u, 5349u, 5295u,
			5242u, 5190u, 5140u, 5090u, 5041u, 4993u, 4946u, 4899u, 4854u, 4809u,
			4766u, 4723u, 4681u, 4639u, 4599u, 4559u, 4519u, 4481u, 4443u, 4405u,
			4369u, 4332u, 4297u, 4262u, 4228u, 4194u, 4161u, 4128u, 4096u, 4064u,
			4032u, 4002u, 3971u, 3942u, 3912u, 3883u, 3855u, 3826u, 3799u, 3771u,
			3744u, 3718u, 3692u, 3666u, 3640u, 3615u, 3591u, 3566u, 3542u, 3518u,
			3495u, 3472u, 3449u, 3426u, 3404u, 3382u, 3360u, 3339u, 3318u, 3297u,
			3276u, 3256u, 3236u, 3216u, 3196u, 3177u, 3158u, 3139u, 3120u, 3102u,
			3084u, 3066u, 3048u, 3030u, 3013u, 2995u, 2978u, 2962u, 2945u, 2928u,
			2912u, 2896u, 2880u, 2864u, 2849u, 2833u, 2818u, 2803u, 2788u, 2774u,
			2759u, 2744u, 2730u, 2716u, 2702u, 2688u, 2674u, 2661u, 2647u, 2634u,
			2621u, 2608u, 2595u, 2582u, 2570u, 2557u, 2545u, 2532u, 2520u, 2508u,
			2496u, 2484u, 2473u, 2461u, 2449u, 2438u, 2427u, 2416u, 2404u, 2394u,
			2383u, 2372u, 2361u, 2351u, 2340u, 2330u, 2319u, 2309u, 2299u, 2289u,
			2279u, 2269u, 2259u, 2250u, 2240u, 2231u, 2221u, 2212u, 2202u, 2193u,
			2184u, 2175u, 2166u, 2157u, 2148u, 2139u, 2131u, 2122u, 2114u, 2105u,
			2097u, 2088u, 2080u, 2072u, 2064u, 2056u, 2048u, 2040u, 2032u, 2024u,
			2016u, 2008u, 2001u, 1993u, 1985u, 1978u, 1971u, 1963u, 1956u, 1949u,
			1941u, 1934u, 1927u, 1920u, 1913u, 1906u, 1899u, 1892u, 1885u, 1879u,
			1872u, 1865u, 1859u, 1852u, 1846u, 1839u, 1833u, 1826u, 1820u, 1814u,
			1807u, 1801u, 1795u, 1789u, 1783u, 1777u, 1771u, 1765u, 1759u, 1753u,
			1747u, 1741u, 1736u, 1730u, 1724u, 1718u, 1713u, 1707u, 1702u, 1696u,
			1691u, 1685u, 1680u, 1675u, 1669u, 1664u, 1659u, 1653u, 1648u, 1643u,
			1638u, 1633u, 1628u, 1623u, 1618u, 1613u, 1608u, 1603u, 1598u, 1593u,
			1588u, 1583u, 1579u, 1574u, 1569u, 1565u, 1560u, 1555u, 1551u, 1546u,
			1542u, 1537u, 1533u, 1528u, 1524u, 1519u, 1515u, 1510u, 1506u, 1502u,
			1497u, 1493u, 1489u, 1485u, 1481u, 1476u, 1472u, 1468u, 1464u, 1460u,
			1456u, 1452u, 1448u, 1444u, 1440u, 1436u, 1432u, 1428u, 1424u, 1420u,
			1416u, 1413u, 1409u, 1405u, 1401u, 1398u, 1394u, 1390u, 1387u, 1383u,
			1379u, 1376u, 1372u, 1368u, 1365u, 1361u, 1358u, 1354u, 1351u, 1347u,
			1344u, 1340u, 1337u, 1334u, 1330u, 1327u, 1323u, 1320u, 1317u, 1314u,
			1310u, 1307u, 1304u, 1300u, 1297u, 1294u, 1291u, 1288u, 1285u, 1281u,
			1278u, 1275u, 1272u, 1269u, 1266u, 1263u, 1260u, 1257u, 1254u, 1251u,
			1248u, 1245u, 1242u, 1239u, 1236u, 1233u, 1230u, 1227u, 1224u, 1222u,
			1219u, 1216u, 1213u, 1210u, 1208u, 1205u, 1202u, 1199u, 1197u, 1194u,
			1191u, 1188u, 1186u, 1183u, 1180u, 1178u, 1175u, 1172u, 1170u, 1167u,
			1165u, 1162u, 1159u, 1157u, 1154u, 1152u, 1149u, 1147u, 1144u, 1142u,
			1139u, 1137u, 1134u, 1132u, 1129u, 1127u, 1125u, 1122u, 1120u, 1117u,
			1115u, 1113u, 1110u, 1108u, 1106u, 1103u, 1101u, 1099u, 1096u, 1094u,
			1092u, 1089u, 1087u, 1085u, 1083u, 1081u, 1078u, 1076u, 1074u, 1072u,
			1069u, 1067u, 1065u, 1063u, 1061u, 1059u, 1057u, 1054u, 1052u, 1050u,
			1048u, 1046u, 1044u, 1042u, 1040u, 1038u, 1036u, 1034u, 1032u, 1030u,
			1028u, 1026u, 1024u, 1022u, 1020u, 1018u, 1016u, 1014u, 1012u, 1010u,
			1008u, 1006u, 1004u, 1002u, 1000u, 998u, 996u, 994u, 992u, 991u,
			989u, 987u, 985u, 983u, 981u, 979u, 978u, 976u, 974u, 972u,
			970u, 969u, 967u, 965u, 963u, 961u, 960u, 958u, 956u, 954u,
			953u, 951u, 949u, 948u, 946u, 944u, 942u, 941u, 939u, 937u,
			936u, 934u, 932u, 931u, 929u, 927u, 926u, 924u, 923u, 921u,
			919u, 918u, 916u, 914u, 913u, 911u, 910u, 908u, 907u, 905u,
			903u, 902u, 900u, 899u, 897u, 896u, 894u, 893u, 891u, 890u,
			888u, 887u, 885u, 884u, 882u, 881u, 879u, 878u, 876u, 875u,
			873u, 872u, 870u, 869u, 868u, 866u, 865u, 863u, 862u, 860u,
			859u, 858u, 856u, 855u, 853u, 852u, 851u, 849u, 848u, 846u,
			845u, 844u, 842u, 841u, 840u, 838u, 837u, 836u, 834u, 833u,
			832u, 830u, 829u, 828u, 826u, 825u, 824u, 823u, 821u, 820u,
			819u, 817u, 816u, 815u, 814u, 812u, 811u, 810u, 809u, 807u,
			806u, 805u, 804u, 802u, 801u, 800u, 799u, 798u, 796u, 795u,
			794u, 793u, 791u, 790u, 789u, 788u, 787u, 786u, 784u, 783u,
			782u, 781u, 780u, 779u, 777u, 776u, 775u, 774u, 773u, 772u,
			771u, 769u, 768u, 767u, 766u, 765u, 764u, 763u, 762u, 760u,
			759u, 758u, 757u, 756u, 755u, 754u, 753u, 752u, 751u, 750u,
			748u, 747u, 746u, 745u, 744u, 743u, 742u, 741u, 740u, 739u,
			738u, 737u, 736u, 735u, 734u, 733u, 732u, 731u, 730u, 729u,
			728u, 727u, 726u, 725u, 724u, 723u, 722u, 721u, 720u, 719u,
			718u, 717u, 716u, 715u, 714u, 713u, 712u, 711u, 710u, 709u,
			708u, 707u, 706u, 705u, 704u, 703u, 702u, 701u, 700u, 699u,
			699u, 698u, 697u, 696u, 695u, 694u, 693u, 692u, 691u, 690u,
			689u, 688u, 688u, 687u, 686u, 685u, 684u, 683u, 682u, 681u,
			680u, 680u, 679u, 678u, 677u, 676u, 675u, 674u, 673u, 673u,
			672u, 671u, 670u, 669u, 668u, 667u, 667u, 666u, 665u, 664u,
			663u, 662u, 661u, 661u, 660u, 659u, 658u, 657u, 657u, 656u,
			655u, 654u, 653u, 652u, 652u, 651u, 650u, 649u, 648u, 648u,
			647u, 646u, 645u, 644u, 644u, 643u, 642u, 641u, 640u, 640u,
			639u, 638u, 637u, 637u, 636u, 635u, 634u, 633u, 633u, 632u,
			631u, 630u, 630u, 629u, 628u, 627u, 627u, 626u, 625u, 624u,
			624u, 623u, 622u, 621u, 621u, 620u, 619u, 618u, 618u, 617u,
			616u, 616u, 615u, 614u, 613u, 613u, 612u, 611u, 611u, 610u,
			609u, 608u, 608u, 607u, 606u, 606u, 605u, 604u, 604u, 603u,
			602u, 601u, 601u, 600u, 599u, 599u, 598u, 597u, 597u, 596u,
			595u, 595u, 594u, 593u, 593u, 592u, 591u, 591u, 590u, 589u,
			589u, 588u, 587u, 587u, 586u, 585u, 585u, 584u, 583u, 583u,
			582u, 581u, 581u, 580u, 579u, 579u, 578u, 578u, 577u, 576u,
			576u, 575u, 574u, 574u, 573u, 572u, 572u, 571u, 571u, 570u,
			569u, 569u, 568u, 568u, 567u, 566u, 566u, 565u, 564u, 564u,
			563u, 563u, 562u, 561u, 561u, 560u, 560u, 559u, 558u, 558u,
			557u, 557u, 556u, 555u, 555u, 554u, 554u, 553u, 553u, 552u,
			551u, 551u, 550u, 550u, 549u, 548u, 548u, 547u, 547u, 546u,
			546u, 545u, 544u, 544u, 543u, 543u, 542u, 542u, 541u, 541u,
			540u, 539u, 539u, 538u, 538u, 537u, 537u, 536u, 536u, 535u,
			534u, 534u, 533u, 533u, 532u, 532u, 531u, 531u, 530u, 530u,
			529u, 529u, 528u, 527u, 527u, 526u, 526u, 525u, 525u, 524u,
			524u, 523u, 523u, 522u, 522u, 521u, 521u, 520u, 520u, 519u,
			519u, 518u, 518u, 517u, 517u, 516u, 516u, 515u, 515u, 514u,
			514u
		};
		double num = 0.03125763125763126;
		double num2 = 1.0 / 255.0;
		int num3 = 0;
		while (num3 < 256)
		{
			GammaToLinearTab[num3] = (ushort)(Math.Pow(num2 * (double)num3, 0.8) * 4095.0 + 0.5);
			int num4 = num3 + 1;
			num3 = num4;
		}
		int num5 = 0;
		while (num5 <= 32)
		{
			LinearToGammaTab[num5] = (int)(255.0 * Math.Pow(num * (double)num5, 1.25) + 0.5);
			int num4 = num5 + 1;
			num5 = num4;
		}
		InitializeModesProbabilities();
		InitializeFixedCostsI4();
	}

	private static void InitializeModesProbabilities()
	{
		ModesProba[0, 0] = new byte[9] { 231, 120, 48, 89, 115, 113, 120, 152, 112 };
		ModesProba[0, 1] = new byte[9] { 152, 179, 64, 126, 170, 118, 46, 70, 95 };
		ModesProba[0, 2] = new byte[9] { 175, 69, 143, 80, 85, 82, 72, 155, 103 };
		ModesProba[0, 3] = new byte[9] { 56, 58, 10, 171, 218, 189, 17, 13, 152 };
		ModesProba[0, 4] = new byte[9] { 114, 26, 17, 163, 44, 195, 21, 10, 173 };
		ModesProba[0, 5] = new byte[9] { 121, 24, 80, 195, 26, 62, 44, 64, 85 };
		ModesProba[0, 6] = new byte[9] { 144, 71, 10, 38, 171, 213, 144, 34, 26 };
		ModesProba[0, 7] = new byte[9] { 170, 46, 55, 19, 136, 160, 33, 206, 71 };
		ModesProba[0, 8] = new byte[9] { 63, 20, 8, 114, 114, 208, 12, 9, 226 };
		ModesProba[0, 9] = new byte[9] { 81, 40, 11, 96, 182, 84, 29, 16, 36 };
		ModesProba[1, 0] = new byte[9] { 134, 183, 89, 137, 98, 101, 106, 165, 148 };
		ModesProba[1, 1] = new byte[9] { 72, 187, 100, 130, 157, 111, 32, 75, 80 };
		ModesProba[1, 2] = new byte[9] { 66, 102, 167, 99, 74, 62, 40, 234, 128 };
		ModesProba[1, 3] = new byte[9] { 41, 53, 9, 178, 241, 141, 26, 8, 107 };
		ModesProba[1, 4] = new byte[9] { 74, 43, 26, 146, 73, 166, 49, 23, 157 };
		ModesProba[1, 5] = new byte[9] { 65, 38, 105, 160, 51, 52, 31, 115, 128 };
		ModesProba[1, 6] = new byte[9] { 104, 79, 12, 27, 217, 255, 87, 17, 7 };
		ModesProba[1, 7] = new byte[9] { 87, 68, 71, 44, 114, 51, 15, 186, 23 };
		ModesProba[1, 8] = new byte[9] { 47, 41, 14, 110, 182, 183, 21, 17, 194 };
		ModesProba[1, 9] = new byte[9] { 66, 45, 25, 102, 197, 189, 23, 18, 22 };
		ModesProba[2, 0] = new byte[9] { 88, 88, 147, 150, 42, 46, 45, 196, 205 };
		ModesProba[2, 1] = new byte[9] { 43, 97, 183, 117, 85, 38, 35, 179, 61 };
		ModesProba[2, 2] = new byte[9] { 39, 53, 200, 87, 26, 21, 43, 232, 171 };
		ModesProba[2, 3] = new byte[9] { 56, 34, 51, 104, 114, 102, 29, 93, 77 };
		ModesProba[2, 4] = new byte[9] { 39, 28, 85, 171, 58, 165, 90, 98, 64 };
		ModesProba[2, 5] = new byte[9] { 34, 22, 116, 206, 23, 34, 43, 166, 73 };
		ModesProba[2, 6] = new byte[9] { 107, 54, 32, 26, 51, 1, 81, 43, 31 };
		ModesProba[2, 7] = new byte[9] { 68, 25, 106, 22, 64, 171, 36, 225, 114 };
		ModesProba[2, 8] = new byte[9] { 34, 19, 21, 102, 132, 188, 16, 76, 124 };
		ModesProba[2, 9] = new byte[9] { 62, 18, 78, 95, 85, 57, 50, 48, 51 };
		ModesProba[3, 0] = new byte[9] { 193, 101, 35, 159, 215, 111, 89, 46, 111 };
		ModesProba[3, 1] = new byte[9] { 60, 148, 31, 172, 219, 228, 21, 18, 111 };
		ModesProba[3, 2] = new byte[9] { 112, 113, 77, 85, 179, 255, 38, 120, 114 };
		ModesProba[3, 3] = new byte[9] { 40, 42, 1, 196, 245, 209, 10, 25, 109 };
		ModesProba[3, 4] = new byte[9] { 88, 43, 29, 140, 166, 213, 37, 43, 154 };
		ModesProba[3, 5] = new byte[9] { 61, 63, 30, 155, 67, 45, 68, 1, 209 };
		ModesProba[3, 6] = new byte[9] { 100, 80, 8, 43, 154, 1, 51, 26, 71 };
		ModesProba[3, 7] = new byte[9] { 142, 78, 78, 16, 255, 128, 34, 197, 171 };
		ModesProba[3, 8] = new byte[9] { 41, 40, 5, 102, 211, 183, 4, 1, 221 };
		ModesProba[3, 9] = new byte[9] { 51, 50, 17, 168, 209, 192, 23, 25, 82 };
		ModesProba[4, 0] = new byte[9] { 138, 31, 36, 171, 27, 166, 38, 44, 229 };
		ModesProba[4, 1] = new byte[9] { 67, 87, 58, 169, 82, 115, 26, 59, 179 };
		ModesProba[4, 2] = new byte[9] { 63, 59, 90, 180, 59, 166, 93, 73, 154 };
		ModesProba[4, 3] = new byte[9] { 40, 40, 21, 116, 143, 209, 34, 39, 175 };
		ModesProba[4, 4] = new byte[9] { 47, 15, 16, 183, 34, 223, 49, 45, 183 };
		ModesProba[4, 5] = new byte[9] { 46, 17, 33, 183, 6, 98, 15, 32, 183 };
		ModesProba[4, 6] = new byte[9] { 57, 46, 22, 24, 128, 1, 54, 17, 37 };
		ModesProba[4, 7] = new byte[9] { 65, 32, 73, 115, 28, 128, 23, 128, 205 };
		ModesProba[4, 8] = new byte[9] { 40, 3, 9, 115, 51, 192, 18, 6, 223 };
		ModesProba[4, 9] = new byte[9] { 87, 37, 9, 115, 59, 77, 64, 21, 47 };
		ModesProba[5, 0] = new byte[9] { 104, 55, 44, 218, 9, 54, 53, 130, 226 };
		ModesProba[5, 1] = new byte[9] { 64, 90, 70, 205, 40, 41, 23, 26, 57 };
		ModesProba[5, 2] = new byte[9] { 54, 57, 112, 184, 5, 41, 38, 166, 213 };
		ModesProba[5, 3] = new byte[9] { 30, 34, 26, 133, 152, 116, 10, 32, 134 };
		ModesProba[5, 4] = new byte[9] { 39, 19, 53, 221, 26, 114, 32, 73, 255 };
		ModesProba[5, 5] = new byte[9] { 31, 9, 65, 234, 2, 15, 1, 118, 73 };
		ModesProba[5, 6] = new byte[9] { 75, 32, 12, 51, 192, 255, 160, 43, 51 };
		ModesProba[5, 7] = new byte[9] { 88, 31, 35, 67, 102, 85, 55, 186, 85 };
		ModesProba[5, 8] = new byte[9] { 56, 21, 23, 111, 59, 205, 45, 37, 192 };
		ModesProba[5, 9] = new byte[9] { 55, 38, 70, 124, 73, 102, 1, 34, 98 };
		ModesProba[6, 0] = new byte[9] { 125, 98, 42, 88, 104, 85, 117, 175, 82 };
		ModesProba[6, 1] = new byte[9] { 95, 84, 53, 89, 128, 100, 113, 101, 45 };
		ModesProba[6, 2] = new byte[9] { 75, 79, 123, 47, 51, 128, 81, 171, 1 };
		ModesProba[6, 3] = new byte[9] { 57, 17, 5, 71, 102, 57, 53, 41, 49 };
		ModesProba[6, 4] = new byte[9] { 38, 33, 13, 121, 57, 73, 26, 1, 85 };
		ModesProba[6, 5] = new byte[9] { 41, 10, 67, 138, 77, 110, 90, 47, 114 };
		ModesProba[6, 6] = new byte[9] { 115, 21, 2, 10, 102, 255, 166, 23, 6 };
		ModesProba[6, 7] = new byte[9] { 101, 29, 16, 10, 85, 128, 101, 196, 26 };
		ModesProba[6, 8] = new byte[9] { 57, 18, 10, 102, 102, 213, 34, 20, 43 };
		ModesProba[6, 9] = new byte[9] { 117, 20, 15, 36, 163, 128, 68, 1, 26 };
		ModesProba[7, 0] = new byte[9] { 102, 61, 71, 37, 34, 53, 31, 243, 192 };
		ModesProba[7, 1] = new byte[9] { 69, 60, 71, 38, 73, 119, 28, 222, 37 };
		ModesProba[7, 2] = new byte[9] { 68, 45, 128, 34, 1, 47, 11, 245, 171 };
		ModesProba[7, 3] = new byte[9] { 62, 17, 19, 70, 146, 85, 55, 62, 70 };
		ModesProba[7, 4] = new byte[9] { 37, 43, 37, 154, 100, 163, 85, 160, 1 };
		ModesProba[7, 5] = new byte[9] { 63, 9, 92, 136, 28, 64, 32, 201, 85 };
		ModesProba[7, 6] = new byte[9] { 75, 15, 9, 9, 64, 255, 184, 119, 16 };
		ModesProba[7, 7] = new byte[9] { 86, 6, 28, 5, 64, 255, 25, 248, 1 };
		ModesProba[7, 8] = new byte[9] { 56, 8, 17, 132, 137, 255, 55, 116, 128 };
		ModesProba[7, 9] = new byte[9] { 58, 15, 20, 82, 135, 57, 26, 121, 40 };
		ModesProba[8, 0] = new byte[9] { 164, 50, 31, 137, 154, 133, 25, 35, 218 };
		ModesProba[8, 1] = new byte[9] { 51, 103, 44, 131, 131, 123, 31, 6, 158 };
		ModesProba[8, 2] = new byte[9] { 86, 40, 64, 135, 148, 224, 45, 183, 128 };
		ModesProba[8, 3] = new byte[9] { 22, 26, 17, 131, 240, 154, 14, 1, 209 };
		ModesProba[8, 4] = new byte[9] { 45, 16, 21, 91, 64, 222, 7, 1, 197 };
		ModesProba[8, 5] = new byte[9] { 56, 21, 39, 155, 60, 138, 23, 102, 213 };
		ModesProba[8, 6] = new byte[9] { 83, 12, 13, 54, 192, 255, 68, 47, 28 };
		ModesProba[8, 7] = new byte[9] { 85, 26, 85, 85, 128, 128, 32, 146, 171 };
		ModesProba[8, 8] = new byte[9] { 18, 11, 7, 63, 144, 171, 4, 4, 246 };
		ModesProba[8, 9] = new byte[9] { 35, 27, 10, 146, 174, 171, 12, 26, 128 };
		ModesProba[9, 0] = new byte[9] { 190, 80, 35, 99, 180, 80, 126, 54, 45 };
		ModesProba[9, 1] = new byte[9] { 85, 126, 47, 87, 176, 51, 41, 20, 32 };
		ModesProba[9, 2] = new byte[9] { 101, 75, 128, 139, 118, 146, 116, 128, 85 };
		ModesProba[9, 3] = new byte[9] { 56, 41, 15, 176, 236, 85, 37, 9, 62 };
		ModesProba[9, 4] = new byte[9] { 71, 30, 17, 119, 118, 255, 17, 18, 138 };
		ModesProba[9, 5] = new byte[9] { 101, 38, 60, 138, 55, 70, 43, 26, 142 };
		ModesProba[9, 6] = new byte[9] { 146, 36, 19, 30, 171, 255, 97, 27, 20 };
		ModesProba[9, 7] = new byte[9] { 138, 45, 61, 62, 219, 1, 81, 188, 64 };
		ModesProba[9, 8] = new byte[9] { 32, 41, 20, 117, 151, 142, 20, 21, 163 };
		ModesProba[9, 9] = new byte[9] { 112, 19, 12, 61, 195, 128, 48, 4, 24 };
	}

	private static void InitializeFixedCostsI4()
	{
		Vp8FixedCostsI4[0, 0] = new short[10] { 40, 1151, 1723, 1874, 2103, 2019, 1628, 1777, 2226, 2137 };
		Vp8FixedCostsI4[0, 1] = new short[10] { 192, 469, 1296, 1308, 1849, 1794, 1781, 1703, 1713, 1522 };
		Vp8FixedCostsI4[0, 2] = new short[10] { 142, 910, 762, 1684, 1849, 1576, 1460, 1305, 1801, 1657 };
		Vp8FixedCostsI4[0, 3] = new short[10] { 559, 641, 1370, 421, 1182, 1569, 1612, 1725, 863, 1007 };
		Vp8FixedCostsI4[0, 4] = new short[10] { 299, 1059, 1256, 1108, 636, 1068, 1581, 1883, 869, 1142 };
		Vp8FixedCostsI4[0, 5] = new short[10] { 277, 1111, 707, 1362, 1089, 672, 1603, 1541, 1545, 1291 };
		Vp8FixedCostsI4[0, 6] = new short[10] { 214, 781, 1609, 1303, 1632, 2229, 726, 1560, 1713, 918 };
		Vp8FixedCostsI4[0, 7] = new short[10] { 152, 1037, 1046, 1759, 1983, 2174, 1358, 742, 1740, 1390 };
		Vp8FixedCostsI4[0, 8] = new short[10] { 512, 1046, 1420, 753, 752, 1297, 1486, 1613, 460, 1207 };
		Vp8FixedCostsI4[0, 9] = new short[10] { 424, 827, 1362, 719, 1462, 1202, 1199, 1476, 1199, 538 };
		Vp8FixedCostsI4[1, 0] = new short[10] { 240, 402, 1134, 1491, 1659, 1505, 1517, 1555, 1979, 2099 };
		Vp8FixedCostsI4[1, 1] = new short[10] { 467, 242, 960, 1232, 1714, 1620, 1834, 1570, 1676, 1391 };
		Vp8FixedCostsI4[1, 2] = new short[10] { 500, 455, 463, 1507, 1699, 1282, 1564, 982, 2114, 2114 };
		Vp8FixedCostsI4[1, 3] = new short[10] { 672, 643, 1372, 331, 1589, 1667, 1453, 1938, 996, 876 };
		Vp8FixedCostsI4[1, 4] = new short[10] { 458, 783, 1037, 911, 738, 968, 1165, 1518, 859, 1033 };
		Vp8FixedCostsI4[1, 5] = new short[10] { 504, 815, 504, 1139, 1219, 719, 1506, 1085, 1268, 1268 };
		Vp8FixedCostsI4[1, 6] = new short[10] { 333, 630, 1445, 1239, 1883, 3672, 799, 1548, 1865, 598 };
		Vp8FixedCostsI4[1, 7] = new short[10] { 399, 644, 746, 1342, 1856, 1350, 1493, 613, 1855, 1015 };
		Vp8FixedCostsI4[1, 8] = new short[10] { 622, 749, 1205, 608, 1066, 1408, 1290, 1406, 546, 971 };
		Vp8FixedCostsI4[1, 9] = new short[10] { 500, 753, 1041, 668, 1230, 1617, 1297, 1425, 1383, 523 };
		Vp8FixedCostsI4[2, 0] = new short[10] { 394, 553, 523, 1502, 1536, 981, 1608, 1142, 1666, 2181 };
		Vp8FixedCostsI4[2, 1] = new short[10] { 655, 430, 375, 1411, 1861, 1220, 1677, 1135, 1978, 1553 };
		Vp8FixedCostsI4[2, 2] = new short[10] { 690, 640, 245, 1954, 2070, 1194, 1528, 982, 1972, 2232 };
		Vp8FixedCostsI4[2, 3] = new short[10] { 559, 834, 741, 867, 1131, 980, 1225, 852, 1092, 784 };
		Vp8FixedCostsI4[2, 4] = new short[10] { 690, 875, 516, 959, 673, 894, 1056, 1190, 1528, 1126 };
		Vp8FixedCostsI4[2, 5] = new short[10] { 740, 951, 384, 1277, 1177, 492, 1579, 1155, 1846, 1513 };
		Vp8FixedCostsI4[2, 6] = new short[10] { 323, 775, 1062, 1776, 3062, 1274, 813, 1188, 1372, 655 };
		Vp8FixedCostsI4[2, 7] = new short[10] { 488, 971, 484, 1767, 1515, 1775, 1115, 503, 1539, 1461 };
		Vp8FixedCostsI4[2, 8] = new short[10] { 740, 1006, 998, 709, 851, 1230, 1337, 788, 741, 721 };
		Vp8FixedCostsI4[2, 9] = new short[10] { 522, 1073, 573, 1045, 1346, 887, 1046, 1146, 1203, 697 };
		Vp8FixedCostsI4[3, 0] = new short[10] { 105, 864, 1442, 1009, 1934, 1840, 1519, 1920, 1673, 1579 };
		Vp8FixedCostsI4[3, 1] = new short[10] { 534, 305, 1193, 683, 1388, 2164, 1802, 1894, 1264, 1170 };
		Vp8FixedCostsI4[3, 2] = new short[10] { 305, 518, 877, 1108, 1426, 3215, 1425, 1064, 1320, 1242 };
		Vp8FixedCostsI4[3, 3] = new short[10] { 683, 732, 1927, 257, 1493, 2048, 1858, 1552, 1055, 947 };
		Vp8FixedCostsI4[3, 4] = new short[10] { 394, 814, 1024, 660, 959, 1556, 1282, 1289, 893, 1047 };
		Vp8FixedCostsI4[3, 5] = new short[10] { 528, 615, 996, 940, 1201, 635, 1094, 2515, 803, 1358 };
		Vp8FixedCostsI4[3, 6] = new short[10] { 347, 614, 1609, 1187, 3133, 1345, 1007, 1339, 1017, 667 };
		Vp8FixedCostsI4[3, 7] = new short[10] { 218, 740, 878, 1605, 3650, 3650, 1345, 758, 1357, 1617 };
		Vp8FixedCostsI4[3, 8] = new short[10] { 672, 750, 1541, 558, 1257, 1599, 1870, 2135, 402, 1087 };
		Vp8FixedCostsI4[3, 9] = new short[10] { 592, 684, 1161, 430, 1092, 1497, 1475, 1489, 1095, 822 };
		Vp8FixedCostsI4[4, 0] = new short[10] { 228, 1056, 1059, 1368, 752, 982, 1512, 1518, 987, 1782 };
		Vp8FixedCostsI4[4, 1] = new short[10] { 494, 514, 818, 942, 965, 892, 1610, 1356, 1048, 1363 };
		Vp8FixedCostsI4[4, 2] = new short[10] { 512, 648, 591, 1042, 761, 991, 1196, 1454, 1309, 1463 };
		Vp8FixedCostsI4[4, 3] = new short[10] { 683, 749, 1043, 676, 841, 1396, 1133, 1138, 654, 939 };
		Vp8FixedCostsI4[4, 4] = new short[10] { 622, 1101, 1126, 994, 361, 1077, 1203, 1318, 877, 1219 };
		Vp8FixedCostsI4[4, 5] = new short[10] { 631, 1068, 857, 1650, 651, 477, 1650, 1419, 828, 1170 };
		Vp8FixedCostsI4[4, 6] = new short[10] { 555, 727, 1068, 1335, 3127, 1339, 820, 1331, 1077, 429 };
		Vp8FixedCostsI4[4, 7] = new short[10] { 504, 879, 624, 1398, 889, 889, 1392, 808, 891, 1406 };
		Vp8FixedCostsI4[4, 8] = new short[10] { 683, 1602, 1289, 977, 578, 983, 1280, 1708, 406, 1122 };
		Vp8FixedCostsI4[4, 9] = new short[10] { 399, 865, 1433, 1070, 1072, 764, 968, 1477, 1223, 678 };
		Vp8FixedCostsI4[5, 0] = new short[10] { 333, 760, 935, 1638, 1010, 529, 1646, 1410, 1472, 2219 };
		Vp8FixedCostsI4[5, 1] = new short[10] { 512, 494, 750, 1160, 1215, 610, 1870, 1868, 1628, 1169 };
		Vp8FixedCostsI4[5, 2] = new short[10] { 572, 646, 492, 1934, 1208, 603, 1580, 1099, 1398, 1995 };
		Vp8FixedCostsI4[5, 3] = new short[10] { 786, 789, 942, 581, 1018, 951, 1599, 1207, 731, 768 };
		Vp8FixedCostsI4[5, 4] = new short[10] { 690, 1015, 672, 1078, 582, 504, 1693, 1438, 1108, 2897 };
		Vp8FixedCostsI4[5, 5] = new short[10] { 768, 1267, 571, 2005, 1243, 244, 2881, 1380, 1786, 1453 };
		Vp8FixedCostsI4[5, 6] = new short[10] { 452, 899, 1293, 903, 1311, 3100, 465, 1311, 1319, 813 };
		Vp8FixedCostsI4[5, 7] = new short[10] { 394, 927, 942, 1103, 1358, 1104, 946, 593, 1363, 1109 };
		Vp8FixedCostsI4[5, 8] = new short[10] { 559, 1005, 1007, 1016, 658, 1173, 1021, 1164, 623, 1028 };
		Vp8FixedCostsI4[5, 9] = new short[10] { 564, 796, 632, 1005, 1014, 863, 2316, 1268, 938, 764 };
		Vp8FixedCostsI4[6, 0] = new short[10] { 266, 606, 1098, 1228, 1497, 1243, 948, 1030, 1734, 1461 };
		Vp8FixedCostsI4[6, 1] = new short[10] { 366, 585, 901, 1060, 1407, 1247, 876, 1134, 1620, 1054 };
		Vp8FixedCostsI4[6, 2] = new short[10] { 452, 565, 542, 1729, 1479, 1479, 1016, 886, 2938, 1150 };
		Vp8FixedCostsI4[6, 3] = new short[10] { 555, 1088, 1533, 950, 1354, 895, 834, 1019, 1021, 496 };
		Vp8FixedCostsI4[6, 4] = new short[10] { 704, 815, 1193, 971, 973, 640, 1217, 2214, 832, 578 };
		Vp8FixedCostsI4[6, 5] = new short[10] { 672, 1245, 579, 871, 875, 774, 872, 1273, 1027, 949 };
		Vp8FixedCostsI4[6, 6] = new short[10] { 296, 1134, 2050, 1784, 1636, 3425, 442, 1550, 2076, 722 };
		Vp8FixedCostsI4[6, 7] = new short[10] { 342, 982, 1259, 1846, 1848, 1848, 622, 568, 1847, 1052 };
		Vp8FixedCostsI4[6, 8] = new short[10] { 555, 1064, 1304, 828, 746, 1343, 1075, 1329, 1078, 494 };
		Vp8FixedCostsI4[6, 9] = new short[10] { 288, 1167, 1285, 1174, 1639, 1639, 833, 2254, 1304, 509 };
		Vp8FixedCostsI4[7, 0] = new short[10] { 342, 719, 767, 1866, 1757, 1270, 1246, 550, 1746, 2151 };
		Vp8FixedCostsI4[7, 1] = new short[10] { 483, 653, 694, 1509, 1459, 1410, 1218, 507, 1914, 1266 };
		Vp8FixedCostsI4[7, 2] = new short[10] { 488, 757, 447, 2979, 1813, 1268, 1654, 539, 1849, 2109 };
		Vp8FixedCostsI4[7, 3] = new short[10] { 522, 1097, 1085, 851, 1365, 1111, 851, 901, 961, 605 };
		Vp8FixedCostsI4[7, 4] = new short[10] { 709, 716, 841, 728, 736, 945, 941, 862, 2845, 1057 };
		Vp8FixedCostsI4[7, 5] = new short[10] { 512, 1323, 500, 1336, 1083, 681, 1342, 717, 1604, 1350 };
		Vp8FixedCostsI4[7, 6] = new short[10] { 452, 1155, 1372, 1900, 1501, 3290, 311, 944, 1919, 922 };
		Vp8FixedCostsI4[7, 7] = new short[10] { 403, 1520, 977, 2132, 1733, 3522, 1076, 276, 3335, 1547 };
		Vp8FixedCostsI4[7, 8] = new short[10] { 559, 1374, 1101, 615, 673, 2462, 974, 795, 984, 984 };
		Vp8FixedCostsI4[7, 9] = new short[10] { 547, 1122, 1062, 812, 1410, 951, 1140, 622, 1268, 651 };
		Vp8FixedCostsI4[8, 0] = new short[10] { 165, 982, 1235, 938, 1334, 1366, 1659, 1578, 964, 1612 };
		Vp8FixedCostsI4[8, 1] = new short[10] { 592, 422, 925, 847, 1139, 1112, 1387, 2036, 861, 1041 };
		Vp8FixedCostsI4[8, 2] = new short[10] { 403, 837, 732, 770, 941, 1658, 1250, 809, 1407, 1407 };
		Vp8FixedCostsI4[8, 3] = new short[10] { 896, 874, 1071, 381, 1568, 1722, 1437, 2192, 480, 1035 };
		Vp8FixedCostsI4[8, 4] = new short[10] { 640, 1098, 1012, 1032, 684, 1382, 1581, 2106, 416, 865 };
		Vp8FixedCostsI4[8, 5] = new short[10] { 559, 1005, 819, 914, 710, 770, 1418, 920, 838, 1435 };
		Vp8FixedCostsI4[8, 6] = new short[10] { 415, 1258, 1245, 870, 1278, 3067, 770, 1021, 1287, 522 };
		Vp8FixedCostsI4[8, 7] = new short[10] { 406, 990, 601, 1009, 1265, 1265, 1267, 759, 1017, 1277 };
		Vp8FixedCostsI4[8, 8] = new short[10] { 968, 1182, 1329, 788, 1032, 1292, 1705, 1714, 203, 1403 };
		Vp8FixedCostsI4[8, 9] = new short[10] { 732, 877, 1279, 471, 901, 1161, 1545, 1294, 755, 755 };
		Vp8FixedCostsI4[9, 0] = new short[10] { 111, 931, 1378, 1185, 1933, 1648, 1148, 1714, 1873, 1307 };
		Vp8FixedCostsI4[9, 1] = new short[10] { 406, 414, 1030, 1023, 1910, 1404, 1313, 1647, 1509, 793 };
		Vp8FixedCostsI4[9, 2] = new short[10] { 342, 640, 575, 1088, 1241, 1349, 1161, 1350, 1756, 1502 };
		Vp8FixedCostsI4[9, 3] = new short[10] { 559, 766, 1185, 357, 1682, 1428, 1329, 1897, 1219, 802 };
		Vp8FixedCostsI4[9, 4] = new short[10] { 473, 909, 1164, 771, 719, 2508, 1427, 1432, 722, 782 };
		Vp8FixedCostsI4[9, 5] = new short[10] { 342, 892, 785, 1145, 1150, 794, 1296, 1550, 973, 1057 };
		Vp8FixedCostsI4[9, 6] = new short[10] { 208, 1036, 1326, 1343, 1606, 3395, 815, 1455, 1618, 712 };
		Vp8FixedCostsI4[9, 7] = new short[10] { 228, 928, 890, 1046, 3499, 1711, 994, 829, 1720, 1318 };
		Vp8FixedCostsI4[9, 8] = new short[10] { 768, 724, 1058, 636, 991, 1075, 1319, 1324, 616, 825 };
		Vp8FixedCostsI4[9, 9] = new short[10] { 305, 1167, 1358, 899, 1587, 1587, 987, 1988, 1332, 501 };
	}
}
