using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Windows.Input;
using Avalonia;
using Avalonia.Animation;
using Avalonia.Animation.Easings;
using Avalonia.Automation;
using Avalonia.Collections;
using Avalonia.Controls;
using Avalonia.Controls.Chrome;
using Avalonia.Controls.Converters;
using Avalonia.Controls.Documents;
using Avalonia.Controls.Embedding;
using Avalonia.Controls.Notifications;
using Avalonia.Controls.Presenters;
using Avalonia.Controls.Primitives;
using Avalonia.Controls.Shapes;
using Avalonia.Controls.Templates;
using Avalonia.Data;
using Avalonia.Data.Converters;
using Avalonia.Dialogs;
using Avalonia.Dialogs.Internal;
using Avalonia.Input;
using Avalonia.Input.GestureRecognizers;
using Avalonia.Layout;
using Avalonia.Markup.Xaml;
using Avalonia.Markup.Xaml.MarkupExtensions;
using Avalonia.Markup.Xaml.MarkupExtensions.CompiledBindings;
using Avalonia.Markup.Xaml.Templates;
using Avalonia.Markup.Xaml.XamlIl.Runtime;
using Avalonia.Media;
using Avalonia.Media.Immutable;
using Avalonia.Styling;
using Avalonia.Themes.Simple;

namespace CompiledAvaloniaXaml;

[EditorBrowsable(EditorBrowsableState.Never)]
public class _0021AvaloniaResources
{
	public class NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Simple", "Avalonia.Themes.Simple")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl();
		}
	}

	private class XamlClosure_1
	{
		private class XamlClosure_2
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Rectangle();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((Layoutable)intermediateRoot).Margin = new Thickness(1.0, 1.0, 1.0, 1.0);
				((Shape)intermediateRoot).Stroke = new ImmutableSolidColorBrush(4278190080u);
				AvaloniaList<double> avaloniaList = new AvaloniaList<double>();
				avaloniaList.Capacity = 2;
				avaloniaList.Add(1.0);
				avaloniaList.Add(2.0);
				((Shape)intermediateRoot).StrokeDashArray = avaloniaList;
				((Shape)intermediateRoot).StrokeThickness = 1.0;
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(AdornerLayer);
			Setter setter = new Setter();
			setter.Property = AdornerLayer.DefaultFocusAdornerProperty;
			setter.Value = new FocusAdornerTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_2.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_3
	{
		private class XamlClosure_4
		{
			private class DynamicSetters_5
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_5.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(TextElement.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter10.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ContentControl.VerticalContentAlignmentProperty;
			setter11.Value = VerticalAlignment.Center;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.PaddingProperty;
			setter12.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.TemplateProperty;
			setter13.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_4.Build, context)
			};
			controlTheme.Add(setter13);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style3.Add(setter14);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value6;
			context.PopParent();
			style5.Add(setter16);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			style7.Add(setter18);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_6
	{
		private class XamlClosure_7
		{
			private class DynamicSetters_8
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid.ColumnDefinitions = columnDefinitions;
				Controls children = grid.Children;
				Ellipse ellipse;
				Ellipse ellipse2 = (ellipse = new Ellipse());
				((ISupportInitialize)ellipse2).BeginInit();
				children.Add(ellipse2);
				ellipse.Name = "border";
				service = ellipse;
				context.AvaloniaNameScope.Register("border", service);
				ellipse.SetValue(Layoutable.WidthProperty, 18.0, BindingPriority.Template);
				ellipse.SetValue(Layoutable.HeightProperty, 18.0, BindingPriority.Template);
				ellipse.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				ellipse.Bind(Shape.StrokeProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				ellipse.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
				((ISupportInitialize)ellipse).EndInit();
				Controls children2 = grid.Children;
				Ellipse ellipse3;
				Ellipse ellipse4 = (ellipse3 = new Ellipse());
				((ISupportInitialize)ellipse4).BeginInit();
				children2.Add(ellipse4);
				ellipse3.Name = "checkMark";
				service = ellipse3;
				context.AvaloniaNameScope.Register("checkMark", service);
				ellipse3.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse3.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				ellipse3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				ellipse3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				ellipse3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				ellipse3.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)ellipse3).EndInit();
				Controls children3 = grid.Children;
				Ellipse ellipse5;
				Ellipse ellipse6 = (ellipse5 = new Ellipse());
				((ISupportInitialize)ellipse6).BeginInit();
				children3.Add(ellipse6);
				Ellipse ellipse7;
				Ellipse ellipse8 = (ellipse7 = ellipse5);
				context.PushParent(ellipse7);
				ellipse7.Name = "indeterminateMark";
				service = ellipse7;
				context.AvaloniaNameScope.Register("indeterminateMark", service);
				ellipse7.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse7.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				ellipse7.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				ellipse7.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse7.Bind(fillProperty, binding);
				ellipse7.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				ellipse7.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse8).EndInit();
				Controls children4 = grid.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children4.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.MarginProperty, new Thickness(4.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				DynamicSetters_8.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RadioButton);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_7.Build, context);
			context.PopParent();
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("border");
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = Shape.StrokeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style3.Add(setter9);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Ellipse))
				.Name("checkMark");
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("HighlightBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style5.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = Visual.IsVisibleProperty;
			setter13.Value = false;
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Ellipse))
				.Name("indeterminateMark");
			Setter setter14 = new Setter();
			setter14.Property = Visual.IsVisibleProperty;
			setter14.Value = false;
			style6.Add(setter14);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("checkMark");
			Setter setter15 = new Setter();
			setter15.Property = Visual.IsVisibleProperty;
			setter15.Value = true;
			style7.Add(setter15);
			controlTheme.Add(style7);
			Style style8 = new Style();
			style8.Selector = ((Selector?)null).Nesting().Class(":indeterminate").Template()
				.OfType(typeof(Ellipse))
				.Name("indeterminateMark");
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style8.Add(setter16);
			controlTheme.Add(style8);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("border");
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value6;
			context.PopParent();
			style10.Add(setter17);
			context.PopParent();
			controlTheme.Add(style9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_9
	{
		private class XamlClosure_10
		{
			private class DynamicSetters_11
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_11.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TextElement.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter10.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ContentControl.VerticalContentAlignmentProperty;
			setter11.Value = VerticalAlignment.Center;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.PaddingProperty;
			setter12.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.TemplateProperty;
			setter13.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_10.Build, context)
			};
			controlTheme.Add(setter13);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style3.Add(setter14);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value6;
			context.PopParent();
			style5.Add(setter16);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_12
	{
		private class XamlClosure_13
		{
			private class DynamicSetters_14
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_14.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(TextElement.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.PaddingProperty;
			setter10.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter11.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = ContentControl.VerticalContentAlignmentProperty;
			setter12.Value = VerticalAlignment.Center;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.TemplateProperty;
			setter13.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_13.Build, context)
			};
			controlTheme.Add(setter13);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style3.Add(setter14);
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value6;
			context.PopParent();
			style3.Add(setter16);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			style5.Add(setter18);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value8;
			context.PopParent();
			style7.Add(setter20);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value9;
			context.PopParent();
			style9.Add(setter22);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_15
	{
		private class XamlClosure_16
		{
			private class DynamicSetters_17
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "RootBorder";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("RootBorder", service);
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				((Decorator)intermediateRoot).Child = grid2;
				grid.Name = "InnerGrid";
				service = grid;
				context.AvaloniaNameScope.Register("InnerGrid", service);
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				Controls children = grid.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_17.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = grid.Children;
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				children2.Add(pathIcon2);
				pathIcon.Name = "DropDownGlyph";
				service = pathIcon;
				context.AvaloniaNameScope.Register("DropDownGlyph", service);
				pathIcon.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 10.0, 0.0), BindingPriority.Template);
				pathIcon.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				pathIcon.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)pathIcon).EndInit();
				((ISupportInitialize)grid).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DropDownButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter10.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ContentControl.VerticalContentAlignmentProperty;
			setter11.Value = VerticalAlignment.Center;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.PaddingProperty;
			setter12.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.TemplateProperty;
			setter13.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_16.Build, context)
			};
			controlTheme.Add(setter13);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(PathIcon))
				.Name("DropDownGlyph");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style3.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = PathIcon.DataProperty;
			setter16.Value = Geometry.Parse("M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z");
			style3.Add(setter16);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value6;
			context.PopParent();
			style5.Add(setter17);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("RootBorder");
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value7;
			context.PopParent();
			style7.Add(setter19);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value8;
			context.PopParent();
			style9.Add(setter21);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_18
	{
		private class XamlClosure_19
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				((Decorator)intermediateRoot).Child = viewbox2;
				viewbox.Bind(Layoutable.WidthProperty, new TemplateBinding(Layoutable.WidthProperty).ProvideValue());
				viewbox.Bind(Layoutable.HeightProperty, new TemplateBinding(Layoutable.HeightProperty).ProvideValue());
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				path.Bind(Path.DataProperty, new TemplateBinding(PathIcon.DataProperty).ProvideValue());
				path.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				((ISupportInitialize)viewbox).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(PathIcon);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.BackgroundProperty;
			setter4.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("IconElementThemeHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("IconElementThemeWidth");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_19.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_20
	{
		private class XamlClosure_21
		{
			private class DynamicSetters_22
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid.ColumnDefinitions = columnDefinitions;
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "border";
				service = border3;
				context.AvaloniaNameScope.Register("border", service);
				border3.SetValue(Layoutable.WidthProperty, 18.0, BindingPriority.Template);
				border3.SetValue(Layoutable.HeightProperty, 18.0, BindingPriority.Template);
				border3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border3.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children2 = panel3.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children2.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "checkMark";
				service = path3;
				context.AvaloniaNameScope.Register("checkMark", service);
				path3.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				path3.SetValue(Visual.FlowDirectionProperty, FlowDirection.LeftToRight, BindingPriority.Template);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				Controls children3 = panel3.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				rectangle3.Name = "indeterminateMark";
				service = rectangle3;
				context.AvaloniaNameScope.Register("indeterminateMark", service);
				rectangle3.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				rectangle3.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				rectangle3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				rectangle3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle3.Bind(fillProperty2, binding2);
				rectangle3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children4 = grid.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children4.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_22.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(ContentControl.ContentProperty)
				{
					Converter = ObjectConverters.IsNotNull
				}.ProvideValue());
				contentPresenter.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter.Bind(TextElement.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CheckBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.BackgroundProperty;
			setter4.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.PaddingProperty;
			setter9.Value = new Thickness(4.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = ContentControl.VerticalContentAlignmentProperty;
			setter10.Value = VerticalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter11.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter11);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_21.Build, context);
			context.PopParent();
			setter13.Value = value4;
			context.PopParent();
			controlTheme.Add(setter12);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style3.Add(setter14);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path))
				.Name("checkMark");
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = false;
			style4.Add(setter16);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("indeterminateMark");
			Setter setter17 = new Setter();
			setter17.Property = Visual.IsVisibleProperty;
			setter17.Value = false;
			style5.Add(setter17);
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Path))
				.Name("checkMark");
			Setter setter18 = new Setter();
			setter18.Property = Visual.IsVisibleProperty;
			setter18.Value = true;
			style6.Add(setter18);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = ((Selector?)null).Nesting().Class(":indeterminate").Template()
				.OfType(typeof(Rectangle))
				.Name("indeterminateMark");
			Setter setter19 = new Setter();
			setter19.Property = Visual.IsVisibleProperty;
			setter19.Value = true;
			style7.Add(setter19);
			controlTheme.Add(style7);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value6;
			context.PopParent();
			style9.Add(setter20);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_23
	{
		private class XamlClosure_24
		{
			private class DynamicSetters_25
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_25.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToolTip);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(4.0, 2.0, 4.0, 2.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_24.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_26
	{
		private class XamlClosure_27
		{
			private class DynamicSetters_28
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_28.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Label);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(3.0, 3.0, 3.0, 3.0);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.TemplateProperty;
			setter2.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_27.Build, context)
			};
			controlTheme.Add(setter2);
			return controlTheme;
		}
	}

	private class XamlClosure_29
	{
		private class XamlClosure_30
		{
			private class DynamicSetters_31
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_31.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ComboBoxItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.PaddingProperty;
			setter2.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter4.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.TemplateProperty;
			setter5.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_30.Build, context)
			};
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter6;
			Setter setter7 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter8 = setter6;
			setter8.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter9 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter10 = setter6;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style5.Add(setter9);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter11 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter12 = setter6;
			setter12.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style7.Add(setter11);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter13 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter14 = setter6;
			setter14.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style9.Add(setter13);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter15 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter16 = setter6;
			setter16.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			style11.Add(setter15);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_32
	{
		private class XamlClosure_33
		{
			private class DynamicSetters_34
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "border";
				service = border2;
				context.AvaloniaNameScope.Register("border", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border2.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children.Add(textBlock2);
				textBlock.Name = "PlaceholderTextBlock";
				service = textBlock;
				context.AvaloniaNameScope.Register("PlaceholderTextBlock", service);
				textBlock.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				textBlock.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBlock.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ComboBox.HorizontalContentAlignmentProperty).ProvideValue());
				textBlock.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ComboBox.VerticalContentAlignmentProperty).ProvideValue());
				textBlock.Bind(TextBlock.ForegroundProperty, new TemplateBinding(ComboBox.PlaceholderForegroundProperty).ProvideValue());
				textBlock.Bind(Visual.IsVisibleProperty, new TemplateBinding(ComboBox.SelectionBoxItemProperty)
				{
					Converter = ObjectConverters.IsNull
				}.ProvideValue());
				textBlock.Bind(TextBlock.TextProperty, new TemplateBinding(ComboBox.PlaceholderTextProperty).ProvideValue());
				((ISupportInitialize)textBlock).EndInit();
				Controls children2 = grid3.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children2.Add(contentControl2);
				contentControl.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentControl.Bind(ContentControl.HorizontalContentAlignmentProperty, new TemplateBinding(ComboBox.HorizontalContentAlignmentProperty).ProvideValue());
				contentControl.Bind(ContentControl.VerticalContentAlignmentProperty, new TemplateBinding(ComboBox.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_34.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ComboBox.SelectionBoxItemProperty).ProvideValue());
				contentControl.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ItemsControl.ItemTemplateProperty).ProvideValue());
				((ISupportInitialize)contentControl).EndInit();
				Controls children3 = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children3.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "toggle";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("toggle", service);
				toggleButton3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				toggleButton3.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				toggleButton3.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				toggleButton3.SetValue(Button.ClickModeProperty, ClickMode.Press, BindingPriority.Template);
				toggleButton3.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(ComboBox.IsDropDownOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				toggleButton3.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.SetValue(Layoutable.WidthProperty, 8.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HeightProperty, 4.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children4 = grid3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children4.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EWidth_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(minWidthProperty, binding2);
				popup3.Bind(Layoutable.MaxHeightProperty, new TemplateBinding(ComboBox.MaxDropDownHeightProperty).ProvideValue());
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(ComboBox.IsDropDownOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				popup3.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				popup3.Child = border4;
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding3 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding3);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderMidBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding4 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderBrushProperty, binding4);
				border6.SetValue(Border.BorderThicknessProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border6.Child = scrollViewer2;
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ComboBox);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = ComboBox.HorizontalContentAlignmentProperty;
			setter9.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = ComboBox.VerticalContentAlignmentProperty;
			setter10.Value = VerticalAlignment.Center;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = TemplatedControl.PaddingProperty;
			setter11.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.MinHeightProperty;
			setter12.Value = 20.0;
			controlTheme.Add(setter12);
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = ComboBox.PlaceholderForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			controlTheme.Add(setter13);
			Setter setter15 = new Setter();
			setter15.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter15.Value = ScrollBarVisibility.Disabled;
			controlTheme.Add(setter15);
			Setter setter16 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter17 = setter2;
			setter17.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_33.Build, context);
			context.PopParent();
			setter17.Value = value5;
			context.PopParent();
			controlTheme.Add(setter16);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter18 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter19 = setter2;
			setter19.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value6;
			context.PopParent();
			style3.Add(setter18);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter20 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter21 = setter2;
			setter21.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			style5.Add(setter20);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_35
	{
		private class XamlClosure_36
		{
			private class DynamicSetters_37
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border3).EndInit();
				Controls children3 = ((Panel)intermediateRoot).Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children3.Add(panel2);
				panel.Bind(Layoutable.MarginProperty, new TemplateBinding(Window.WindowDecorationMarginProperty).ProvideValue());
				panel.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)panel).EndInit();
				Controls children4 = ((Panel)intermediateRoot).Children;
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				children4.Add(visualLayerManager2);
				ChromeOverlayLayer chromeOverlayLayer = visualLayerManager.ChromeOverlayLayer;
				TitleBar titleBar;
				TitleBar titleBar2 = (titleBar = new TitleBar());
				((ISupportInitialize)titleBar2).BeginInit();
				chromeOverlayLayer.Add(titleBar2);
				((ISupportInitialize)titleBar).EndInit();
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_37.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Window);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TopLevel.TransparencyBackgroundFallbackProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("HighlightForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.TemplateProperty;
			setter12.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_36.Build, context)
			};
			controlTheme.Add(setter12);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_38
	{
		private class XamlClosure_39
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ScrollViewer();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ScrollViewer";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue((StyledProperty<ScrollBarVisibility>)ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue((StyledProperty<ScrollBarVisibility>)ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((ContentControl)intermediateRoot).Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Carousel);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_39.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_40
	{
		private class XamlClosure_41
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				Controls children = ((Panel)intermediateRoot).Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				panel.Name = "PART_MouseTracker";
				service = panel;
				context.AvaloniaNameScope.Register("PART_MouseTracker", service);
				panel.SetValue(Layoutable.HeightProperty, 1.0, BindingPriority.Template);
				panel.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				((ISupportInitialize)panel).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Panel panel3;
				Panel panel4 = (panel3 = new Panel());
				((ISupportInitialize)panel4).BeginInit();
				children2.Add(panel4);
				panel3.Name = "PART_Container";
				service = panel3;
				context.AvaloniaNameScope.Register("PART_Container", service);
				Controls children3 = panel3.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children3.Add(border2);
				border.Name = "PART_Background";
				service = border;
				context.AvaloniaNameScope.Register("PART_Background", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)border).EndInit();
				Controls children4 = panel3.Children;
				CaptionButtons captionButtons;
				CaptionButtons captionButtons2 = (captionButtons = new CaptionButtons());
				((ISupportInitialize)captionButtons2).BeginInit();
				children4.Add(captionButtons2);
				captionButtons.Name = "PART_CaptionButtons";
				service = captionButtons;
				context.AvaloniaNameScope.Register("PART_CaptionButtons", service);
				captionButtons.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				captionButtons.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				captionButtons.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)captionButtons).EndInit();
				((ISupportInitialize)panel3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TitleBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.VerticalAlignmentProperty;
			setter4.Value = VerticalAlignment.Top;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.HorizontalAlignmentProperty;
			setter5.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.BackgroundProperty;
			setter6.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_41.Build, context)
			};
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":fullscreen");
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			style3.Add(setter8);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("PART_Background");
			Setter setter10 = new Setter();
			setter10.Property = InputElement.IsHitTestVisibleProperty;
			setter10.Value = false;
			style4.Add(setter10);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Border))
				.Name("PART_Background");
			Setter setter11 = new Setter();
			setter11.Property = InputElement.IsHitTestVisibleProperty;
			setter11.Value = true;
			style5.Add(setter11);
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Panel))
				.Name("PART_MouseTracker");
			Setter setter12 = new Setter();
			setter12.Property = Panel.BackgroundProperty;
			setter12.Value = new ImmutableSolidColorBrush(16777215u);
			style6.Add(setter12);
			controlTheme.Add(style6);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Panel))
				.Name("PART_Container");
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Visual.RenderTransformProperty;
			setter14.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "translateY(-30px)");
			context.PopParent();
			style8.Add(setter13);
			Setter setter15 = new Setter();
			setter15.Property = Animatable.TransitionsProperty;
			Transitions transitions = new Transitions();
			TransformOperationsTransition transformOperationsTransition = new TransformOperationsTransition();
			transformOperationsTransition.Property = Visual.RenderTransformProperty;
			transformOperationsTransition.Duration = TimeSpan.FromTicks(2500000L);
			transitions.Add(transformOperationsTransition);
			setter15.Value = transitions;
			style8.Add(setter15);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Class(":pointerover")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_Container");
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Visual.RenderTransformProperty;
			setter17.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			style10.Add(setter16);
			context.PopParent();
			controlTheme.Add(style9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_42
	{
		private class XamlClosure_43
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				Controls children = panel.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children.Add(textBox2);
				textBox.Name = "PART_TextBox";
				service = textBox;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				textBox.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				textBox.Bind(DataValidationErrors.ErrorsProperty, new TemplateBinding(DataValidationErrors.ErrorsProperty).ProvideValue());
				textBox.Bind(TextBox.WatermarkProperty, new TemplateBinding(AutoCompleteBox.WatermarkProperty).ProvideValue());
				((ISupportInitialize)textBox).EndInit();
				Controls children2 = panel.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children2.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EWidth_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(minWidthProperty, binding);
				popup3.Bind(Layoutable.MaxHeightProperty, new TemplateBinding(AutoCompleteBox.MaxDropDownHeightProperty).ProvideValue());
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				popup3.Child = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(backgroundProperty, binding2);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding3 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(borderBrushProperty, binding3);
				border3.SetValue(Border.BorderThicknessProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				ListBox listBox;
				ListBox listBox2 = (listBox = new ListBox());
				((ISupportInitialize)listBox2).BeginInit();
				border3.Child = listBox2;
				listBox.Name = "PART_SelectingItemsControl";
				service = listBox;
				context.AvaloniaNameScope.Register("PART_SelectingItemsControl", service);
				listBox.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				listBox.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				listBox.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				listBox.Bind(ItemsControl.ItemTemplateProperty, new TemplateBinding(AutoCompleteBox.ItemTemplateProperty).ProvideValue());
				listBox.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Auto, BindingPriority.Template);
				listBox.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Auto, BindingPriority.Template);
				((ISupportInitialize)listBox).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(AutoCompleteBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter8);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_43.Build, context);
			context.PopParent();
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_44
	{
		private class XamlClosure_45
		{
			private class DynamicSetters_46
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, CompiledBindingExtension P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(StyledElement.DataContextProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.DataContextProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				dockPanel.SetValue(DockPanel.LastChildFillProperty, value: true, BindingPriority.Template);
				Controls children = dockPanel.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children.Add(contentControl2);
				ContentControl contentControl3;
				ContentControl contentControl4 = (contentControl3 = contentControl);
				context.PushParent(contentControl3);
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.ErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ContentControl.ContentProperty;
				CompiledBindingExtension compiledBindingExtension2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_46.DynamicSetter_1(contentControl3, BindingPriority.Template, compiledBindingExtension2);
				contentControl3.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(DataValidationErrors.ErrorTemplateProperty).ProvideValue());
				DynamicSetters_46.DynamicSetter_2(contentControl3, BindingPriority.Template, new TemplateBinding(DataValidationErrors.OwnerProperty).ProvideValue());
				contentControl3.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(DataValidationErrors.HasErrorsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentControl3.Bind(isVisibleProperty, binding);
				context.PopParent();
				((ISupportInitialize)contentControl4).EndInit();
				Controls children2 = dockPanel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_46.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_47
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Canvas();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Canvas canvas = (Canvas)intermediateRoot;
				context.PushParent(canvas);
				canvas.Width = 14.0;
				canvas.Height = 14.0;
				canvas.Margin = new Thickness(4.0, 0.0, 1.0, 0.0);
				canvas.Background = new ImmutableSolidColorBrush(16777215u);
				Styles styles = canvas.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(ToolTip));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = TemplatedControl.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ErrorBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value;
				context.PopParent();
				style.Add(setter2);
				context.PopParent();
				styles.Add(item);
				ItemsControl itemsControl;
				ItemsControl itemsControl2 = (itemsControl = new ItemsControl());
				((ISupportInitialize)itemsControl2).BeginInit();
				ToolTip.SetTip(canvas, itemsControl2);
				ItemsControl itemsControl3;
				ItemsControl itemsControl4 = (itemsControl3 = itemsControl);
				context.PushParent(itemsControl3);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				itemsControl3.Bind(itemsSourceProperty, binding);
				context.PopParent();
				((ISupportInitialize)itemsControl4).EndInit();
				Controls children = canvas.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Data = Geometry.Parse("M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2");
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ErrorBrush");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding2);
				path3.StrokeThickness = 2.0;
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DataValidationErrors);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_45.Build, context);
			context.PopParent();
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = DataValidationErrors.ErrorTemplateProperty;
			DataTemplate dataTemplate;
			DataTemplate value2 = (dataTemplate = new DataTemplate());
			context.PushParent(dataTemplate);
			dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_47.Build, context);
			context.PopParent();
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_48
	{
		private class XamlClosure_49
		{
			private class DynamicSetters_50
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_50.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(ContentControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_49.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_51
	{
		private class XamlClosure_52
		{
			private class DynamicSetters_53
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "LayoutRoot";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				scrollViewer.Content = contentPresenter2;
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				DynamicSetters_53.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(FlyoutPresenter);
			Setter setter = new Setter();
			setter.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = ContentControl.VerticalContentAlignmentProperty;
			setter2.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.BorderThicknessProperty;
			setter8.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.PaddingProperty;
			setter9.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter10.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter11.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.TemplateProperty;
			setter12.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_52.Build, context)
			};
			controlTheme.Add(setter12);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_54
	{
		private class XamlClosure_55
		{
			private class DynamicSetters_56
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "LayoutRoot";
				service = border;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				scrollViewer3.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_56.DynamicSetter_1(scrollViewer3, BindingPriority.Template, obj);
				scrollViewer3.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				itemsPresenter.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuFlyoutPresenter);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.BorderThicknessProperty;
			setter6.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter7.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter8.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter8);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_55.Build, context);
			context.PopParent();
			setter10.Value = value3;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_57
	{
		private class XamlClosure_58
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Rectangle();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Rectangle rectangle = (Rectangle)intermediateRoot;
				context.PushParent(rectangle);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle.Bind(fillProperty, binding);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_59
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(GridSplitter);
			Setter setter = new Setter();
			setter.Property = InputElement.FocusableProperty;
			setter.Value = true;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 1.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MinHeightProperty;
			setter3.Value = 1.0;
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter8 = setter4;
			setter8.Property = GridSplitter.PreviewContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_58.Build, context);
			context.PopParent();
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_59.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_60
	{
		private class XamlClosure_61
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(ItemsControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_61.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_62
	{
		private class XamlClosure_63
		{
			private class DynamicSetters_64
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_64.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ListBoxItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderBrushProperty;
			setter2.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.BorderThicknessProperty;
			setter3.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.PaddingProperty;
			setter4.Value = new Thickness(2.0, 1.0, 2.0, 1.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.TemplateProperty;
			setter5.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_63.Build, context)
			};
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter6;
			Setter setter7 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter8 = setter6;
			setter8.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter9 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter10 = setter6;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style5.Add(setter9);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Template()
				.OfType(typeof(ContentPresenter));
			Setter setter11 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter12 = setter6;
			setter12.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style7.Add(setter11);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter));
			Setter setter13 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter14 = setter6;
			setter14.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style9.Add(setter13);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter));
			Setter setter15 = (setter6 = new Setter());
			context.PushParent(setter6);
			Setter setter16 = setter6;
			setter16.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			style11.Add(setter15);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_65
	{
		private class XamlClosure_66
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "border";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("border", service);
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Name = "PART_ScrollViewer";
				service = scrollViewer;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				scrollViewer.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsTypeProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsTypeProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ListBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter9.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter10.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter11.Value = true;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.TemplateProperty;
			setter12.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_66.Build, context)
			};
			controlTheme.Add(setter12);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style.Add(setter13);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_67
	{
		private class XamlClosure_68
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(backgroundProperty, binding);
				border.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_LineUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_LineUpButton", service);
				repeatButton5.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				repeatButton5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarThickness");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(minWidthProperty, binding2);
				repeatButton5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton5.Classes.Add("repeat");
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				repeatButton5.Content = path2;
				path.SetValue(Path.DataProperty, Geometry.Parse("M 4 0 L 4 8 L 0 4 Z"), BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children2 = grid3.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children2.Add(track2);
				track.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				track.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				track.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track.Bind(Track.OrientationProperty, new TemplateBinding(ScrollBar.OrientationProperty).ProvideValue());
				track.Bind(Track.ViewportSizeProperty, new TemplateBinding(ScrollBar.ViewportSizeProperty).ProvideValue());
				track.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track.SetValue(decreaseButtonProperty, repeatButton7, BindingPriority.Template);
				repeatButton6.Name = "PART_PageUpButton";
				service = repeatButton6;
				context.AvaloniaNameScope.Register("PART_PageUpButton", service);
				repeatButton6.Classes.Add("repeattrack");
				repeatButton6.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)repeatButton6).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton8;
				RepeatButton repeatButton9 = (repeatButton8 = new RepeatButton());
				((ISupportInitialize)repeatButton9).BeginInit();
				track.SetValue(increaseButtonProperty, repeatButton9, BindingPriority.Template);
				repeatButton8.Name = "PART_PageDownButton";
				service = repeatButton8;
				context.AvaloniaNameScope.Register("PART_PageDownButton", service);
				repeatButton8.Classes.Add("repeattrack");
				repeatButton8.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track.Thumb = thumb2;
				thumb.Name = "thumb";
				service = thumb;
				context.AvaloniaNameScope.Register("thumb", service);
				((ISupportInitialize)thumb).EndInit();
				((ISupportInitialize)track).EndInit();
				Controls children3 = grid3.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children3.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_LineDownButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_LineDownButton", service);
				repeatButton13.SetValue(Grid.RowProperty, 2, BindingPriority.Template);
				repeatButton13.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				StyledProperty<double> minWidthProperty2 = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarThickness");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton13.Bind(minWidthProperty2, binding3);
				repeatButton13.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				repeatButton13.Classes.Add("repeat");
				repeatButton13.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				repeatButton13.Content = path4;
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 0 0 L 4 4 L 0 8 Z"), BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_69
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(backgroundProperty, binding);
				border.SetValue(Layoutable.UseLayoutRoundingProperty, value: false, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 3;
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.RowDefinitions = rowDefinitions;
				Controls children = grid3.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_LineUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_LineUpButton", service);
				repeatButton5.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				StyledProperty<double> minHeightProperty = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarThickness");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(minHeightProperty, binding2);
				repeatButton5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				repeatButton5.Classes.Add("repeat");
				repeatButton5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				repeatButton5.Content = path2;
				path.SetValue(Path.DataProperty, Geometry.Parse("M 0 4 L 8 4 L 4 0 Z"), BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children2 = grid3.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children2.Add(track2);
				track.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				track.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				track.SetValue(Track.IsDirectionReversedProperty, value: true, BindingPriority.Template);
				track.Bind(Track.MaximumProperty, new TemplateBinding(RangeBase.MaximumProperty).ProvideValue());
				track.Bind(Track.MinimumProperty, new TemplateBinding(RangeBase.MinimumProperty).ProvideValue());
				track.Bind(Track.OrientationProperty, new TemplateBinding(ScrollBar.OrientationProperty).ProvideValue());
				track.Bind(Track.ViewportSizeProperty, new TemplateBinding(ScrollBar.ViewportSizeProperty).ProvideValue());
				track.Bind(Track.ValueProperty, new TemplateBinding(RangeBase.ValueProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track.SetValue(decreaseButtonProperty, repeatButton7, BindingPriority.Template);
				repeatButton6.Name = "PART_PageUpButton";
				service = repeatButton6;
				context.AvaloniaNameScope.Register("PART_PageUpButton", service);
				repeatButton6.Classes.Add("repeattrack");
				repeatButton6.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)repeatButton6).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton8;
				RepeatButton repeatButton9 = (repeatButton8 = new RepeatButton());
				((ISupportInitialize)repeatButton9).BeginInit();
				track.SetValue(increaseButtonProperty, repeatButton9, BindingPriority.Template);
				repeatButton8.Name = "PART_PageDownButton";
				service = repeatButton8;
				context.AvaloniaNameScope.Register("PART_PageDownButton", service);
				repeatButton8.Classes.Add("repeattrack");
				repeatButton8.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track.Thumb = thumb2;
				thumb.Name = "thumb";
				service = thumb;
				context.AvaloniaNameScope.Register("thumb", service);
				((ISupportInitialize)thumb).EndInit();
				((ISupportInitialize)track).EndInit();
				Controls children3 = grid3.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children3.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_LineDownButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_LineDownButton", service);
				repeatButton13.SetValue(Grid.RowProperty, 2, BindingPriority.Template);
				repeatButton13.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				StyledProperty<double> minHeightProperty2 = Layoutable.MinHeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ScrollBarThickness");
				context.ProvideTargetProperty = Layoutable.MinHeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton13.Bind(minHeightProperty2, binding3);
				repeatButton13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				repeatButton13.Classes.Add("repeat");
				repeatButton13.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				repeatButton13.Content = path4;
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 0 0 L 4 4 L 8 0 Z"), BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_70
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_71
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollBar);
			Setter setter = new Setter();
			setter.Property = InputElement.CursorProperty;
			setter.Value = new Cursor(StandardCursorType.Arrow);
			controlTheme.Add(setter);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ScrollBarThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			style3.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_68.Build, context);
			context.PopParent();
			setter6.Value = value2;
			context.PopParent();
			style3.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ScrollBarThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style5.Add(setter7);
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_69.Build, context);
			context.PopParent();
			setter10.Value = value4;
			context.PopParent();
			style5.Add(setter9);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb))
				.Name("thumb");
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeControlMidHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style7.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = TemplatedControl.TemplateProperty;
			setter13.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_70.Build, context)
			};
			style7.Add(setter13);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb))
				.Name("thumb")
				.Class(":pointerover");
			Setter setter14 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter15 = setter2;
			setter15.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value6;
			context.PopParent();
			style9.Add(setter14);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Thumb))
				.Name("thumb")
				.Class(":pressed");
			Setter setter16 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter17 = setter2;
			setter17.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeControlVeryHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			style11.Add(setter16);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":horizontal").Template()
				.OfType(typeof(Thumb))
				.Name("thumb");
			Setter setter18 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter19 = setter2;
			setter19.Property = Layoutable.MinWidthProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ScrollBarThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style13.Add(setter18);
			Setter setter20 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter21 = setter2;
			setter21.Property = Layoutable.HeightProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ScrollBarThumbThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value9;
			context.PopParent();
			style13.Add(setter20);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(Thumb))
				.Name("thumb");
			Setter setter22 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter23 = setter2;
			setter23.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ScrollBarThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style15.Add(setter22);
			Setter setter24 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter25 = setter2;
			setter25.Property = Layoutable.WidthProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ScrollBarThumbThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value11;
			context.PopParent();
			style15.Add(setter24);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = new Style();
			style16.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class("repeat");
			Setter setter26 = new Setter();
			setter26.Property = TemplatedControl.PaddingProperty;
			setter26.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			style16.Add(setter26);
			Setter setter27 = new Setter();
			setter27.Property = TemplatedControl.BorderThicknessProperty;
			setter27.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style16.Add(setter27);
			controlTheme.Add(style16);
			Style style17 = new Style();
			style17.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class("repeattrack");
			Setter setter28 = new Setter();
			setter28.Property = TemplatedControl.TemplateProperty;
			setter28.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_71.Build, context)
			};
			style17.Add(setter28);
			controlTheme.Add(style17);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Child()
				.OfType(typeof(Path));
			Setter setter29 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter30 = setter2;
			setter30.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value12;
			context.PopParent();
			style19.Add(setter29);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class(":pointerover")
				.Child()
				.OfType(typeof(Path));
			Setter setter31 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter32 = setter2;
			setter32.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ThemeAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value13;
			context.PopParent();
			style21.Add(setter31);
			context.PopParent();
			controlTheme.Add(style20);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_72
	{
		private class XamlClosure_73
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ItemsPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ItemsPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_74
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new WrapPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TabStrip);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_73.Build, context)
			};
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = ItemsControl.ItemsPanelProperty;
			setter2.Value = new ItemsPanelTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_74.Build, context)
			};
			controlTheme.Add(setter2);
			return controlTheme;
		}
	}

	private class XamlClosure_75
	{
		private class XamlClosure_76
		{
			private class DynamicSetters_77
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_77.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TabStripItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MarginProperty;
			setter2.Value = new Thickness(16.0, 16.0, 16.0, 16.0);
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeLarge");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.TemplateProperty;
			setter8.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_76.Build, context)
			};
			controlTheme.Add(setter8);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter9 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter10 = setter3;
			setter10.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style.Add(setter9);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_78
	{
		private class XamlClosure_79
		{
			private class DynamicSetters_80
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				((Decorator)intermediateRoot).Child = dockPanel2;
				Controls children = dockPanel.Children;
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				children.Add(itemsPresenter2);
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				Controls children2 = dockPanel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_SelectedContentHost";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_SelectedContentHost", service);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(TabControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(TabControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_80.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(TabControl.SelectedContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(TabControl.SelectedContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)dockPanel).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TabControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(8.0, 8.0, 8.0, 8.0);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.TemplateProperty;
			setter2.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_79.Build, context)
			};
			controlTheme.Add(setter2);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Top);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.PaddingProperty;
			setter3.Value = new Thickness(0.0, 4.0, 0.0, 0.0);
			style.Add(setter3);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Top).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter");
			Setter setter4 = new Setter();
			setter4.Property = DockPanel.DockProperty;
			setter4.Value = Dock.Top;
			style2.Add(setter4);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Bottom).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter");
			Setter setter5 = new Setter();
			setter5.Property = DockPanel.DockProperty;
			setter5.Value = Dock.Bottom;
			style3.Add(setter5);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Bottom);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.PaddingProperty;
			setter6.Value = new Thickness(0.0, 0.0, 0.0, 4.0);
			style4.Add(setter6);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Left).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter");
			Setter setter7 = new Setter();
			setter7.Property = DockPanel.DockProperty;
			setter7.Value = Dock.Left;
			style5.Add(setter7);
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Left).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter")
				.Child()
				.OfType(typeof(WrapPanel));
			Setter setter8 = new Setter();
			setter8.Property = WrapPanel.OrientationProperty;
			setter8.Value = Orientation.Vertical;
			style6.Add(setter8);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Left);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.PaddingProperty;
			setter9.Value = new Thickness(4.0, 0.0, 0.0, 0.0);
			style7.Add(setter9);
			controlTheme.Add(style7);
			Style style8 = new Style();
			style8.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Right).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter");
			Setter setter10 = new Setter();
			setter10.Property = DockPanel.DockProperty;
			setter10.Value = Dock.Right;
			style8.Add(setter10);
			controlTheme.Add(style8);
			Style style9 = new Style();
			style9.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Right).Template()
				.OfType(typeof(ItemsPresenter))
				.Name("PART_ItemsPresenter")
				.Child()
				.OfType(typeof(WrapPanel));
			Setter setter11 = new Setter();
			setter11.Property = WrapPanel.OrientationProperty;
			setter11.Value = Orientation.Vertical;
			style9.Add(setter11);
			controlTheme.Add(style9);
			Style style10 = new Style();
			style10.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabControl.TabStripPlacementProperty, (object?)Dock.Right);
			Setter setter12 = new Setter();
			setter12.Property = TemplatedControl.PaddingProperty;
			setter12.Value = new Thickness(0.0, 0.0, 4.0, 0.0);
			style10.Add(setter12);
			controlTheme.Add(style10);
			return controlTheme;
		}
	}

	private class XamlClosure_81
	{
		private class XamlClosure_82
		{
			private class DynamicSetters_83
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_83.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedContentControl.HeaderTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TabItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeLarge");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter7.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(8.0, 8.0, 8.0, 8.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_82.Build, context)
			};
			controlTheme.Add(setter9);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter10 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter11 = setter2;
			setter11.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			style3.Add(setter10);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter12 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter13 = setter2;
			setter13.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			style5.Add(setter12);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter14 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter15 = setter2;
			setter15.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value5;
			context.PopParent();
			style7.Add(setter14);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter16 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter17 = setter2;
			setter17.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value6;
			context.PopParent();
			style9.Add(setter16);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter18 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter19 = setter2;
			setter19.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value7;
			context.PopParent();
			style11.Add(setter18);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":selected").Class(":focus")
				.Class(":pointerover")
				.Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter20 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter21 = setter2;
			setter21.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value8;
			context.PopParent();
			style13.Add(setter20);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = new Style();
			style14.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)TabItem.TabStripPlacementProperty, (object?)Dock.Right);
			Setter setter22 = new Setter();
			setter22.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter22.Value = HorizontalAlignment.Right;
			style14.Add(setter22);
			controlTheme.Add(style14);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_84
	{
		private class XamlClosure_85
		{
			private class DynamicSetters_86
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(LayoutTransformControl.LayoutTransformProperty, new TemplateBinding(PopupRoot.TransformProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				((Decorator)intermediateRoot).Child = panel2;
				Controls children = panel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = panel.Children;
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				children2.Add(visualLayerManager2);
				visualLayerManager.IsPopup = true;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				DynamicSetters_86.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)panel).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(PopupRoot);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = null;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TopLevel.TransparencyLevelHintProperty;
			setter2.Value = (IReadOnlyList<WindowTransparencyLevel>)new WindowTransparencyLevel[1] { WindowTransparencyLevel.Transparent };
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter9 = setter3;
			setter9.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_85.Build, context)
			};
			controlTheme.Add(setter10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_87
	{
		private class XamlClosure_88
		{
			private class DynamicSetters_89
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(LayoutTransformControl.LayoutTransformProperty, new TemplateBinding(OverlayPopupHost.TransformProperty).ProvideValue());
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				((Decorator)intermediateRoot).Child = visualLayerManager2;
				visualLayerManager.IsPopup = true;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				DynamicSetters_89.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(OverlayPopupHost);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.TemplateProperty;
			setter8.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_88.Build, context)
			};
			controlTheme.Add(setter8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_90
	{
		private class XamlClosure_91
		{
			private class XamlClosure_92
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new StackPanel();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					StackPanel stackPanel = (StackPanel)intermediateRoot;
					context.PushParent(stackPanel);
					stackPanel.SetValue(Layoutable.MarginProperty, new Thickness(12.0, 12.0, 12.0, 12.0), BindingPriority.Template);
					stackPanel.SetValue(StackPanel.SpacingProperty, 8.0, BindingPriority.Template);
					Controls children = stackPanel.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					TextBlock textBlock5 = textBlock3;
					textBlock5.SetValue(TextBlock.FontWeightProperty, FontWeight.Medium, BindingPriority.Template);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENotifications_002EINotification_002CAvalonia_002EControls_002ETitle_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock5.Bind(textProperty, binding);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					Controls children2 = stackPanel.Children;
					TextBlock textBlock6;
					TextBlock textBlock7 = (textBlock6 = new TextBlock());
					((ISupportInitialize)textBlock7).BeginInit();
					children2.Add(textBlock7);
					TextBlock textBlock8 = (textBlock3 = textBlock6);
					context.PushParent(textBlock3);
					TextBlock textBlock9 = textBlock3;
					textBlock9.SetValue(Layoutable.MaxHeightProperty, 80.0, BindingPriority.Template);
					textBlock9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 12.0, 0.0), BindingPriority.Template);
					StyledProperty<string?> textProperty2 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENotifications_002EINotification_002CAvalonia_002EControls_002EMessage_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock9.Bind(textProperty2, binding2);
					textBlock9.SetValue(TextBlock.TextWrappingProperty, TextWrapping.Wrap, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)textBlock8).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			private class XamlClosure_93
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new TextBlock();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					TextBlock textBlock = (TextBlock)intermediateRoot;
					context.PushParent(textBlock);
					textBlock.SetValue(Layoutable.MarginProperty, new Thickness(12.0, 12.0, 12.0, 12.0), BindingPriority.Template);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock.Bind(textProperty, binding);
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ReversibleStackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				ReversibleStackPanel reversibleStackPanel = (ReversibleStackPanel)intermediateRoot;
				context.PushParent(reversibleStackPanel);
				reversibleStackPanel.Name = "PART_Items";
				service = reversibleStackPanel;
				context.AvaloniaNameScope.Register("PART_Items", service);
				DataTemplates dataTemplates = reversibleStackPanel.DataTemplates;
				DataTemplate dataTemplate;
				DataTemplate item = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				DataTemplate dataTemplate2 = dataTemplate;
				dataTemplate2.DataType = typeof(INotification);
				dataTemplate2.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_92.Build, context);
				context.PopParent();
				dataTemplates.Add(item);
				DataTemplates dataTemplates2 = reversibleStackPanel.DataTemplates;
				DataTemplate item2 = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				DataTemplate dataTemplate3 = dataTemplate;
				dataTemplate3.DataType = typeof(string);
				dataTemplate3.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_93.Build, context);
				context.PopParent();
				dataTemplates2.Add(item2);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(WindowNotificationManager);
			Setter setter = new Setter();
			setter.Property = Layoutable.MarginProperty;
			setter.Value = new Thickness(0.0, 0.0, 8.0, 8.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_91.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":topleft").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.VerticalAlignmentProperty;
			setter4.Value = VerticalAlignment.Top;
			style.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.HorizontalAlignmentProperty;
			setter5.Value = HorizontalAlignment.Left;
			style.Add(setter5);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":topright").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter6 = new Setter();
			setter6.Property = Layoutable.VerticalAlignmentProperty;
			setter6.Value = VerticalAlignment.Top;
			style2.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = Layoutable.HorizontalAlignmentProperty;
			setter7.Value = HorizontalAlignment.Right;
			style2.Add(setter7);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":bottomleft").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter8 = new Setter();
			setter8.Property = ReversibleStackPanel.ReverseOrderProperty;
			setter8.Value = true;
			style3.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = Layoutable.VerticalAlignmentProperty;
			setter9.Value = VerticalAlignment.Bottom;
			style3.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.HorizontalAlignmentProperty;
			setter10.Value = HorizontalAlignment.Left;
			style3.Add(setter10);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":bottomright").Template()
				.OfType(typeof(ReversibleStackPanel))
				.Name("PART_Items");
			Setter setter11 = new Setter();
			setter11.Property = ReversibleStackPanel.ReverseOrderProperty;
			setter11.Value = true;
			style4.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.VerticalAlignmentProperty;
			setter12.Value = VerticalAlignment.Bottom;
			style4.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.HorizontalAlignmentProperty;
			setter13.Value = HorizontalAlignment.Right;
			style4.Add(setter13);
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_94
	{
		private class XamlClosure_95
		{
			private class DynamicSetters_96
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "PART_TransparencyFallback";
				service = border;
				context.AvaloniaNameScope.Register("PART_TransparencyFallback", service);
				border.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children2.Add(border4);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				VisualLayerManager visualLayerManager;
				VisualLayerManager visualLayerManager2 = (visualLayerManager = new VisualLayerManager());
				((ISupportInitialize)visualLayerManager2).BeginInit();
				border3.Child = visualLayerManager2;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				visualLayerManager.Child = contentPresenter2;
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				DynamicSetters_96.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				((ISupportInitialize)visualLayerManager).EndInit();
				((ISupportInitialize)border3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(EmbeddableControlRoot);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontFamilyProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ContentControlThemeFontFamily");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_95.Build, context)
			};
			controlTheme.Add(setter10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_97
	{
		private class XamlClosure_98
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children2.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter2";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter2", service);
				contentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(TransitioningContentControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_98.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_99
	{
		private class XamlClosure_100
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				((Decorator)intermediateRoot).Child = scrollViewer2;
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				scrollViewer.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TreeView);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.PaddingProperty;
			setter7.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = ScrollViewer.HorizontalScrollBarVisibilityProperty;
			setter8.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = ScrollViewer.VerticalScrollBarVisibilityProperty;
			setter9.Value = ScrollBarVisibility.Auto;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter10.Value = true;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = TemplatedControl.TemplateProperty;
			setter11.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_100.Build, context)
			};
			controlTheme.Add(setter11);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_101
	{
		private class XamlClosure_102
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Separator);
			Setter setter = new Setter();
			setter.Property = InputElement.FocusableProperty;
			setter.Value = false;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.MarginProperty;
			setter4.Value = new Thickness(29.0, 1.0, 0.0, 1.0);
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.HeightProperty;
			setter5.Value = 1.0;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.TemplateProperty;
			setter6.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_102.Build, context)
			};
			controlTheme.Add(setter6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_103
	{
		private class XamlClosure_104
		{
			private class DynamicSetters_105
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_105.DynamicSetter_1(scrollViewer3, BindingPriority.Template, obj);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ContextMenu);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.BorderThicknessProperty;
			setter6.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.PaddingProperty;
			setter7.Value = new Thickness(4.0, 2.0, 4.0, 2.0);
			controlTheme.Add(setter7);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TextBlock.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value3;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TextBlock.FontWeightProperty;
			setter10.Value = FontWeight.Normal;
			controlTheme.Add(setter10);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_104.Build, context);
			context.PopParent();
			setter12.Value = value4;
			context.PopParent();
			controlTheme.Add(setter11);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_106
	{
		private class XamlClosure_107
		{
			private class DynamicSetters_108
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Controls children = grid.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children.Add(rectangle2);
				rectangle.Name = "SelectedBackground";
				service = rectangle;
				context.AvaloniaNameScope.Register("SelectedBackground", service);
				rectangle.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				rectangle.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				rectangle.SetValue(Visual.OpacityProperty, 0.75, BindingPriority.Template);
				((ISupportInitialize)rectangle).EndInit();
				Controls children2 = grid.Children;
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = new Rectangle());
				((ISupportInitialize)rectangle4).BeginInit();
				children2.Add(rectangle4);
				rectangle3.Name = "Background";
				service = rectangle3;
				context.AvaloniaNameScope.Register("Background", service);
				rectangle3.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				rectangle3.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				rectangle3.SetValue(Visual.OpacityProperty, 0.5, BindingPriority.Template);
				((ISupportInitialize)rectangle3).EndInit();
				Controls children3 = grid.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children3.Add(contentPresenter2);
				contentPresenter.Name = "Content";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("Content", service);
				contentPresenter.SetValue(Layoutable.MarginProperty, new Thickness(1.0, 0.0, 1.0, 1.0), BindingPriority.Template);
				contentPresenter.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_108.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children4 = grid.Children;
				Rectangle rectangle5;
				Rectangle rectangle6 = (rectangle5 = new Rectangle());
				((ISupportInitialize)rectangle6).BeginInit();
				children4.Add(rectangle6);
				Rectangle rectangle7;
				Rectangle rectangle8 = (rectangle7 = rectangle5);
				context.PushParent(rectangle7);
				rectangle7.Name = "FocusVisual";
				service = rectangle7;
				context.AvaloniaNameScope.Register("FocusVisual", service);
				rectangle7.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				rectangle7.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle7.Bind(strokeProperty, binding);
				rectangle7.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("FontSizeSmall");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter8.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = ContentControl.VerticalContentAlignmentProperty;
			setter9.Value = VerticalAlignment.Center;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.MinWidthProperty;
			setter10.Value = 37.0;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.MinHeightProperty;
			setter11.Value = 38.0;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = InputElement.FocusableProperty;
			setter12.Value = false;
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_107.Build, context);
			context.PopParent();
			setter14.Value = value4;
			context.PopParent();
			controlTheme.Add(setter13);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Rectangle))
				.Name("Background");
			Setter setter15 = new Setter();
			setter15.Property = Visual.IsVisibleProperty;
			setter15.Value = true;
			style.Add(setter15);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Rectangle))
				.Name("Background");
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style2.Add(setter16);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Rectangle))
				.Name("SelectedBackground");
			Setter setter17 = new Setter();
			setter17.Property = Visual.IsVisibleProperty;
			setter17.Value = true;
			style3.Add(setter17);
			controlTheme.Add(style3);
			Style style4;
			Style style5 = (style4 = new Style());
			context.PushParent(style4);
			style4.Selector = ((Selector?)null).Nesting().Class(":inactive").Template()
				.OfType(typeof(ContentPresenter))
				.Name("Content");
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value5;
			context.PopParent();
			style4.Add(setter18);
			context.PopParent();
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":btnfocused").Template()
				.OfType(typeof(Rectangle))
				.Name("FocusVisual");
			Setter setter20 = new Setter();
			setter20.Property = Visual.IsVisibleProperty;
			setter20.Value = true;
			style6.Add(setter20);
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_109
	{
		private class XamlClosure_110
		{
			private class DynamicSetters_111
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				panel.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				Controls children = panel.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "TodayBackground";
				service = rectangle5;
				context.AvaloniaNameScope.Register("TodayBackground", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding);
				rectangle5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children2 = panel.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children2.Add(rectangle7);
				rectangle6.Name = "SelectedBackground";
				service = rectangle6;
				context.AvaloniaNameScope.Register("SelectedBackground", service);
				rectangle6.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				rectangle6.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				rectangle6.SetValue(Visual.OpacityProperty, 0.75, BindingPriority.Template);
				((ISupportInitialize)rectangle6).EndInit();
				Controls children3 = panel.Children;
				Rectangle rectangle8;
				Rectangle rectangle9 = (rectangle8 = new Rectangle());
				((ISupportInitialize)rectangle9).BeginInit();
				children3.Add(rectangle9);
				rectangle8.Name = "Background";
				service = rectangle8;
				context.AvaloniaNameScope.Register("Background", service);
				rectangle8.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				rectangle8.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				rectangle8.SetValue(Visual.OpacityProperty, 0.5, BindingPriority.Template);
				((ISupportInitialize)rectangle8).EndInit();
				Controls children4 = panel.Children;
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				children4.Add(contentControl2);
				contentControl.Name = "Content";
				service = contentControl;
				context.AvaloniaNameScope.Register("Content", service);
				contentControl.SetValue(Layoutable.MarginProperty, new Thickness(5.0, 1.0, 5.0, 1.0), BindingPriority.Template);
				contentControl.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentControl.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_111.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentControl.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentControl.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				contentControl.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				contentControl.SetValue(Visual.OpacityProperty, 1.0, BindingPriority.Template);
				((ISupportInitialize)contentControl).EndInit();
				Controls children5 = panel.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children5.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "BlackoutVisual";
				service = path3;
				context.AvaloniaNameScope.Register("BlackoutVisual", service);
				path3.SetValue(Layoutable.MarginProperty, new Thickness(3.0, 3.0, 3.0, 3.0), BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty2, binding2);
				path3.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				path3.SetValue(Visual.RenderTransformOriginProperty, new RelativePoint(0.5, 0.5, RelativeUnit.Absolute), BindingPriority.Template);
				path3.SetValue(Shape.StretchProperty, Stretch.Fill, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				Controls children6 = panel.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children6.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.Name = "FocusVisual";
				service = rectangle13;
				context.AvaloniaNameScope.Register("FocusVisual", service);
				rectangle13.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				rectangle13.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = Shape.StrokeProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(strokeProperty, binding3);
				rectangle13.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarDayButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("FontSizeSmall");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter8.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = ContentControl.VerticalContentAlignmentProperty;
			setter9.Value = VerticalAlignment.Center;
			controlTheme.Add(setter9);
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.MinWidthProperty;
			setter10.Value = 5.0;
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.MinHeightProperty;
			setter11.Value = 5.0;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = InputElement.FocusableProperty;
			setter12.Value = false;
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_110.Build, context);
			context.PopParent();
			setter14.Value = value4;
			context.PopParent();
			controlTheme.Add(setter13);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Rectangle))
				.Name("Background");
			Setter setter15 = new Setter();
			setter15.Property = Visual.IsVisibleProperty;
			setter15.Value = true;
			style.Add(setter15);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Rectangle))
				.Name("Background");
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style2.Add(setter16);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Rectangle))
				.Name("SelectedBackground");
			Setter setter17 = new Setter();
			setter17.Property = Visual.IsVisibleProperty;
			setter17.Value = true;
			style3.Add(setter17);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Rectangle))
				.Name("Background");
			Setter setter18 = new Setter();
			setter18.Property = Visual.IsVisibleProperty;
			setter18.Value = false;
			style4.Add(setter18);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter19 = new Setter();
			setter19.Property = Visual.OpacityProperty;
			setter19.Value = 0.3;
			style5.Add(setter19);
			controlTheme.Add(style5);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":dayfocused").Template()
				.OfType(typeof(Rectangle))
				.Name("FocusVisual");
			Setter setter20 = new Setter();
			setter20.Property = Visual.IsVisibleProperty;
			setter20.Value = true;
			style6.Add(setter20);
			controlTheme.Add(style6);
			Style style7 = new Style();
			style7.Selector = ((Selector?)null).Nesting().Class(":today").Template()
				.OfType(typeof(Rectangle))
				.Name("TodayBackground");
			Setter setter21 = new Setter();
			setter21.Property = Visual.IsVisibleProperty;
			setter21.Value = true;
			style7.Add(setter21);
			controlTheme.Add(style7);
			Style style8;
			Style style9 = (style8 = new Style());
			context.PushParent(style8);
			Style style10 = style8;
			style10.Selector = ((Selector?)null).Nesting().Class(":inactive").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value5;
			context.PopParent();
			style10.Add(setter22);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style8 = new Style());
			context.PushParent(style8);
			Style style12 = style8;
			style12.Selector = ((Selector?)null).Nesting().Class(":today").Template()
				.OfType(typeof(ContentControl))
				.Name("Content");
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeControlLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value6;
			context.PopParent();
			style12.Add(setter24);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = new Style();
			style13.Selector = ((Selector?)null).Nesting().Class(":blackout").Template()
				.OfType(typeof(Path))
				.Name("BlackoutVisual");
			Setter setter26 = new Setter();
			setter26.Property = Visual.OpacityProperty;
			setter26.Value = 0.3;
			style13.Add(setter26);
			controlTheme.Add(style13);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_112
	{
		private class XamlClosure_113
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				Controls children = panel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 2.0, 0.0, 2.0), BindingPriority.Template);
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border5.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border5.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				border5.Child = border7;
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderBrushProperty, binding);
				border9.SetValue(Border.BorderThicknessProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				border9.SetValue(Border.CornerRadiusProperty, new CornerRadius(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border9.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				RowDefinitions rowDefinitions = grid3.RowDefinitions;
				RowDefinition rowDefinition = new RowDefinition();
				rowDefinition.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions.Add(rowDefinition);
				RowDefinitions rowDefinitions2 = grid3.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				rowDefinitions2.Add(rowDefinition2);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Styles styles = grid3.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarHeader");
				Setter setter = new Setter();
				setter.Property = InputElement.CursorProperty;
				setter.Value = new Cursor(StandardCursorType.Hand);
				style.Add(setter);
				Setter setter2 = new Setter();
				setter2.Property = TemplatedControl.BackgroundProperty;
				setter2.Value = new ImmutableSolidColorBrush(16777215u);
				style.Add(setter2);
				Setter setter3 = new Setter();
				setter3.Property = TemplatedControl.BorderThicknessProperty;
				setter3.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
				style.Add(setter3);
				styles.Add(style);
				Styles styles2 = grid3.Styles;
				Style style2 = new Style();
				style2.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarHeader").Class(":pressed")
					.Template()
					.OfType(typeof(ContentPresenter));
				Setter setter4 = new Setter();
				setter4.Property = ContentPresenter.BackgroundProperty;
				setter4.Value = new ImmutableSolidColorBrush(16777215u);
				style2.Add(setter4);
				styles2.Add(style2);
				Styles styles3 = grid3.Styles;
				Style style3 = new Style();
				style3.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarNavigation");
				Setter setter5 = new Setter();
				setter5.Property = Layoutable.HeightProperty;
				setter5.Value = 20.0;
				style3.Add(setter5);
				Setter setter6 = new Setter();
				setter6.Property = Layoutable.WidthProperty;
				setter6.Value = 28.0;
				style3.Add(setter6);
				styles3.Add(style3);
				Styles styles4 = grid3.Styles;
				Style style4;
				Style item = (style4 = new Style());
				context.PushParent(style4);
				Style style5 = style4;
				style5.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarNavigation").Child()
					.OfType(typeof(Path));
				Setter setter7;
				Setter setter8 = (setter7 = new Setter());
				context.PushParent(setter7);
				Setter setter9 = setter7;
				setter9.Property = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter9.Value = value;
				context.PopParent();
				style5.Add(setter8);
				context.PopParent();
				styles4.Add(item);
				Styles styles5 = grid3.Styles;
				Style item2 = (style4 = new Style());
				context.PushParent(style4);
				Style style6 = style4;
				style6.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarNavigation").Class(":pointerover")
					.Child()
					.OfType(typeof(Path));
				Setter setter10 = (setter7 = new Setter());
				context.PushParent(setter7);
				Setter setter11 = setter7;
				setter11.Property = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value2 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter11.Value = value2;
				context.PopParent();
				style6.Add(setter10);
				context.PopParent();
				styles5.Add(item2);
				Styles styles6 = grid3.Styles;
				Style item3 = (style4 = new Style());
				context.PushParent(style4);
				Style style7 = style4;
				style7.Selector = ((Selector?)null).OfType(typeof(Button)).Name("HeaderButton").Class(":pointerover");
				Setter setter12 = (setter7 = new Setter());
				context.PushParent(setter7);
				Setter setter13 = setter7;
				setter13.Property = TemplatedControl.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("HighlightBrush");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value3 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter13.Value = value3;
				context.PopParent();
				style7.Add(setter12);
				context.PopParent();
				styles6.Add(item3);
				Controls children2 = grid3.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children2.Add(rectangle2);
				rectangle.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				rectangle.SetValue(Layoutable.HeightProperty, 22.0, BindingPriority.Template);
				rectangle.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				rectangle.Bind(Shape.FillProperty, new TemplateBinding(CalendarItem.HeaderBackgroundProperty).ProvideValue());
				rectangle.SetValue(Shape.StretchProperty, Stretch.Fill, BindingPriority.Template);
				((ISupportInitialize)rectangle).EndInit();
				Controls children3 = grid3.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children3.Add(button2);
				button.Name = "PART_PreviousButton";
				service = button;
				context.AvaloniaNameScope.Register("PART_PreviousButton", service);
				button.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				button.Classes.Add("CalendarHeader");
				button.Classes.Add("CalendarNavigation");
				button.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button.Content = path2;
				path.SetValue(Layoutable.WidthProperty, 6.0, BindingPriority.Template);
				path.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				path.SetValue(Layoutable.MarginProperty, new Thickness(14.0, -6.0, 0.0, 0.0), BindingPriority.Template);
				path.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				path.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path.SetValue(Path.DataProperty, Geometry.Parse("M288.75,232.25 L288.75,240.625 L283,236.625 z"), BindingPriority.Template);
				path.SetValue(Shape.StretchProperty, Stretch.Fill, BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				((ISupportInitialize)button).EndInit();
				Controls children4 = grid3.Children;
				Button button3;
				Button button4 = (button3 = new Button());
				((ISupportInitialize)button4).BeginInit();
				children4.Add(button4);
				button3.Name = "PART_HeaderButton";
				service = button3;
				context.AvaloniaNameScope.Register("PART_HeaderButton", service);
				button3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				button3.SetValue(TemplatedControl.PaddingProperty, new Thickness(1.0, 5.0, 1.0, 9.0), BindingPriority.Template);
				button3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				button3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				button3.Classes.Add("CalendarHeader");
				button3.SetValue(TemplatedControl.FontSizeProperty, 10.5, BindingPriority.Template);
				button3.SetValue(TemplatedControl.FontWeightProperty, FontWeight.Bold, BindingPriority.Template);
				((ISupportInitialize)button3).EndInit();
				Controls children5 = grid3.Children;
				Button button5;
				Button button6 = (button5 = new Button());
				((ISupportInitialize)button6).BeginInit();
				children5.Add(button6);
				button5.Name = "PART_NextButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_NextButton", service);
				button5.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				button5.Classes.Add("CalendarHeader");
				button5.Classes.Add("CalendarNavigation");
				button5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				button5.Content = path4;
				path3.SetValue(Layoutable.WidthProperty, 6.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				path3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -6.0, 14.0, 0.0), BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("M282.875,231.875 L282.875,240.375 L288.625,236 z"), BindingPriority.Template);
				path3.SetValue(Shape.StretchProperty, Stretch.Fill, BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				((ISupportInitialize)button5).EndInit();
				Controls children6 = grid3.Children;
				Grid grid5;
				Grid grid6 = (grid5 = new Grid());
				((ISupportInitialize)grid6).BeginInit();
				children6.Add(grid6);
				grid5.Name = "PART_MonthView";
				service = grid5;
				context.AvaloniaNameScope.Register("PART_MonthView", service);
				grid5.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				grid5.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				grid5.SetValue(Layoutable.MarginProperty, new Thickness(6.0, -1.0, 6.0, 6.0), BindingPriority.Template);
				grid5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				RowDefinitions rowDefinitions3 = grid5.RowDefinitions;
				RowDefinition rowDefinition3 = new RowDefinition();
				rowDefinition3.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions3.Add(rowDefinition3);
				RowDefinitions rowDefinitions4 = grid5.RowDefinitions;
				RowDefinition rowDefinition4 = new RowDefinition();
				rowDefinition4.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions4.Add(rowDefinition4);
				RowDefinitions rowDefinitions5 = grid5.RowDefinitions;
				RowDefinition rowDefinition5 = new RowDefinition();
				rowDefinition5.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions5.Add(rowDefinition5);
				RowDefinitions rowDefinitions6 = grid5.RowDefinitions;
				RowDefinition rowDefinition6 = new RowDefinition();
				rowDefinition6.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions6.Add(rowDefinition6);
				RowDefinitions rowDefinitions7 = grid5.RowDefinitions;
				RowDefinition rowDefinition7 = new RowDefinition();
				rowDefinition7.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions7.Add(rowDefinition7);
				RowDefinitions rowDefinitions8 = grid5.RowDefinitions;
				RowDefinition rowDefinition8 = new RowDefinition();
				rowDefinition8.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions8.Add(rowDefinition8);
				RowDefinitions rowDefinitions9 = grid5.RowDefinitions;
				RowDefinition rowDefinition9 = new RowDefinition();
				rowDefinition9.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions9.Add(rowDefinition9);
				ColumnDefinitions columnDefinitions4 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition4);
				ColumnDefinitions columnDefinitions5 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition5 = new ColumnDefinition();
				columnDefinition5.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions5.Add(columnDefinition5);
				ColumnDefinitions columnDefinitions6 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition6 = new ColumnDefinition();
				columnDefinition6.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions6.Add(columnDefinition6);
				ColumnDefinitions columnDefinitions7 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition7 = new ColumnDefinition();
				columnDefinition7.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions7.Add(columnDefinition7);
				ColumnDefinitions columnDefinitions8 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition8 = new ColumnDefinition();
				columnDefinition8.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions8.Add(columnDefinition8);
				ColumnDefinitions columnDefinitions9 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition9 = new ColumnDefinition();
				columnDefinition9.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions9.Add(columnDefinition9);
				ColumnDefinitions columnDefinitions10 = grid5.ColumnDefinitions;
				ColumnDefinition columnDefinition10 = new ColumnDefinition();
				columnDefinition10.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions10.Add(columnDefinition10);
				((ISupportInitialize)grid5).EndInit();
				Controls children7 = grid3.Children;
				Grid grid7;
				Grid grid8 = (grid7 = new Grid());
				((ISupportInitialize)grid8).BeginInit();
				children7.Add(grid8);
				grid7.Name = "PART_YearView";
				service = grid7;
				context.AvaloniaNameScope.Register("PART_YearView", service);
				grid7.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				grid7.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				grid7.SetValue(Layoutable.MarginProperty, new Thickness(6.0, -3.0, 7.0, 6.0), BindingPriority.Template);
				grid7.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				RowDefinitions rowDefinitions10 = grid7.RowDefinitions;
				RowDefinition rowDefinition10 = new RowDefinition();
				rowDefinition10.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions10.Add(rowDefinition10);
				RowDefinitions rowDefinitions11 = grid7.RowDefinitions;
				RowDefinition rowDefinition11 = new RowDefinition();
				rowDefinition11.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions11.Add(rowDefinition11);
				RowDefinitions rowDefinitions12 = grid7.RowDefinitions;
				RowDefinition rowDefinition12 = new RowDefinition();
				rowDefinition12.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions12.Add(rowDefinition12);
				ColumnDefinitions columnDefinitions11 = grid7.ColumnDefinitions;
				ColumnDefinition columnDefinition11 = new ColumnDefinition();
				columnDefinition11.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions11.Add(columnDefinition11);
				ColumnDefinitions columnDefinitions12 = grid7.ColumnDefinitions;
				ColumnDefinition columnDefinition12 = new ColumnDefinition();
				columnDefinition12.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions12.Add(columnDefinition12);
				ColumnDefinitions columnDefinitions13 = grid7.ColumnDefinitions;
				ColumnDefinition columnDefinition13 = new ColumnDefinition();
				columnDefinition13.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions13.Add(columnDefinition13);
				ColumnDefinitions columnDefinitions14 = grid7.ColumnDefinitions;
				ColumnDefinition columnDefinition14 = new ColumnDefinition();
				columnDefinition14.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions14.Add(columnDefinition14);
				((ISupportInitialize)grid7).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children8 = panel.Children;
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = new Rectangle());
				((ISupportInitialize)rectangle4).BeginInit();
				children8.Add(rectangle4);
				Rectangle rectangle5;
				Rectangle rectangle6 = (rectangle5 = rectangle3);
				context.PushParent(rectangle5);
				rectangle5.Name = "DisabledVisual";
				service = rectangle5;
				context.AvaloniaNameScope.Register("DisabledVisual", service);
				rectangle5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 2.0, 0.0, 2.0), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeControlLowBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding2);
				rectangle5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StyledProperty<double> opacityProperty = Visual.OpacityProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
				context.ProvideTargetProperty = Visual.OpacityProperty;
				IBinding binding3 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(opacityProperty, binding3);
				rectangle5.SetValue(Shape.StretchProperty, Stretch.Fill, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle6).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_114
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new TextBlock();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				TextBlock textBlock = (TextBlock)intermediateRoot;
				context.PushParent(textBlock);
				textBlock.Margin = new Thickness(0.0, 4.0, 0.0, 4.0);
				textBlock.HorizontalAlignment = HorizontalAlignment.Center;
				textBlock.VerticalAlignment = VerticalAlignment.Center;
				textBlock.FontSize = 9.5;
				textBlock.FontWeight = FontWeight.Bold;
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				context.ProvideTargetProperty = TextBlock.TextProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock.Bind(textProperty, binding);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.CornerRadiusProperty;
			setter.Value = new CornerRadius(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_113.Build, context);
			context.PopParent();
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = CalendarItem.DayTitleTemplateProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_114.Build, context);
			context.PopParent();
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":calendardisabled").Template()
				.OfType(typeof(Rectangle))
				.Name("DisabledVisual");
			Setter setter7 = new Setter();
			setter7.Property = Visual.IsVisibleProperty;
			setter7.Value = true;
			style.Add(setter7);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_115
	{
		private class XamlClosure_116
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Root";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Root", service);
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				Controls children = ((Panel)intermediateRoot).Children;
				CalendarItem calendarItem;
				CalendarItem calendarItem2 = (calendarItem = new CalendarItem());
				((ISupportInitialize)calendarItem2).BeginInit();
				children.Add(calendarItem2);
				calendarItem.Name = "PART_CalendarItem";
				service = calendarItem;
				context.AvaloniaNameScope.Register("PART_CalendarItem", service);
				calendarItem.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				calendarItem.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				calendarItem.Bind(CalendarItem.HeaderBackgroundProperty, new TemplateBinding(Avalonia.Controls.Calendar.HeaderBackgroundProperty).ProvideValue());
				((ISupportInitialize)calendarItem).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Avalonia.Controls.Calendar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = Avalonia.Controls.Calendar.HeaderBackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.TemplateProperty;
			setter10.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_116.Build, context)
			};
			controlTheme.Add(setter10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_117
	{
		private class XamlClosure_118
		{
			private class XamlClosure_119
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					object service;
					if (P_0 != null)
					{
						service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Grid();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					Grid grid = (Grid)intermediateRoot;
					context.PushParent(grid);
					grid.SetValue(Layoutable.WidthProperty, 19.0, BindingPriority.Template);
					grid.SetValue(Layoutable.HeightProperty, 18.0, BindingPriority.Template);
					grid.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
					grid.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
					grid.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
					StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
					DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlLowBrush");
					context.ProvideTargetProperty = Panel.BackgroundProperty;
					IBinding binding = dynamicResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					grid.Bind(backgroundProperty, binding);
					grid.SetValue(Visual.ClipToBoundsProperty, value: false, BindingPriority.Template);
					ColumnDefinitions columnDefinitions = new ColumnDefinitions();
					columnDefinitions.Capacity = 4;
					columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
					columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
					columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
					columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
					grid.ColumnDefinitions = columnDefinitions;
					RowDefinitions rowDefinitions = new RowDefinitions();
					rowDefinitions.Capacity = 4;
					rowDefinitions.Add(new RowDefinition(new GridLength(23.0, GridUnitType.Star)));
					rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
					rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
					rowDefinitions.Add(new RowDefinition(new GridLength(19.0, GridUnitType.Star)));
					grid.RowDefinitions = rowDefinitions;
					Controls children = grid.Children;
					Border border;
					Border border2 = (border = new Border());
					((ISupportInitialize)border2).BeginInit();
					children.Add(border2);
					Border border3;
					Border border4 = (border3 = border);
					context.PushParent(border3);
					Border border5 = border3;
					border5.Name = "Highlight";
					service = border5;
					context.AvaloniaNameScope.Register("Highlight", service);
					border5.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
					border5.SetValue(Grid.RowSpanProperty, 4, BindingPriority.Template);
					border5.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
					border5.SetValue(Layoutable.MarginProperty, new Thickness(-1.0, -1.0, -1.0, -1.0), BindingPriority.Template);
					StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
					DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("HighlightBrush");
					context.ProvideTargetProperty = Border.BorderBrushProperty;
					IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					border5.Bind(borderBrushProperty, binding2);
					border5.SetValue(Border.BorderThicknessProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)border4).EndInit();
					Controls children2 = grid.Children;
					Border border6;
					Border border7 = (border6 = new Border());
					((ISupportInitialize)border7).BeginInit();
					children2.Add(border7);
					Border border8 = (border3 = border6);
					context.PushParent(border3);
					Border border9 = border3;
					border9.Name = "Background";
					service = border9;
					context.AvaloniaNameScope.Register("Background", service);
					border9.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
					border9.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
					border9.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
					border9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -1.0, 0.0, 0.0), BindingPriority.Template);
					StyledProperty<IBrush?> borderBrushProperty2 = Border.BorderBrushProperty;
					DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderHighBrush");
					context.ProvideTargetProperty = Border.BorderBrushProperty;
					IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
					context.ProvideTargetProperty = null;
					border9.Bind(borderBrushProperty2, binding3);
					border9.SetValue(Border.BorderThicknessProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
					border9.SetValue(Border.CornerRadiusProperty, new CornerRadius(0.5, 0.5, 0.5, 0.5), BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)border8).EndInit();
					Controls children3 = grid.Children;
					Rectangle rectangle;
					Rectangle rectangle2 = (rectangle = new Rectangle());
					((ISupportInitialize)rectangle2).BeginInit();
					children3.Add(rectangle2);
					Rectangle rectangle3;
					Rectangle rectangle4 = (rectangle3 = rectangle);
					context.PushParent(rectangle3);
					rectangle3.SetValue(Grid.RowSpanProperty, 1, BindingPriority.Template);
					rectangle3.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
					StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
					DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeAccentBrush");
					context.ProvideTargetProperty = Shape.FillProperty;
					IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
					context.ProvideTargetProperty = null;
					rectangle3.Bind(fillProperty, binding4);
					StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
					DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderHighBrush");
					context.ProvideTargetProperty = Shape.StrokeProperty;
					IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
					context.ProvideTargetProperty = null;
					rectangle3.Bind(strokeProperty, binding5);
					rectangle3.SetValue(Shape.StrokeThicknessProperty, 1.0, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)rectangle4).EndInit();
					Controls children4 = grid.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children4.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					textBlock3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
					textBlock3.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
					textBlock3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
					textBlock3.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
					textBlock3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, -1.0, 0.0, 0.0), BindingPriority.Template);
					textBlock3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
					textBlock3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
					StyledProperty<double> fontSizeProperty = TextBlock.FontSizeProperty;
					DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("FontSizeSmall");
					context.ProvideTargetProperty = TextBlock.FontSizeProperty;
					IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock3.Bind(fontSizeProperty, binding6);
					StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
					DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeBorderHighBrush");
					context.ProvideTargetProperty = TextBlock.ForegroundProperty;
					IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock3.Bind(foregroundProperty, binding7);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
					compiledBindingExtension.Source = DateTime.Today;
					compiledBindingExtension.Path = new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.System_002EDateTime_002CSystem_002ERuntime_002EDay_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding8 = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock3.Bind(textProperty, binding8);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					Controls children5 = grid.Children;
					Ellipse ellipse;
					Ellipse ellipse2 = (ellipse = new Ellipse());
					((ISupportInitialize)ellipse2).BeginInit();
					children5.Add(ellipse2);
					Ellipse ellipse3;
					Ellipse ellipse4 = (ellipse3 = ellipse);
					context.PushParent(ellipse3);
					ellipse3.SetValue(Grid.ColumnSpanProperty, 4, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.WidthProperty, 3.0, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.HeightProperty, 3.0, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
					StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
					DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeControlLowBrush");
					context.ProvideTargetProperty = Shape.FillProperty;
					IBinding binding9 = dynamicResourceExtension8.ProvideValue(context);
					context.ProvideTargetProperty = null;
					ellipse3.Bind(fillProperty2, binding9);
					ellipse3.SetValue(Shape.StrokeThicknessProperty, 0.0, BindingPriority.Template);
					context.PopParent();
					((ISupportInitialize)ellipse4).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.ColumnDefinitions = columnDefinitions;
				Styles styles = grid.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				Style style2 = style;
				style2.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarDropDown");
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter3 = setter;
				setter3.Property = TemplatedControl.TemplateProperty;
				ControlTemplate controlTemplate;
				ControlTemplate value = (controlTemplate = new ControlTemplate());
				context.PushParent(controlTemplate);
				controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_119.Build, context);
				context.PopParent();
				setter3.Value = value;
				context.PopParent();
				style2.Add(setter2);
				context.PopParent();
				styles.Add(item);
				Styles styles2 = grid.Styles;
				Style style3 = new Style();
				style3.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarDropDown").Template()
					.OfType(typeof(Border))
					.Name("Highlight");
				Setter setter4 = new Setter();
				setter4.Property = Visual.IsVisibleProperty;
				setter4.Value = false;
				style3.Add(setter4);
				styles2.Add(style3);
				Styles styles3 = grid.Styles;
				Style style4 = new Style();
				style4.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarDropDown").Class(":pressed")
					.Template()
					.OfType(typeof(Border))
					.Name("Highlight");
				Setter setter5 = new Setter();
				setter5.Property = Visual.IsVisibleProperty;
				setter5.Value = true;
				style4.Add(setter5);
				styles3.Add(style4);
				Styles styles4 = grid.Styles;
				Style item2 = (style = new Style());
				context.PushParent(style);
				Style style5 = style;
				style5.Selector = ((Selector?)null).OfType(typeof(Button)).Class("CalendarDropDown").Class(":pointerover")
					.Template()
					.OfType(typeof(Border))
					.Name("Background");
				Setter setter6 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter7 = setter;
				setter7.Property = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush4");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				IBinding value2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter7.Value = value2;
				context.PopParent();
				style5.Add(setter6);
				context.PopParent();
				styles4.Add(item2);
				Controls children = grid.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children.Add(textBox2);
				textBox.Name = "PART_TextBox";
				service = textBox;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				textBox.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox.Bind(TextBox.HorizontalContentAlignmentProperty, new TemplateBinding(CalendarDatePicker.HorizontalContentAlignmentProperty).ProvideValue());
				textBox.Bind(TextBox.VerticalContentAlignmentProperty, new TemplateBinding(CalendarDatePicker.VerticalContentAlignmentProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				textBox.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				textBox.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				textBox.Bind(DataValidationErrors.ErrorsProperty, new TemplateBinding(DataValidationErrors.ErrorsProperty).ProvideValue());
				textBox.Bind(TextBox.UseFloatingWatermarkProperty, new TemplateBinding(CalendarDatePicker.UseFloatingWatermarkProperty).ProvideValue());
				textBox.Bind(TextBox.WatermarkProperty, new TemplateBinding(CalendarDatePicker.WatermarkProperty).ProvideValue());
				((ISupportInitialize)textBox).EndInit();
				Controls children2 = grid.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children2.Add(button2);
				button.Name = "PART_Button";
				service = button;
				context.AvaloniaNameScope.Register("PART_Button", service);
				button.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				button.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				button.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 0.0, 2.0, 0.0), BindingPriority.Template);
				button.SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				button.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				button.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				button.Classes.Add("CalendarDropDown");
				button.SetValue(Visual.ClipToBoundsProperty, value: false, BindingPriority.Template);
				button.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				button.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)button).EndInit();
				Controls children3 = grid.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children3.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: false, BindingPriority.Template);
				Avalonia.Controls.Calendar calendar;
				Avalonia.Controls.Calendar calendar2 = (calendar = new Avalonia.Controls.Calendar());
				((ISupportInitialize)calendar2).BeginInit();
				popup.Child = calendar2;
				calendar.Name = "PART_Calendar";
				service = calendar;
				context.AvaloniaNameScope.Register("PART_Calendar", service);
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateProperty, new TemplateBinding(CalendarDatePicker.DisplayDateProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateEndProperty, new TemplateBinding(CalendarDatePicker.DisplayDateEndProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.DisplayDateStartProperty, new TemplateBinding(CalendarDatePicker.DisplayDateStartProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.FirstDayOfWeekProperty, new TemplateBinding(CalendarDatePicker.FirstDayOfWeekProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.IsTodayHighlightedProperty, new TemplateBinding(CalendarDatePicker.IsTodayHighlightedProperty).ProvideValue());
				calendar.Bind(Avalonia.Controls.Calendar.SelectedDateProperty, new TemplateBinding(CalendarDatePicker.SelectedDateProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				((ISupportInitialize)calendar).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CalendarDatePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter8);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_118.Build, context);
			context.PopParent();
			setter10.Value = value4;
			context.PopParent();
			controlTheme.Add(setter9);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Class(":focus").Template()
				.OfType(typeof(TextBox))
				.Name("PART_TextBox");
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style.Add(setter11);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_120
	{
		private class XamlClosure_121
		{
			private class DynamicSetters_122
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new LayoutTransformControl();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_LayoutTransformControl";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_LayoutTransformControl", service);
				((AvaloniaObject)intermediateRoot).SetValue(LayoutTransformControl.UseRenderTransformProperty, value: true, BindingPriority.Template);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				((Decorator)intermediateRoot).Child = border2;
				border.SetValue(Layoutable.MarginProperty, new Thickness(8.0, 8.0, 0.0, 0.0), BindingPriority.Template);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ContentControl contentControl;
				ContentControl contentControl2 = (contentControl = new ContentControl());
				((ISupportInitialize)contentControl2).BeginInit();
				border.Child = contentControl2;
				contentControl.Name = "PART_Content";
				service = contentControl;
				context.AvaloniaNameScope.Register("PART_Content", service);
				contentControl.SetValue(Layoutable.MinHeightProperty, 150.0, BindingPriority.Template);
				DynamicSetters_122.DynamicSetter_1(contentControl, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((ISupportInitialize)contentControl).EndInit();
				((ISupportInitialize)border).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NotificationCard);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("NotificationCardBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.UseLayoutRoundingProperty;
			setter4.Value = true;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.WidthProperty;
			setter5.Value = 350.0;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.FontSizeProperty;
			setter6.Value = 14.0;
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.ForegroundProperty;
			setter7.Value = new ImmutableSolidColorBrush(uint.MaxValue);
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = Visual.RenderTransformOriginProperty;
			setter8.Value = new RelativePoint(0.5, 0.75, RelativeUnit.Relative);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_121.Build, context)
			};
			controlTheme.Add(setter9);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting();
			IList<IAnimation> animations = style.Animations;
			Animation animation = new Animation();
			animation.Easing = Easing.Parse("QuadraticEaseIn");
			animation.FillMode = FillMode.Forward;
			animation.Duration = TimeSpan.FromTicks(4500000L);
			KeyFrames children = animation.Children;
			KeyFrame keyFrame = new KeyFrame();
			keyFrame.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters = keyFrame.Setters;
			Setter setter10 = new Setter();
			setter10.Property = Visual.OpacityProperty;
			setter10.Value = 0.0;
			setters.Add(setter10);
			AvaloniaList<IAnimationSetter> setters2 = keyFrame.Setters;
			Setter setter11 = new Setter();
			setter11.Property = TranslateTransform.YProperty;
			setter11.Value = 20.0;
			setters2.Add(setter11);
			AvaloniaList<IAnimationSetter> setters3 = keyFrame.Setters;
			Setter setter12 = new Setter();
			setter12.Property = ScaleTransform.ScaleXProperty;
			setter12.Value = 0.85;
			setters3.Add(setter12);
			AvaloniaList<IAnimationSetter> setters4 = keyFrame.Setters;
			Setter setter13 = new Setter();
			setter13.Property = ScaleTransform.ScaleYProperty;
			setter13.Value = 0.85;
			setters4.Add(setter13);
			children.Add(keyFrame);
			KeyFrames children2 = animation.Children;
			KeyFrame keyFrame2 = new KeyFrame();
			keyFrame2.Cue = Cue.Parse("30%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters5 = keyFrame2.Setters;
			Setter setter14 = new Setter();
			setter14.Property = TranslateTransform.YProperty;
			setter14.Value = -20.0;
			setters5.Add(setter14);
			children2.Add(keyFrame2);
			KeyFrames children3 = animation.Children;
			KeyFrame keyFrame3 = new KeyFrame();
			keyFrame3.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters6 = keyFrame3.Setters;
			Setter setter15 = new Setter();
			setter15.Property = Visual.OpacityProperty;
			setter15.Value = 1.0;
			setters6.Add(setter15);
			AvaloniaList<IAnimationSetter> setters7 = keyFrame3.Setters;
			Setter setter16 = new Setter();
			setter16.Property = TranslateTransform.YProperty;
			setter16.Value = 0.0;
			setters7.Add(setter16);
			AvaloniaList<IAnimationSetter> setters8 = keyFrame3.Setters;
			Setter setter17 = new Setter();
			setter17.Property = ScaleTransform.ScaleXProperty;
			setter17.Value = 1.0;
			setters8.Add(setter17);
			AvaloniaList<IAnimationSetter> setters9 = keyFrame3.Setters;
			Setter setter18 = new Setter();
			setter18.Property = ScaleTransform.ScaleYProperty;
			setter18.Value = 1.0;
			setters9.Add(setter18);
			children3.Add(keyFrame3);
			animations.Add(animation);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)NotificationCard.IsClosingProperty, (object?)true).Template()
				.OfType(typeof(LayoutTransformControl))
				.Name("PART_LayoutTransformControl");
			IList<IAnimation> animations2 = style2.Animations;
			Animation animation2 = new Animation();
			animation2.Easing = Easing.Parse("QuadraticEaseOut");
			animation2.FillMode = FillMode.Forward;
			animation2.Duration = TimeSpan.FromTicks(7500000L);
			KeyFrames children4 = animation2.Children;
			KeyFrame keyFrame4 = new KeyFrame();
			keyFrame4.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters10 = keyFrame4.Setters;
			Setter setter19 = new Setter();
			setter19.Property = TranslateTransform.XProperty;
			setter19.Value = 0.0;
			setters10.Add(setter19);
			AvaloniaList<IAnimationSetter> setters11 = keyFrame4.Setters;
			Setter setter20 = new Setter();
			setter20.Property = ScaleTransform.ScaleYProperty;
			setter20.Value = 1.0;
			setters11.Add(setter20);
			children4.Add(keyFrame4);
			KeyFrames children5 = animation2.Children;
			KeyFrame keyFrame5 = new KeyFrame();
			keyFrame5.Cue = Cue.Parse("70%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters12 = keyFrame5.Setters;
			Setter setter21 = new Setter();
			setter21.Property = TranslateTransform.XProperty;
			setter21.Value = 800.0;
			setters12.Add(setter21);
			AvaloniaList<IAnimationSetter> setters13 = keyFrame5.Setters;
			Setter setter22 = new Setter();
			setter22.Property = ScaleTransform.ScaleYProperty;
			setter22.Value = 1.0;
			setters13.Add(setter22);
			children5.Add(keyFrame5);
			KeyFrames children6 = animation2.Children;
			KeyFrame keyFrame6 = new KeyFrame();
			keyFrame6.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters14 = keyFrame6.Setters;
			Setter setter23 = new Setter();
			setter23.Property = ScaleTransform.ScaleYProperty;
			setter23.Value = 0.0;
			setters14.Add(setter23);
			AvaloniaList<IAnimationSetter> setters15 = keyFrame6.Setters;
			Setter setter24 = new Setter();
			setter24.Property = TranslateTransform.XProperty;
			setter24.Value = 800.0;
			setters15.Add(setter24);
			children6.Add(keyFrame6);
			animations2.Add(animation2);
			Setter setter25 = new Setter();
			setter25.Property = Visual.RenderTransformOriginProperty;
			setter25.Value = new RelativePoint(0.5, 0.0, RelativeUnit.Relative);
			style2.Add(setter25);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)NotificationCard.IsClosingProperty, (object?)true);
			IList<IAnimation> animations3 = style3.Animations;
			Animation animation3 = new Animation();
			animation3.Easing = Easing.Parse("QuadraticEaseOut");
			animation3.FillMode = FillMode.Forward;
			animation3.Duration = TimeSpan.FromTicks(12500000L);
			KeyFrames children7 = animation3.Children;
			KeyFrame keyFrame7 = new KeyFrame();
			keyFrame7.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters16 = keyFrame7.Setters;
			Setter setter26 = new Setter();
			setter26.Property = NotificationCard.IsClosedProperty;
			setter26.Value = true;
			setters16.Add(setter26);
			children7.Add(keyFrame7);
			animations3.Add(animation3);
			controlTheme.Add(style3);
			Style style4;
			Style style5 = (style4 = new Style());
			context.PushParent(style4);
			Style style6 = style4;
			style6.Selector = ((Selector?)null).Nesting().Class(":information");
			Setter setter27 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter28 = setter;
			setter28.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("NotificationCardInformationBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value2;
			context.PopParent();
			style6.Add(setter27);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style4 = new Style());
			context.PushParent(style4);
			Style style8 = style4;
			style8.Selector = ((Selector?)null).Nesting().Class(":success");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("NotificationCardSuccessBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value3;
			context.PopParent();
			style8.Add(setter29);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style4 = new Style());
			context.PushParent(style4);
			Style style10 = style4;
			style10.Selector = ((Selector?)null).Nesting().Class(":warning");
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("NotificationCardWarningBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value4;
			context.PopParent();
			style10.Add(setter31);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style4 = new Style());
			context.PushParent(style4);
			Style style12 = style4;
			style12.Selector = ((Selector?)null).Nesting().Class(":error");
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("NotificationCardErrorBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value5;
			context.PopParent();
			style12.Add(setter33);
			context.PopParent();
			controlTheme.Add(style11);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_123
	{
		private class XamlClosure_124
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ButtonSpinner();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Spinner";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Spinner", service);
				((AvaloniaObject)intermediateRoot).SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.AllowSpinProperty, new TemplateBinding(NumericUpDown.AllowSpinProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.ButtonSpinnerLocationProperty, new TemplateBinding(NumericUpDown.ButtonSpinnerLocationProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ButtonSpinner.ShowButtonSpinnerProperty, new TemplateBinding(NumericUpDown.ShowButtonSpinnerProperty).ProvideValue());
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				((ContentControl)intermediateRoot).Content = textBox2;
				textBox.Name = "PART_TextBox";
				service = textBox;
				context.AvaloniaNameScope.Register("PART_TextBox", service);
				textBox.SetValue(Layoutable.MinWidthProperty, 20.0, BindingPriority.Template);
				textBox.SetValue(Layoutable.MarginProperty, new Thickness(4.0, 4.0, 4.0, 4.0), BindingPriority.Template);
				textBox.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				textBox.Bind(TextBox.HorizontalContentAlignmentProperty, new TemplateBinding(NumericUpDown.HorizontalContentAlignmentProperty).ProvideValue());
				textBox.Bind(TextBox.VerticalContentAlignmentProperty, new TemplateBinding(NumericUpDown.VerticalContentAlignmentProperty).ProvideValue());
				textBox.SetValue(TextBox.AcceptsReturnProperty, value: false, BindingPriority.Template);
				textBox.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				textBox.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				textBox.Bind(DataValidationErrors.ErrorsProperty, new TemplateBinding(DataValidationErrors.ErrorsProperty).ProvideValue());
				textBox.Bind(TextBox.IsReadOnlyProperty, new TemplateBinding(NumericUpDown.IsReadOnlyProperty).ProvideValue());
				textBox.Bind(TextBox.TextProperty, new TemplateBinding(NumericUpDown.TextProperty).ProvideValue());
				textBox.SetValue(TextBox.TextWrappingProperty, TextWrapping.NoWrap, BindingPriority.Template);
				textBox.Bind(TextBox.WatermarkProperty, new TemplateBinding(NumericUpDown.WatermarkProperty).ProvideValue());
				((ISupportInitialize)textBox).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NumericUpDown);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = TemplatedControl.PaddingProperty;
			setter8.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_124.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_125
	{
		private class XamlClosure_126
		{
			private class DynamicSetters_127
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Controls children = ((Panel)intermediateRoot).Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				DynamicSetters_127.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = ((Panel)intermediateRoot).Children;
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				children2.Add(grid2);
				grid.Name = "PART_RefreshVisualizerPresenter";
				service = grid;
				context.AvaloniaNameScope.Register("PART_RefreshVisualizerPresenter", service);
				((ISupportInitialize)grid).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(RefreshContainer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_126.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	private class XamlClosure_128
	{
		private class XamlClosure_129
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_Root";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_Root", service);
				((AvaloniaObject)intermediateRoot).SetValue(Layoutable.MinHeightProperty, 80.0, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				Styles styles = ((StyledElement)intermediateRoot).Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(PathIcon)).Name("PART_Icon");
				Setter setter = new Setter();
				setter.Property = PathIcon.DataProperty;
				setter.Value = Geometry.Parse("M18.6195264,3.31842271 C19.0080059,3.31842271 19.3290603,3.60710385 19.3798716,3.9816481 L19.3868766,4.08577298 L19.3868766,6.97963208 C19.3868766,7.36811161 19.0981955,7.68916605 18.7236513,7.73997735 L18.6195264,7.74698235 L15.7256673,7.74698235 C15.3018714,7.74698235 14.958317,7.40342793 14.958317,6.97963208 C14.958317,6.59115255 15.2469981,6.27009811 15.6215424,6.21928681 L15.7256673,6.21228181 L16.7044011,6.21182461 C13.7917384,3.87107476 9.52212532,4.05209336 6.81933829,6.75488039 C3.92253872,9.65167996 3.92253872,14.34832 6.81933829,17.2451196 C9.71613786,20.1419192 14.4127779,20.1419192 17.3095775,17.2451196 C19.0725398,15.4821573 19.8106555,12.9925923 19.3476248,10.58925 C19.2674502,10.173107 19.5398064,9.77076216 19.9559494,9.69058758 C20.3720923,9.610413 20.7744372,9.88276918 20.8546118,10.2989121 C21.4129973,13.1971899 20.5217103,16.2033812 18.3947747,18.3303168 C14.8986373,21.8264542 9.23027854,21.8264542 5.73414113,18.3303168 C2.23800371,14.8341794 2.23800371,9.16582064 5.73414113,5.66968323 C9.05475132,2.34907304 14.3349409,2.18235834 17.8523166,5.16953912 L17.8521761,4.08577298 C17.8521761,3.66197713 18.1957305,3.31842271 18.6195264,3.31842271 Z");
				style.Add(setter);
				styles.Add(style);
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RefreshVisualizer);
			Setter setter = new Setter();
			setter.Property = InputElement.IsTabStopProperty;
			setter.Value = false;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = InputElement.IsHitTestVisibleProperty;
			setter2.Value = false;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HeightProperty;
			setter3.Value = 100.0;
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("RefreshVisualizerBackground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter8 = setter4;
			setter8.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("RefreshVisualizerForeground");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Setter setter9 = new Setter();
			setter9.Property = TemplatedControl.TemplateProperty;
			setter9.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_129.Build, context)
			};
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_130
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ThemeVariantScope);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TextElement.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_131
	{
		private class XamlClosure_132
		{
			private class DynamicSetters_133
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.SetValue(Border.BorderThicknessProperty, new Thickness(1.0, 1.0, 1.0, 1.0), BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border2.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				children.Add(border4);
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				border6.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				border6.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				border6.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				border6.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				border6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				border6.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 0 2 L 4 6 L 0 10 Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				Controls children2 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				contentPresenter3.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter3.SetValue(ContentPresenter.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				DynamicSetters_133.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				StyledProperty<IDataTemplate?> contentTemplateProperty = ContentPresenter.ContentTemplateProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Expander), 0).Property(HeaderedContentControl.HeaderTemplateProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ContentPresenter.ContentTemplateProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(contentTemplateProperty, binding2);
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter = new Setter();
			setter.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BackgroundProperty;
			setter2.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_132.Build, context);
			context.PopParent();
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border));
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			style.Add(setter6);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_134
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ToggleButton);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path));
			Setter setter = new Setter();
			setter.Property = Visual.RenderTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, -90.0, BindingPriority.Template);
			setter.Value = rotateTransform;
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_135
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ToggleButton);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path));
			Setter setter = new Setter();
			setter.Property = Visual.RenderTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, 90.0, BindingPriority.Template);
			setter.Value = rotateTransform;
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_136
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ToggleButton);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path));
			Setter setter = new Setter();
			setter.Property = Visual.RenderTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, 180.0, BindingPriority.Template);
			setter.Value = rotateTransform;
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_137
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ToggleButton);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Path));
			Setter setter = new Setter();
			setter.Property = Visual.RenderTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, 0.0, BindingPriority.Template);
			setter.Value = rotateTransform;
			style.Add(setter);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_138
	{
		private class XamlClosure_139
		{
			private class DynamicSetters_140
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid3.RowDefinitions = rowDefinitions;
				Controls children = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_toggle";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_toggle", service);
				toggleButton3.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				toggleButton3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				toggleButton3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				DynamicSetters_140.DynamicSetter_1(toggleButton3, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonRightTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_140.DynamicSetter_2(toggleButton3, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children2 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_140.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(Expander.IsExpandedProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_141
		{
			private class DynamicSetters_142
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.RowDefinitions = rowDefinitions;
				Controls children = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_toggle";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_toggle", service);
				toggleButton3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				toggleButton3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				toggleButton3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				DynamicSetters_142.DynamicSetter_1(toggleButton3, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonRightTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_142.DynamicSetter_2(toggleButton3, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children2 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_142.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(Expander.IsExpandedProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_143
		{
			private class DynamicSetters_144
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_toggle";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_toggle", service);
				toggleButton3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				toggleButton3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				toggleButton3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				DynamicSetters_144.DynamicSetter_1(toggleButton3, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonLeftTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_144.DynamicSetter_2(toggleButton3, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children2 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_144.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(Expander.IsExpandedProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_145
		{
			private class DynamicSetters_146
			{
				public static void DynamicSetter_1(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_3(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_toggle";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_toggle", service);
				toggleButton3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				toggleButton3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				toggleButton3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				DynamicSetters_146.DynamicSetter_1(toggleButton3, BindingPriority.Template, new TemplateBinding(HeaderedContentControl.HeaderProperty).ProvideValue());
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(Expander.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonRightTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_146.DynamicSetter_2(toggleButton3, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children2 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_146.DynamicSetter_3(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(Expander.IsExpandedProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Expander);
			Setter setter = new Setter();
			setter.Property = Expander.ContentTransitionProperty;
			setter.Value = new CrossFade
			{
				Duration = TimeSpan.FromTicks(2500000L)
			};
			controlTheme.Add(setter);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Expander.ExpandDirectionProperty, (object?)ExpandDirection.Down);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_139.Build, context);
			context.PopParent();
			setter4.Value = value;
			context.PopParent();
			style3.Add(setter3);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":expanded").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_toggle");
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleExpanderToggleButtonDownTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style5.Add(setter5);
			context.PopParent();
			style3.Add(style4);
			context.PopParent();
			controlTheme.Add(style2);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Expander.ExpandDirectionProperty, (object?)ExpandDirection.Up);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_141.Build, context);
			context.PopParent();
			setter8.Value = value3;
			context.PopParent();
			style7.Add(setter7);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().Class(":expanded").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_toggle");
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleExpanderToggleButtonUpTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value4 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style9.Add(setter9);
			context.PopParent();
			style7.Add(style8);
			context.PopParent();
			controlTheme.Add(style6);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Expander.ExpandDirectionProperty, (object?)ExpandDirection.Right);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_143.Build, context);
			context.PopParent();
			setter12.Value = value5;
			context.PopParent();
			style11.Add(setter11);
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Class(":expanded").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_toggle");
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SimpleExpanderToggleButtonRightTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value6 = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			style13.Add(setter13);
			context.PopParent();
			style11.Add(style12);
			context.PopParent();
			controlTheme.Add(style10);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Expander.ExpandDirectionProperty, (object?)ExpandDirection.Left);
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value7 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_145.Build, context);
			context.PopParent();
			setter16.Value = value7;
			context.PopParent();
			style15.Add(setter15);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":expanded").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_toggle");
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = StyledElement.ThemeProperty;
			StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SimpleExpanderToggleButtonLeftTheme");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value8 = staticResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			style17.Add(setter17);
			context.PopParent();
			style15.Add(style16);
			context.PopParent();
			controlTheme.Add(style14);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_147
	{
		private class XamlClosure_148
		{
			private class DynamicSetters_149
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(Layoutable P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Layoutable.MinWidthProperty, binding);
						return;
					}
					if (P_2 is double value)
					{
						int priority = (int)P_1;
						P_0.SetValue(Layoutable.MinWidthProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						throw new NullReferenceException();
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Grid grid2 = grid;
				grid2.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid2.RowDefinitions = rowDefinitions;
				Controls children = grid2.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter3.SetValue(Grid.RowProperty, 0, BindingPriority.Template);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ToggleSwitchTopHeaderMargin");
				context.ProvideTargetProperty = Layoutable.MarginProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(marginProperty, binding);
				DynamicSetters_149.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter3.SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				contentPresenter3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				Controls children2 = grid2.Children;
				Grid grid3;
				Grid grid4 = (grid3 = new Grid());
				((ISupportInitialize)grid4).BeginInit();
				children2.Add(grid4);
				Grid grid5 = (grid = grid3);
				context.PushParent(grid);
				Grid grid6 = grid;
				grid6.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("ToggleSwitchThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_149.DynamicSetter_2(grid6, BindingPriority.Template, obj);
				grid6.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				grid6.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				RowDefinitions rowDefinitions2 = grid6.RowDefinitions;
				RowDefinition rowDefinition;
				RowDefinition item = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target = rowDefinition;
				StyledProperty<GridLength> heightProperty = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ToggleSwitchPreContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target.Bind(heightProperty, binding2);
				context.PopParent();
				rowDefinitions2.Add(item);
				RowDefinitions rowDefinitions3 = grid6.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions3.Add(rowDefinition2);
				RowDefinitions rowDefinitions4 = grid6.RowDefinitions;
				RowDefinition item2 = (rowDefinition = new RowDefinition());
				context.PushParent(rowDefinition);
				RowDefinition target2 = rowDefinition;
				StyledProperty<GridLength> heightProperty2 = RowDefinition.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ToggleSwitchPostContentMargin");
				context.ProvideTargetProperty = RowDefinition.HeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				target2.Bind(heightProperty2, binding3);
				context.PopParent();
				rowDefinitions4.Add(item2);
				ColumnDefinitions columnDefinitions = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(12.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition2.SetValue(ColumnDefinition.MaxWidthProperty, 12.0, BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid6.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Controls children3 = grid6.Children;
				Grid grid7;
				Grid grid8 = (grid7 = new Grid());
				((ISupportInitialize)grid8).BeginInit();
				children3.Add(grid8);
				grid7.Name = "SwitchAreaGrid";
				service = grid7;
				context.AvaloniaNameScope.Register("SwitchAreaGrid", service);
				grid7.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				grid7.SetValue(Grid.ColumnSpanProperty, 3, BindingPriority.Template);
				grid7.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				grid7.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				grid7.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 5.0), BindingPriority.Template);
				((ISupportInitialize)grid7).EndInit();
				Controls children4 = grid6.Children;
				ContentPresenter contentPresenter5;
				ContentPresenter contentPresenter6 = (contentPresenter5 = new ContentPresenter());
				((ISupportInitialize)contentPresenter6).BeginInit();
				children4.Add(contentPresenter6);
				contentPresenter5.Name = "PART_OffContentPresenter";
				service = contentPresenter5;
				context.AvaloniaNameScope.Register("PART_OffContentPresenter", service);
				contentPresenter5.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				contentPresenter5.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				DynamicSetters_149.DynamicSetter_1(contentPresenter5, BindingPriority.Template, new TemplateBinding(ToggleSwitch.OffContentProperty).ProvideValue());
				contentPresenter5.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ToggleSwitch.OffContentTemplateProperty).ProvideValue());
				contentPresenter5.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter5.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter5).EndInit();
				Controls children5 = grid6.Children;
				ContentPresenter contentPresenter7;
				ContentPresenter contentPresenter8 = (contentPresenter7 = new ContentPresenter());
				((ISupportInitialize)contentPresenter8).BeginInit();
				children5.Add(contentPresenter8);
				contentPresenter7.Name = "PART_OnContentPresenter";
				service = contentPresenter7;
				context.AvaloniaNameScope.Register("PART_OnContentPresenter", service);
				contentPresenter7.SetValue(Grid.RowSpanProperty, 3, BindingPriority.Template);
				contentPresenter7.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				DynamicSetters_149.DynamicSetter_1(contentPresenter7, BindingPriority.Template, new TemplateBinding(ToggleSwitch.OnContentProperty).ProvideValue());
				contentPresenter7.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ToggleSwitch.OnContentTemplateProperty).ProvideValue());
				contentPresenter7.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter7.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter7).EndInit();
				Controls children6 = grid6.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children6.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "OuterBorder";
				service = border5;
				context.AvaloniaNameScope.Register("OuterBorder", service);
				border5.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border5.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				border5.SetValue(Layoutable.WidthProperty, 40.0, BindingPriority.Template);
				border5.SetValue(Border.CornerRadiusProperty, new CornerRadius(10.0, 10.0, 10.0, 10.0), BindingPriority.Template);
				border5.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderMidColor");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderBrushProperty, binding4);
				StyledProperty<Thickness> borderThicknessProperty = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ToggleSwitchOuterBorderStrokeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border5.Bind(borderThicknessProperty, binding5);
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children7 = grid6.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children7.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "SwitchKnobBounds";
				service = border9;
				context.AvaloniaNameScope.Register("SwitchKnobBounds", service);
				border9.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border9.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				border9.SetValue(Layoutable.WidthProperty, 40.0, BindingPriority.Template);
				border9.SetValue(Border.CornerRadiusProperty, new CornerRadius(10.0, 10.0, 10.0, 10.0), BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeAccentColor");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(backgroundProperty, binding6);
				StyledProperty<IBrush?> borderBrushProperty2 = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeAccentColor");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderBrushProperty2, binding7);
				StyledProperty<Thickness> borderThicknessProperty2 = Border.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ToggleSwitchOnStrokeThickness");
				context.ProvideTargetProperty = Border.BorderThicknessProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(borderThicknessProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children8 = grid6.Children;
				Canvas canvas;
				Canvas canvas2 = (canvas = new Canvas());
				((ISupportInitialize)canvas2).BeginInit();
				children8.Add(canvas2);
				Canvas canvas3;
				Canvas canvas4 = (canvas3 = canvas);
				context.PushParent(canvas3);
				canvas3.Name = "PART_SwitchKnob";
				service = canvas3;
				context.AvaloniaNameScope.Register("PART_SwitchKnob", service);
				canvas3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				canvas3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				canvas3.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				canvas3.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				Controls children9 = canvas3.Children;
				Grid grid9;
				Grid grid10 = (grid9 = new Grid());
				((ISupportInitialize)grid10).BeginInit();
				children9.Add(grid10);
				Grid grid11 = (grid = grid9);
				context.PushParent(grid);
				Grid grid12 = grid;
				grid12.Name = "PART_MovingKnobs";
				service = grid12;
				context.AvaloniaNameScope.Register("PART_MovingKnobs", service);
				grid12.SetValue(Layoutable.WidthProperty, 20.0, BindingPriority.Template);
				grid12.SetValue(Layoutable.HeightProperty, 20.0, BindingPriority.Template);
				Controls children10 = grid12.Children;
				Ellipse ellipse;
				Ellipse ellipse2 = (ellipse = new Ellipse());
				((ISupportInitialize)ellipse2).BeginInit();
				children10.Add(ellipse2);
				Ellipse ellipse3;
				Ellipse ellipse4 = (ellipse3 = ellipse);
				context.PushParent(ellipse3);
				Ellipse ellipse5 = ellipse3;
				ellipse5.Name = "SwitchKnobOn";
				service = ellipse5;
				context.AvaloniaNameScope.Register("SwitchKnobOn", service);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("HighlightForegroundColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse5.Bind(fillProperty, binding9);
				ellipse5.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse5.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse4).EndInit();
				Controls children11 = grid12.Children;
				Ellipse ellipse6;
				Ellipse ellipse7 = (ellipse6 = new Ellipse());
				((ISupportInitialize)ellipse7).BeginInit();
				children11.Add(ellipse7);
				Ellipse ellipse8 = (ellipse3 = ellipse6);
				context.PushParent(ellipse3);
				Ellipse ellipse9 = ellipse3;
				ellipse9.Name = "SwitchKnobOff";
				service = ellipse9;
				context.AvaloniaNameScope.Register("SwitchKnobOff", service);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeBorderMidColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				ellipse9.Bind(fillProperty2, binding10);
				ellipse9.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				ellipse9.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)ellipse8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid11).EndInit();
				context.PopParent();
				((ISupportInitialize)canvas4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid5).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleSwitch);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.HorizontalAlignmentProperty;
			setter4.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.VerticalAlignmentProperty;
			setter5.Value = VerticalAlignment.Center;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter6.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = ContentControl.VerticalContentAlignmentProperty;
			setter7.Value = VerticalAlignment.Center;
			controlTheme.Add(setter7);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = ToggleSwitch.KnobTransitionsProperty;
			Transitions transitions = new Transitions();
			DoubleTransition doubleTransition = new DoubleTransition();
			doubleTransition.Easing = Easing.Parse("CubicEaseOut");
			doubleTransition.Property = Canvas.LeftProperty;
			doubleTransition.Duration = TimeSpan.FromTicks(2000000L);
			transitions.Add(doubleTransition);
			setter10.Value = transitions;
			controlTheme.Add(setter10);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_148.Build, context);
			context.PopParent();
			setter12.Value = value3;
			context.PopParent();
			controlTheme.Add(setter11);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter")
				.Class(":empty");
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.MarginProperty;
			setter13.Value = new Thickness(0.0, 0.0, 0.0, 0.0);
			style.Add(setter13);
			controlTheme.Add(style);
			Style style2;
			Style style3 = (style2 = new Style());
			context.PushParent(style2);
			Style style4 = style2;
			style4.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value4;
			context.PopParent();
			style4.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = Border.BackgroundProperty;
			setter16.Value = new ImmutableSolidColorBrush(16777215u);
			style4.Add(setter16);
			context.PopParent();
			controlTheme.Add(style3);
			Style style5 = (style2 = new Style());
			context.PushParent(style2);
			Style style6 = style2;
			style6.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value5;
			context.PopParent();
			style6.Add(setter17);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style2 = new Style());
			context.PushParent(style2);
			Style style8 = style2;
			style8.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("HighlightForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value6;
			context.PopParent();
			style8.Add(setter19);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style2 = new Style());
			context.PushParent(style2);
			Style style10 = style2;
			style10.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter21 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeAccentColor2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value7;
			context.PopParent();
			style10.Add(setter21);
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeAccentColor2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value8;
			context.PopParent();
			style10.Add(setter23);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = new Style();
			style11.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Grid))
				.Name("SwitchAreaGrid");
			Setter setter25 = new Setter();
			setter25.Property = Panel.BackgroundProperty;
			setter25.Value = new ImmutableSolidColorBrush(16777215u);
			style11.Add(setter25);
			controlTheme.Add(style11);
			Style style12 = (style2 = new Style());
			context.PushParent(style2);
			Style style13 = style2;
			style13.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value9;
			context.PopParent();
			style13.Add(setter26);
			Setter setter28 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter29 = setter;
			setter29.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ThemeControlMidHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter29.Value = value10;
			context.PopParent();
			style13.Add(setter28);
			context.PopParent();
			controlTheme.Add(style12);
			Style style14 = (style2 = new Style());
			context.PushParent(style2);
			Style style15 = style2;
			style15.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeAccentColor3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value11;
			context.PopParent();
			style15.Add(setter30);
			Setter setter32 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter33 = setter;
			setter33.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ThemeAccentColor3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter33.Value = value12;
			context.PopParent();
			style15.Add(setter32);
			context.PopParent();
			controlTheme.Add(style14);
			Style style16 = (style2 = new Style());
			context.PushParent(style2);
			Style style17 = style2;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter35.Value = value13;
			context.PopParent();
			style17.Add(setter34);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style2 = new Style());
			context.PushParent(style2);
			Style style19 = style2;
			style19.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("HighlightForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value14;
			context.PopParent();
			style19.Add(setter36);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = new Style();
			style20.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(Grid))
				.Name("SwitchAreaGrid");
			Setter setter38 = new Setter();
			setter38.Property = Panel.BackgroundProperty;
			setter38.Value = new ImmutableSolidColorBrush(16777215u);
			style20.Add(setter38);
			controlTheme.Add(style20);
			Style style21 = (style2 = new Style());
			context.PushParent(style2);
			Style style22 = style2;
			style22.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter39 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter40 = setter;
			setter40.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ThemeForegroundLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value15;
			context.PopParent();
			style22.Add(setter39);
			context.PopParent();
			controlTheme.Add(style21);
			Style style23 = (style2 = new Style());
			context.PushParent(style2);
			Style style24 = style2;
			style24.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter41 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter42 = setter;
			setter42.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ThemeForegroundLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value16;
			context.PopParent();
			style24.Add(setter41);
			Setter setter43 = new Setter();
			setter43.Property = Border.BackgroundProperty;
			setter43.Value = new ImmutableSolidColorBrush(16777215u);
			style24.Add(setter43);
			context.PopParent();
			controlTheme.Add(style23);
			Style style25 = (style2 = new Style());
			context.PushParent(style2);
			Style style26 = style2;
			style26.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ThemeForegroundLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value17;
			context.PopParent();
			style26.Add(setter44);
			context.PopParent();
			controlTheme.Add(style25);
			Style style27 = (style2 = new Style());
			context.PushParent(style2);
			Style style28 = style2;
			style28.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter46 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter47 = setter;
			setter47.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("HighlightForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter47.Value = value18;
			context.PopParent();
			style28.Add(setter46);
			context.PopParent();
			controlTheme.Add(style27);
			Style style29 = (style2 = new Style());
			context.PushParent(style2);
			Style style30 = style2;
			style30.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter48 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter49 = setter;
			setter49.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ThemeForegroundLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter49.Value = value19;
			context.PopParent();
			style30.Add(setter48);
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ThemeForegroundLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value20;
			context.PopParent();
			style30.Add(setter50);
			context.PopParent();
			controlTheme.Add(style29);
			Style style31 = new Style();
			style31.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter52 = new Setter();
			setter52.Property = Visual.OpacityProperty;
			setter52.Value = 0.0;
			style31.Add(setter52);
			controlTheme.Add(style31);
			Style style32 = new Style();
			style32.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter53 = new Setter();
			setter53.Property = Visual.OpacityProperty;
			setter53.Value = 0.0;
			style32.Add(setter53);
			controlTheme.Add(style32);
			Style style33 = new Style();
			style33.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter54 = new Setter();
			setter54.Property = Visual.OpacityProperty;
			setter54.Value = 1.0;
			style33.Add(setter54);
			controlTheme.Add(style33);
			Style style34 = new Style();
			style34.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter55 = new Setter();
			setter55.Property = Visual.OpacityProperty;
			setter55.Value = 1.0;
			style34.Add(setter55);
			controlTheme.Add(style34);
			Style style35 = new Style();
			style35.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OffContentPresenter");
			Setter setter56 = new Setter();
			setter56.Property = Visual.OpacityProperty;
			setter56.Value = 0.0;
			style35.Add(setter56);
			controlTheme.Add(style35);
			Style style36 = new Style();
			style36.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OnContentPresenter");
			Setter setter57 = new Setter();
			setter57.Property = Visual.OpacityProperty;
			setter57.Value = 1.0;
			style36.Add(setter57);
			controlTheme.Add(style36);
			Style style37 = new Style();
			style37.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Border))
				.Name("OuterBorder");
			Setter setter58 = new Setter();
			setter58.Property = Visual.OpacityProperty;
			setter58.Value = 1.0;
			style37.Add(setter58);
			controlTheme.Add(style37);
			Style style38 = new Style();
			style38.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOff");
			Setter setter59 = new Setter();
			setter59.Property = Visual.OpacityProperty;
			setter59.Value = 1.0;
			style38.Add(setter59);
			controlTheme.Add(style38);
			Style style39 = new Style();
			style39.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Ellipse))
				.Name("SwitchKnobOn");
			Setter setter60 = new Setter();
			setter60.Property = Visual.OpacityProperty;
			setter60.Value = 0.0;
			style39.Add(setter60);
			controlTheme.Add(style39);
			Style style40 = new Style();
			style40.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Border))
				.Name("SwitchKnobBounds");
			Setter setter61 = new Setter();
			setter61.Property = Visual.OpacityProperty;
			setter61.Value = 0.0;
			style40.Add(setter61);
			controlTheme.Add(style40);
			Style style41 = new Style();
			style41.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OffContentPresenter");
			Setter setter62 = new Setter();
			setter62.Property = Visual.OpacityProperty;
			setter62.Value = 1.0;
			style41.Add(setter62);
			controlTheme.Add(style41);
			Style style42 = new Style();
			style42.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_OnContentPresenter");
			Setter setter63 = new Setter();
			setter63.Property = Visual.OpacityProperty;
			setter63.Value = 0.0;
			style42.Add(setter63);
			controlTheme.Add(style42);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_150
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension(typeof(RepeatButton));
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderBrushProperty;
			setter2.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter2);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class(":pointerover");
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value;
			context.PopParent();
			style.Add(setter4);
			Setter setter6 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter7 = setter3;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value2;
			context.PopParent();
			style.Add(setter6);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_151
	{
		private class XamlClosure_152
		{
			private class DynamicSetters_153
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				dataValidationErrors.Content = border2;
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "border";
				service = border3;
				context.AvaloniaNameScope.Register("border", service);
				border3.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				border3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				border3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(Layoutable.VerticalAlignmentProperty).ProvideValue());
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				border3.Child = dockPanel2;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = dockPanel);
				context.PushParent(dockPanel3);
				Controls children = dockPanel3.Children;
				UniformGrid uniformGrid;
				UniformGrid uniformGrid2 = (uniformGrid = new UniformGrid());
				((ISupportInitialize)uniformGrid2).BeginInit();
				children.Add(uniformGrid2);
				UniformGrid uniformGrid3;
				UniformGrid uniformGrid4 = (uniformGrid3 = uniformGrid);
				context.PushParent(uniformGrid3);
				uniformGrid3.Name = "PART_SpinnerPanel";
				service = uniformGrid3;
				context.AvaloniaNameScope.Register("PART_SpinnerPanel", service);
				uniformGrid3.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				uniformGrid3.Bind(Visual.IsVisibleProperty, new TemplateBinding(ButtonSpinner.ShowButtonSpinnerProperty).ProvideValue());
				uniformGrid3.SetValue(UniformGrid.RowsProperty, 2, BindingPriority.Template);
				Controls children2 = uniformGrid3.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children2.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_IncreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleButtonSpinnerRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_153.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				repeatButton5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.SetValue(Layoutable.WidthProperty, 8.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HeightProperty, 4.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0,5 L4.5,.5 9,5 6,5 4.5,3.5 3,5 z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(fillProperty, binding);
				path5.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children3 = uniformGrid3.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children3.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_DecreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleButtonSpinnerRepeatButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_153.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				repeatButton9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.SetValue(Layoutable.WidthProperty, 8.0, BindingPriority.Template);
				path9.SetValue(Layoutable.HeightProperty, 4.0, BindingPriority.Template);
				path9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Path.DataProperty, Geometry.Parse("M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(fillProperty2, binding2);
				path9.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)uniformGrid4).EndInit();
				Controls children4 = dockPanel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children4.Add(contentPresenter2);
				contentPresenter.Name = "PART_ContentPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				DynamicSetters_153.DynamicSetter_2(contentPresenter, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ButtonSpinner);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			controlTheme.Add(setter5);
			Setter setter7 = new Setter();
			setter7.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter7.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter7);
			Setter setter8 = new Setter();
			setter8.Property = ContentControl.VerticalContentAlignmentProperty;
			setter8.Value = VerticalAlignment.Center;
			controlTheme.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = InputElement.FocusableProperty;
			setter9.Value = true;
			controlTheme.Add(setter9);
			Setter setter10 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter11 = setter2;
			setter11.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_152.Build, context);
			context.PopParent();
			setter11.Value = value3;
			context.PopParent();
			controlTheme.Add(setter10);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":left");
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(StackPanel))
				.Name("PART_SpinnerPanel");
			Setter setter12 = new Setter();
			setter12.Property = DockPanel.DockProperty;
			setter12.Value = Dock.Left;
			style2.Add(setter12);
			style.Add(style2);
			controlTheme.Add(style);
			Style style3;
			Style style4 = (style3 = new Style());
			context.PushParent(style3);
			Style style5 = style3;
			style5.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style3 = new Style());
			context.PushParent(style3);
			Style style7 = style3;
			style7.Selector = ((Selector?)null).Nesting().Class(":focus").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value5;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style3 = new Style());
			context.PushParent(style3);
			Style style9 = style3;
			style9.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ErrorBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value6;
			context.PopParent();
			style9.Add(setter17);
			context.PopParent();
			controlTheme.Add(style8);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_154
	{
		private class XamlClosure_155
		{
			private class DynamicSetters_156
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.BackgroundProperty, (IBrush)new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				DynamicSetters_156.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(4293256677u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderBrushProperty;
			setter2.Value = new ImmutableSolidColorBrush(4291480266u);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.ForegroundProperty;
			setter3.Value = new ImmutableSolidColorBrush(4278190080u);
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.WidthProperty;
			setter4.Value = 45.0;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = Layoutable.VerticalAlignmentProperty;
			setter5.Value = VerticalAlignment.Stretch;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = TemplatedControl.TemplateProperty;
			setter6.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_155.Build, context)
			};
			controlTheme.Add(setter6);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter7 = new Setter();
			setter7.Property = ContentPresenter.BackgroundProperty;
			setter7.Value = new TemplateBinding(ContentPresenter.BackgroundProperty).ProvideValue();
			style.Add(setter7);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter8 = new Setter();
			setter8.Property = ContentPresenter.BackgroundProperty;
			setter8.Value = new TemplateBinding(ContentPresenter.BorderBrushProperty).ProvideValue();
			style2.Add(setter8);
			controlTheme.Add(style2);
			return controlTheme;
		}
	}

	private class XamlClosure_157
	{
		private class XamlClosure_158
		{
			private class DynamicSetters_159
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				StackPanel stackPanel = (StackPanel)intermediateRoot;
				context.PushParent(stackPanel);
				stackPanel.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				stackPanel.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				stackPanel.SetValue(StackPanel.SpacingProperty, 2.0, BindingPriority.Template);
				stackPanel.SetValue(TextElement.FontSizeProperty, 10.0, BindingPriority.Template);
				Controls children = stackPanel.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_FullScreenButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_FullScreenButton", service);
				button5.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_159.DynamicSetter_1(button5, BindingPriority.Template, obj);
				Viewbox viewbox;
				Viewbox viewbox2 = (viewbox = new Viewbox());
				((ISupportInitialize)viewbox2).BeginInit();
				button5.Content = viewbox2;
				viewbox.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				path.Name = "FullScreenButtonPath";
				service = path;
				context.AvaloniaNameScope.Register("FullScreenButtonPath", service);
				path.SetValue(Path.DataProperty, Geometry.Parse("M2048 2048v-819h-205v469l-1493 -1493h469v-205h-819v819h205v-469l1493 1493h-469v205h819z"), BindingPriority.Template);
				path.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				((ISupportInitialize)viewbox).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children2 = stackPanel.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children2.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_MinimizeButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_MinimizeButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_159.DynamicSetter_1(button9, BindingPriority.Template, obj2);
				button9.SetValue(AutomationProperties.NameProperty, "Minimize", BindingPriority.Template);
				Viewbox viewbox3;
				Viewbox viewbox4 = (viewbox3 = new Viewbox());
				((ISupportInitialize)viewbox4).BeginInit();
				button9.Content = viewbox4;
				viewbox3.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox3.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				viewbox3.Child = path4;
				path3.SetValue(Path.DataProperty, Geometry.Parse("M2048 1229v-205h-2048v205h2048z"), BindingPriority.Template);
				path3.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path3.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				((ISupportInitialize)viewbox3).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				Controls children3 = stackPanel.Children;
				Button button10;
				Button button11 = (button10 = new Button());
				((ISupportInitialize)button11).BeginInit();
				children3.Add(button11);
				Button button12 = (button3 = button10);
				context.PushParent(button3);
				Button button13 = button3;
				button13.Name = "PART_RestoreButton";
				service = button13;
				context.AvaloniaNameScope.Register("PART_RestoreButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SimpleCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_159.DynamicSetter_1(button13, BindingPriority.Template, obj3);
				button13.SetValue(AutomationProperties.NameProperty, "Maximize", BindingPriority.Template);
				Viewbox viewbox5;
				Viewbox viewbox6 = (viewbox5 = new Viewbox());
				((ISupportInitialize)viewbox6).BeginInit();
				button13.Content = viewbox6;
				viewbox5.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox5.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				StyledProperty<ITransform?> renderTransformProperty = Visual.RenderTransformProperty;
				RotateTransform rotateTransform = new RotateTransform();
				rotateTransform.SetValue(RotateTransform.AngleProperty, -90.0, BindingPriority.Template);
				viewbox5.SetValue(renderTransformProperty, rotateTransform, BindingPriority.Template);
				Path path5;
				Path path6 = (path5 = new Path());
				((ISupportInitialize)path6).BeginInit();
				viewbox5.Child = path6;
				path5.Name = "RestoreButtonPath";
				service = path5;
				context.AvaloniaNameScope.Register("RestoreButtonPath", service);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M2048 2048v-2048h-2048v2048h2048zM1843 1843h-1638v-1638h1638v1638z"), BindingPriority.Template);
				path5.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path5.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				((ISupportInitialize)path5).EndInit();
				((ISupportInitialize)viewbox5).EndInit();
				context.PopParent();
				((ISupportInitialize)button12).EndInit();
				Controls children4 = stackPanel.Children;
				Button button14;
				Button button15 = (button14 = new Button());
				((ISupportInitialize)button15).BeginInit();
				children4.Add(button15);
				Button button16 = (button3 = button14);
				context.PushParent(button3);
				Button button17 = button3;
				button17.Name = "PART_CloseButton";
				service = button17;
				context.AvaloniaNameScope.Register("PART_CloseButton", service);
				button17.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(4293398819u), BindingPriority.Template);
				button17.SetValue(TemplatedControl.BorderBrushProperty, new ImmutableSolidColorBrush(4294013050u), BindingPriority.Template);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SimpleCaptionButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_159.DynamicSetter_1(button17, BindingPriority.Template, obj4);
				button17.SetValue(AutomationProperties.NameProperty, "Close", BindingPriority.Template);
				Viewbox viewbox7;
				Viewbox viewbox8 = (viewbox7 = new Viewbox());
				((ISupportInitialize)viewbox8).BeginInit();
				button17.Content = viewbox8;
				viewbox7.SetValue(Layoutable.WidthProperty, 11.0, BindingPriority.Template);
				viewbox7.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				Path path7;
				Path path8 = (path7 = new Path());
				((ISupportInitialize)path8).BeginInit();
				viewbox7.Child = path8;
				path7.SetValue(Path.DataProperty, Geometry.Parse("M1169 1024l879 -879l-145 -145l-879 879l-879 -879l-145 145l879 879l-879 879l145 145l879 -879l879 879l145 -145z"), BindingPriority.Template);
				path7.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path7.SetValue(Shape.StretchProperty, Stretch.UniformToFill, BindingPriority.Template);
				((ISupportInitialize)path7).EndInit();
				((ISupportInitialize)viewbox7).EndInit();
				context.PopParent();
				((ISupportInitialize)button16).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(CaptionButtons);
			Setter setter = new Setter();
			setter.Property = Layoutable.MaxHeightProperty;
			setter.Value = 30.0;
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_158.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":maximized").Template()
				.OfType(typeof(Path))
				.Name("RestoreButtonPath");
			Setter setter4 = new Setter();
			setter4.Property = Path.DataProperty;
			setter4.Value = Geometry.Parse("M2048 410h-410v-410h-1638v1638h410v410h1638v-1638zM1434 1434h-1229v-1229h1229v1229zM1843 1843h-1229v-205h1024v-1024h205v1229z");
			style.Add(setter4);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Path))
				.Name("FullScreenButtonPath");
			Setter setter5 = new Setter();
			setter5.Property = Visual.IsVisibleProperty;
			setter5.Value = true;
			style2.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = Path.DataProperty;
			setter6.Value = Geometry.Parse("M205 1024h819v-819h-205v469l-674 -674l-145 145l674 674h-469v205zM1374 1229h469v-205h-819v819h205v-469l674 674l145 -145z");
			style2.Add(setter6);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Button))
				.Name("PART_RestoreButton");
			Setter setter7 = new Setter();
			setter7.Property = Visual.IsVisibleProperty;
			setter7.Value = false;
			style3.Add(setter7);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":fullscreen").Template()
				.OfType(typeof(Button))
				.Name("PART_MinimizeButton");
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			style4.Add(setter8);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Button))
				.Name("PART_RestoreButton")
				.Class(":disabled");
			Setter setter9 = new Setter();
			setter9.Property = Visual.OpacityProperty;
			setter9.Value = 0.2;
			style5.Add(setter9);
			controlTheme.Add(style5);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_160
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("M 11.416016,10 20,1.4160156 18.583984,0 10,8.5839846 1.4160156,0 0,1.4160156 8.5839844,10 0,18.583985 1.4160156,20 10,11.416015 18.583984,20 20,18.583985 Z");
		}
	}

	private class XamlClosure_161
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("m10.051 7.0032c2.215 0 4.0105 1.7901 4.0105 3.9984s-1.7956 3.9984-4.0105 3.9984c-2.215 0-4.0105-1.7901-4.0105-3.9984s1.7956-3.9984 4.0105-3.9984zm0 1.4994c-1.3844 0-2.5066 1.1188-2.5066 2.499s1.1222 2.499 2.5066 2.499 2.5066-1.1188 2.5066-2.499-1.1222-2.499-2.5066-2.499zm0-5.0026c4.6257 0 8.6188 3.1487 9.7267 7.5613 0.10085 0.40165-0.14399 0.80877-0.54686 0.90931-0.40288 0.10054-0.81122-0.14355-0.91208-0.54521-0.94136-3.7492-4.3361-6.4261-8.2678-6.4261-3.9334 0-7.3292 2.6792-8.2689 6.4306-0.10063 0.40171-0.50884 0.64603-0.91177 0.54571s-0.648-0.5073-0.54737-0.90901c1.106-4.4152 5.1003-7.5667 9.728-7.5667z");
		}
	}

	private class XamlClosure_162
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return StreamGeometry.Parse("m0.21967 0.21965c-0.26627 0.26627-0.29047 0.68293-0.07262 0.97654l0.07262 0.08412 4.0346 4.0346c-1.922 1.3495-3.3585 3.365-3.9554 5.7495-0.10058 0.4018 0.14362 0.8091 0.54543 0.9097 0.40182 0.1005 0.80909-0.1436 0.90968-0.5455 0.52947-2.1151 1.8371-3.8891 3.5802-5.0341l1.8096 1.8098c-0.70751 0.7215-1.1438 1.71-1.1438 2.8003 0 2.2092 1.7909 4 4 4 1.0904 0 2.0788-0.4363 2.8004-1.1438l5.9193 5.9195c0.2929 0.2929 0.7677 0.2929 1.0606 0 0.2663-0.2662 0.2905-0.6829 0.0726-0.9765l-0.0726-0.0841-6.1135-6.1142 0.0012-0.0015-1.2001-1.1979-2.8699-2.8693 2e-3 -8e-4 -2.8812-2.8782 0.0012-0.0018-1.1333-1.1305-4.3064-4.3058c-0.29289-0.29289-0.76777-0.29289-1.0607 0zm7.9844 9.0458 3.5351 3.5351c-0.45 0.4358-1.0633 0.704-1.7392 0.704-1.3807 0-2.5-1.1193-2.5-2.5 0-0.6759 0.26824-1.2892 0.7041-1.7391zm1.7959-5.7655c-1.0003 0-1.9709 0.14807-2.8889 0.425l1.237 1.2362c0.5358-0.10587 1.0883-0.16119 1.6519-0.16119 3.9231 0 7.3099 2.6803 8.2471 6.4332 0.1004 0.4018 0.5075 0.6462 0.9094 0.5459 0.4019-0.1004 0.6463-0.5075 0.5459-0.9094-1.103-4.417-5.0869-7.5697-9.7024-7.5697zm0.1947 3.5093 3.8013 3.8007c-0.1018-2.0569-1.7488-3.7024-3.8013-3.8007z");
		}
	}

	private class XamlClosure_163
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			object service;
			if (P_0 != null)
			{
				service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MenuFlyout menuFlyout;
			MenuFlyout result = (menuFlyout = new MenuFlyout());
			context.PushParent(menuFlyout);
			menuFlyout.Placement = PlacementMode.Bottom;
			ItemCollection items = menuFlyout.Items;
			MenuItem menuItem;
			MenuItem menuItem2 = (menuItem = new MenuItem());
			((ISupportInitialize)menuItem2).BeginInit();
			items.Add(menuItem2);
			MenuItem menuItem3;
			MenuItem menuItem4 = (menuItem3 = menuItem);
			context.PushParent(menuItem3);
			MenuItem menuItem5 = menuItem3;
			menuItem5.Name = "TextBoxContextFlyoutCutItem";
			service = menuItem5;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutCutItem", service);
			menuItem5.Header = "Cut";
			StyledProperty<ICommand?> commandProperty = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Cut", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BCut_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem5.Bind(commandProperty, binding);
			StyledProperty<bool> isEnabledProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanCutProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem5.Bind(isEnabledProperty, binding2);
			menuItem5.InputGesture = TextBox.CutGesture;
			context.PopParent();
			((ISupportInitialize)menuItem4).EndInit();
			ItemCollection items2 = menuFlyout.Items;
			MenuItem menuItem6;
			MenuItem menuItem7 = (menuItem6 = new MenuItem());
			((ISupportInitialize)menuItem7).BeginInit();
			items2.Add(menuItem7);
			MenuItem menuItem8 = (menuItem3 = menuItem6);
			context.PushParent(menuItem3);
			MenuItem menuItem9 = menuItem3;
			menuItem9.Name = "TextBoxContextFlyoutCopyItem";
			service = menuItem9;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutCopyItem", service);
			menuItem9.Header = "Copy";
			StyledProperty<ICommand?> commandProperty2 = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Copy", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BCopy_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding3 = compiledBindingExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem9.Bind(commandProperty2, binding3);
			StyledProperty<bool> isEnabledProperty2 = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanCopyProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding4 = compiledBindingExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem9.Bind(isEnabledProperty2, binding4);
			menuItem9.InputGesture = TextBox.CopyGesture;
			context.PopParent();
			((ISupportInitialize)menuItem8).EndInit();
			ItemCollection items3 = menuFlyout.Items;
			MenuItem menuItem10;
			MenuItem menuItem11 = (menuItem10 = new MenuItem());
			((ISupportInitialize)menuItem11).BeginInit();
			items3.Add(menuItem11);
			MenuItem menuItem12 = (menuItem3 = menuItem10);
			context.PushParent(menuItem3);
			MenuItem menuItem13 = menuItem3;
			menuItem13.Name = "TextBoxContextFlyoutPasteItem";
			service = menuItem13;
			context.AvaloniaNameScope.Register("TextBoxContextFlyoutPasteItem", service);
			menuItem13.Header = "Paste";
			StyledProperty<ICommand?> commandProperty3 = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Paste", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BPaste_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding5 = compiledBindingExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem13.Bind(commandProperty3, binding5);
			StyledProperty<bool> isEnabledProperty3 = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.CanPasteProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding6 = compiledBindingExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem13.Bind(isEnabledProperty3, binding6);
			menuItem13.InputGesture = TextBox.PasteGesture;
			context.PopParent();
			((ISupportInitialize)menuItem12).EndInit();
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_164
	{
		private class XamlClosure_165
		{
			private class DynamicSetters_166
			{
				public static void DynamicSetter_1(Path P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(Path.DataProperty, binding);
						return;
					}
					if (P_2 is Geometry)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Geometry value = (Geometry)P_2;
						int priority = (int)P_1;
						P_0.SetValue(Path.DataProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "PART_ButtonLayoutBorder";
				service = border;
				context.AvaloniaNameScope.Register("PART_ButtonLayoutBorder", service);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				border.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Name = "PART_GlyphElement";
				service = path3;
				context.AvaloniaNameScope.Register("PART_GlyphElement", service);
				path3.SetValue(Layoutable.WidthProperty, 10.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HeightProperty, 10.0, BindingPriority.Template);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("TextBoxClearButtonData");
				context.ProvideTargetProperty = Path.DataProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_166.DynamicSetter_1(path3, BindingPriority.Template, obj);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				path3.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension(typeof(Button));
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = InputElement.CursorProperty;
			setter.Value = new Cursor(StandardCursorType.Arrow);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(Button);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_165.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_167
	{
		private class XamlClosure_168
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "PART_ButtonLayoutBorder";
				service = border;
				context.AvaloniaNameScope.Register("PART_ButtonLayoutBorder", service);
				border.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children.Add(path2);
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.Name = "PART_GlyphElement_Reveal";
				service = path5;
				context.AvaloniaNameScope.Register("PART_GlyphElement_Reveal", service);
				path5.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HeightProperty, 8.0, BindingPriority.Template);
				path5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<Geometry> dataProperty = Path.DataProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("PasswordBoxRevealButtonData");
				context.ProvideTargetProperty = Path.DataProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(dataProperty, binding);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(fillProperty, binding2);
				path5.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				Controls children2 = panel3.Children;
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				children2.Add(path7);
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.Name = "PART_GlyphElement_Hide";
				service = path9;
				context.AvaloniaNameScope.Register("PART_GlyphElement_Hide", service);
				path9.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				path9.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				path9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<Geometry> dataProperty2 = Path.DataProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("PasswordBoxHideButtonData");
				context.ProvideTargetProperty = Path.DataProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(dataProperty2, binding3);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundColor");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(fillProperty2, binding4);
				path9.SetValue(Shape.StretchProperty, Stretch.Uniform, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension(typeof(Button));
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter = new Setter();
			setter.Property = InputElement.CursorProperty;
			setter.Value = new Cursor(StandardCursorType.Arrow);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(ToggleButton);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_168.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":unchecked").Template()
				.OfType(typeof(Path))
				.Name("PART_GlyphElement_Hide");
			Setter setter4 = new Setter();
			setter4.Property = Visual.IsVisibleProperty;
			setter4.Value = false;
			style.Add(setter4);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Path))
				.Name("PART_GlyphElement_Reveal");
			Setter setter5 = new Setter();
			setter5.Property = Visual.IsVisibleProperty;
			setter5.Value = false;
			style2.Add(setter5);
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_169
	{
		private class XamlClosure_170
		{
			private class DynamicSetters_171
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "border";
				service = border;
				context.AvaloniaNameScope.Register("border", service);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DockPanel dockPanel;
				DockPanel dockPanel2 = (dockPanel = new DockPanel());
				((ISupportInitialize)dockPanel2).BeginInit();
				border.Child = dockPanel2;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = dockPanel);
				context.PushParent(dockPanel3);
				dockPanel3.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				dockPanel3.Bind(Layoutable.HorizontalAlignmentProperty, new TemplateBinding(TextBox.HorizontalContentAlignmentProperty).ProvideValue());
				dockPanel3.Bind(Layoutable.VerticalAlignmentProperty, new TemplateBinding(TextBox.VerticalContentAlignmentProperty).ProvideValue());
				Controls children = dockPanel3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				textBlock3.Name = "floatingWatermark";
				service = textBlock3;
				context.AvaloniaNameScope.Register("floatingWatermark", service);
				textBlock3.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				StyledProperty<double> fontSizeProperty = TextBlock.FontSizeProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeSmall");
				context.ProvideTargetProperty = TextBlock.FontSizeProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(fontSizeProperty, binding);
				StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush");
				context.ProvideTargetProperty = TextBlock.ForegroundProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(foregroundProperty, binding2);
				textBlock3.Bind(TextBlock.TextProperty, new TemplateBinding(TextBox.WatermarkProperty).ProvideValue());
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				MultiBinding multiBinding;
				MultiBinding binding3 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				multiBinding.Converter = BoolConverters.And;
				IList<IBinding> bindings = multiBinding.Bindings;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(TextBox.UseFloatingWatermarkProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings.Add(item);
				IList<IBinding> bindings2 = multiBinding.Bindings;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
				compiledBindingExtension.Converter = StringConverters.IsNotNullOrEmpty;
				compiledBindingExtension.Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(TextBox.TextProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build();
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings2.Add(item2);
				context.PopParent();
				textBlock3.Bind(isVisibleProperty, binding3);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children2 = dockPanel3.Children;
				DataValidationErrors dataValidationErrors;
				DataValidationErrors dataValidationErrors2 = (dataValidationErrors = new DataValidationErrors());
				((ISupportInitialize)dataValidationErrors2).BeginInit();
				children2.Add(dataValidationErrors2);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 3;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.ColumnDefinitions = columnDefinitions;
				Controls children3 = grid.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children3.Add(contentPresenter2);
				contentPresenter.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				contentPresenter.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				DynamicSetters_171.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(TextBox.InnerLeftContentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children4 = grid.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children4.Add(scrollViewer2);
				scrollViewer.Name = "PART_ScrollViewer";
				service = scrollViewer;
				context.AvaloniaNameScope.Register("PART_ScrollViewer", service);
				scrollViewer.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				scrollViewer.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				scrollViewer.Bind(ScrollViewer.AllowAutoHideProperty, new TemplateBinding(ScrollViewer.AllowAutoHideProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.BringIntoViewOnFocusChangeProperty, new TemplateBinding(ScrollViewer.BringIntoViewOnFocusChangeProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.HorizontalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.HorizontalScrollBarVisibilityProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.IsScrollChainingEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollChainingEnabledProperty).ProvideValue());
				scrollViewer.Bind(ScrollViewer.VerticalScrollBarVisibilityProperty, new TemplateBinding(ScrollViewer.VerticalScrollBarVisibilityProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				scrollViewer.Content = panel2;
				Controls children5 = panel.Children;
				TextBlock textBlock5;
				TextBlock textBlock6 = (textBlock5 = new TextBlock());
				((ISupportInitialize)textBlock6).BeginInit();
				children5.Add(textBlock6);
				textBlock5.Name = "watermark";
				service = textBlock5;
				context.AvaloniaNameScope.Register("watermark", service);
				textBlock5.Bind(Visual.IsVisibleProperty, new TemplateBinding(TextBox.TextProperty)
				{
					Converter = StringConverters.IsNullOrEmpty
				}.ProvideValue());
				textBlock5.SetValue(Visual.OpacityProperty, 0.5, BindingPriority.Template);
				textBlock5.Bind(TextBlock.TextProperty, new TemplateBinding(TextBox.WatermarkProperty).ProvideValue());
				textBlock5.Bind(TextBlock.TextAlignmentProperty, new TemplateBinding(TextBox.TextAlignmentProperty).ProvideValue());
				textBlock5.Bind(TextBlock.TextWrappingProperty, new TemplateBinding(TextBox.TextWrappingProperty).ProvideValue());
				((ISupportInitialize)textBlock5).EndInit();
				Controls children6 = panel.Children;
				TextPresenter textPresenter;
				TextPresenter textPresenter2 = (textPresenter = new TextPresenter());
				((ISupportInitialize)textPresenter2).BeginInit();
				children6.Add(textPresenter2);
				textPresenter.Name = "PART_TextPresenter";
				service = textPresenter;
				context.AvaloniaNameScope.Register("PART_TextPresenter", service);
				textPresenter.Bind(TextPresenter.CaretBrushProperty, new TemplateBinding(TextBox.CaretBrushProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.CaretIndexProperty, new TemplateBinding(TextBox.CaretIndexProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.LineHeightProperty, new TemplateBinding(TextBox.LineHeightProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.LetterSpacingProperty, new TemplateBinding(TextBox.LetterSpacingProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.PasswordCharProperty, new TemplateBinding(TextBox.PasswordCharProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.RevealPasswordProperty, new TemplateBinding(TextBox.RevealPasswordProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionBrushProperty, new TemplateBinding(TextBox.SelectionBrushProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionEndProperty, new TemplateBinding(TextBox.SelectionEndProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionForegroundBrushProperty, new TemplateBinding(TextBox.SelectionForegroundBrushProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.SelectionStartProperty, new TemplateBinding(TextBox.SelectionStartProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.TextProperty, new TemplateBinding(TextBox.TextProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				textPresenter.Bind(TextPresenter.TextAlignmentProperty, new TemplateBinding(TextBox.TextAlignmentProperty).ProvideValue());
				textPresenter.Bind(TextPresenter.TextWrappingProperty, new TemplateBinding(TextBox.TextWrappingProperty).ProvideValue());
				((ISupportInitialize)textPresenter).EndInit();
				((ISupportInitialize)panel).EndInit();
				((ISupportInitialize)scrollViewer).EndInit();
				Controls children7 = grid.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children7.Add(contentPresenter4);
				contentPresenter3.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				contentPresenter3.SetValue(Grid.ColumnSpanProperty, 1, BindingPriority.Template);
				DynamicSetters_171.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(TextBox.InnerRightContentProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				((ISupportInitialize)grid).EndInit();
				((ISupportInitialize)dataValidationErrors).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_172
		{
			private class DynamicSetters_173
			{
				public static void DynamicSetter_1(StyledElement P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(StyledElement.ThemeProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_1 is ControlTheme)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Button();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Button button = (Button)intermediateRoot;
				context.PushParent(button);
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Command("Clear", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ETextBox_002BClear_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button.Bind(commandProperty, binding);
				button.Focusable = false;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleTextBoxClearButtonTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_173.DynamicSetter_1(button, obj);
				button.ClipToBounds = true;
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_174
		{
			private class DynamicSetters_175
			{
				public static void DynamicSetter_1(StyledElement P_0, object P_1)
				{
					if (P_1 is UnsetValueType)
					{
						P_0.SetValue(StyledElement.ThemeProperty, AvaloniaProperty.UnsetValue);
						return;
					}
					if (P_1 is IBinding)
					{
						IBinding binding = (IBinding)P_1;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_1 is ControlTheme)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					if (P_1 == null)
					{
						P_0.Theme = (ControlTheme?)P_1;
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Panel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Panel panel = (Panel)intermediateRoot;
				context.PushParent(panel);
				panel.Margin = new Thickness(4.0, 0.0, 4.0, 0.0);
				Styles styles = panel.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(ToggleButton)).PropertyEquals((AvaloniaProperty)ToggleButton.IsCheckedProperty, (object?)true);
				Setter setter = new Setter();
				setter.Property = ToolTip.TipProperty;
				setter.Value = "Hide Password";
				style.Add(setter);
				styles.Add(style);
				Styles styles2 = panel.Styles;
				Style style2 = new Style();
				style2.Selector = ((Selector?)null).OfType(typeof(ToggleButton)).PropertyEquals((AvaloniaProperty)ToggleButton.IsCheckedProperty, (object?)false);
				Setter setter2 = new Setter();
				setter2.Property = ToolTip.TipProperty;
				setter2.Value = "Show Password";
				style2.Add(setter2);
				styles2.Add(style2);
				Controls children = panel.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Background = new ImmutableSolidColorBrush(16777215u);
				toggleButton3.Focusable = false;
				StyledProperty<bool?> isCheckedProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TextBox), 0).Property(TextBox.RevealPasswordProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build())
				{
					Mode = BindingMode.TwoWay
				};
				context.ProvideTargetProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				toggleButton3.Bind(isCheckedProperty, binding);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimplePasswordBoxRevealButtonTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_175.DynamicSetter_1(toggleButton3, obj2);
				toggleButton3.ClipToBounds = true;
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TextBox);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TextBox.CaretBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter13 = setter;
			setter13.Property = TextBox.SelectionBrushProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("HighlightBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value6;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TextBox.SelectionForegroundBrushProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("HighlightForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value7;
			context.PopParent();
			controlTheme.Add(setter14);
			Setter setter16 = new Setter();
			setter16.Property = TemplatedControl.PaddingProperty;
			setter16.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter16);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = Control.ContextFlyoutProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleTextBoxContextFlyout");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value8 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			controlTheme.Add(setter17);
			Setter setter19 = new Setter();
			setter19.Property = ScrollViewer.IsScrollChainingEnabledProperty;
			setter19.Value = true;
			controlTheme.Add(setter19);
			Setter setter20 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_170.Build, context);
			context.PopParent();
			setter21.Value = value9;
			context.PopParent();
			controlTheme.Add(setter20);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter22 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter23 = setter;
			setter23.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter23.Value = value10;
			context.PopParent();
			style3.Add(setter22);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":focus").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ThemeBorderHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value11;
			context.PopParent();
			style5.Add(setter24);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":error").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter26 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter27 = setter;
			setter27.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ErrorBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter27.Value = value12;
			context.PopParent();
			style7.Add(setter26);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = new Style();
			style8.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(DockPanel));
			Setter setter28 = new Setter();
			setter28.Property = InputElement.CursorProperty;
			setter28.Value = Cursor.Parse("IBeam");
			style8.Add(setter28);
			controlTheme.Add(style8);
			Style style9 = (style = new Style());
			context.PushParent(style);
			Style style10 = style;
			style10.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Border))
				.Name("border");
			Setter setter29 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter30 = setter;
			setter30.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value13;
			context.PopParent();
			style10.Add(setter29);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style = new Style());
			context.PushParent(style);
			Style style12 = style;
			style12.Selector = ((Selector?)null).Nesting().Class("clearButton").PropertyEquals((AvaloniaProperty)TextBox.AcceptsReturnProperty, (object?)false)
				.PropertyEquals((AvaloniaProperty)TextBox.IsReadOnlyProperty, (object?)false)
				.Class(":focus")
				.Not(((Selector?)null).OfType(typeof(TextBox)).Class(":empty"));
			Setter setter31 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter32 = setter;
			setter32.Property = TextBox.InnerRightContentProperty;
			Template template;
			Template value14 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_172.Build, context);
			context.PopParent();
			setter32.Value = value14;
			context.PopParent();
			style12.Add(setter31);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = (style = new Style());
			context.PushParent(style);
			Style style14 = style;
			style14.Selector = ((Selector?)null).Nesting().Class("revealPasswordButton").PropertyEquals((AvaloniaProperty)TextBox.AcceptsReturnProperty, (object?)false)
				.PropertyEquals((AvaloniaProperty)TextBox.IsReadOnlyProperty, (object?)false)
				.Not(((Selector?)null).OfType(typeof(TextBox)).Class(":empty"));
			Setter setter33 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter34 = setter;
			setter34.Property = TextBox.InnerRightContentProperty;
			Template value15 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_174.Build, context);
			context.PopParent();
			setter34.Value = value15;
			context.PopParent();
			style14.Add(setter33);
			context.PopParent();
			controlTheme.Add(style13);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_176
	{
		private class XamlClosure_177
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.ColumnDefinitions = columnDefinitions;
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid.RowDefinitions = rowDefinitions;
				Controls children = grid.Children;
				ScrollContentPresenter scrollContentPresenter;
				ScrollContentPresenter scrollContentPresenter2 = (scrollContentPresenter = new ScrollContentPresenter());
				((ISupportInitialize)scrollContentPresenter2).BeginInit();
				children.Add(scrollContentPresenter2);
				ScrollContentPresenter scrollContentPresenter3;
				ScrollContentPresenter scrollContentPresenter4 = (scrollContentPresenter3 = scrollContentPresenter);
				context.PushParent(scrollContentPresenter3);
				scrollContentPresenter3.Name = "PART_ContentPresenter";
				service = scrollContentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				scrollContentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.HorizontalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsTypeProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.VerticalSnapPointsTypeProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsTypeProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.HorizontalSnapPointsAlignmentProperty, new TemplateBinding(ScrollViewer.HorizontalSnapPointsAlignmentProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollContentPresenter.VerticalSnapPointsAlignmentProperty, new TemplateBinding(ScrollViewer.VerticalSnapPointsAlignmentProperty).ProvideValue());
				scrollContentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				scrollContentPresenter3.Bind(ScrollViewer.IsScrollInertiaEnabledProperty, new TemplateBinding(ScrollViewer.IsScrollInertiaEnabledProperty).ProvideValue());
				GestureRecognizerCollection gestureRecognizers = scrollContentPresenter3.GestureRecognizers;
				ScrollGestureRecognizer scrollGestureRecognizer = new ScrollGestureRecognizer();
				((ISupportInitialize)scrollGestureRecognizer).BeginInit();
				ScrollGestureRecognizer scrollGestureRecognizer2 = scrollGestureRecognizer;
				context.PushParent(scrollGestureRecognizer2);
				DirectProperty<ScrollGestureRecognizer, bool> canHorizontallyScrollProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanHorizontallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanHorizontallyScrollProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canHorizontallyScrollProperty, binding);
				DirectProperty<ScrollGestureRecognizer, bool> canVerticallyScrollProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollContentPresenter.CanVerticallyScrollProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.CanVerticallyScrollProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(canVerticallyScrollProperty, binding2);
				DirectProperty<ScrollGestureRecognizer, bool> isScrollInertiaEnabledProperty = ScrollGestureRecognizer.IsScrollInertiaEnabledProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "PART_ContentPresenter").Property(ScrollViewer.IsScrollInertiaEnabledProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = ScrollGestureRecognizer.IsScrollInertiaEnabledProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				scrollGestureRecognizer2.Bind(isScrollInertiaEnabledProperty, binding3);
				context.PopParent();
				((ISupportInitialize)scrollGestureRecognizer).EndInit();
				gestureRecognizers.Add(scrollGestureRecognizer);
				context.PopParent();
				((ISupportInitialize)scrollContentPresenter4).EndInit();
				Controls children2 = grid.Children;
				ScrollBar scrollBar;
				ScrollBar scrollBar2 = (scrollBar = new ScrollBar());
				((ISupportInitialize)scrollBar2).BeginInit();
				children2.Add(scrollBar2);
				scrollBar.Name = "PART_HorizontalScrollBar";
				service = scrollBar;
				context.AvaloniaNameScope.Register("PART_HorizontalScrollBar", service);
				scrollBar.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				scrollBar.SetValue(ScrollBar.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				((ISupportInitialize)scrollBar).EndInit();
				Controls children3 = grid.Children;
				ScrollBar scrollBar3;
				ScrollBar scrollBar4 = (scrollBar3 = new ScrollBar());
				((ISupportInitialize)scrollBar4).BeginInit();
				children3.Add(scrollBar4);
				scrollBar3.Name = "PART_VerticalScrollBar";
				service = scrollBar3;
				context.AvaloniaNameScope.Register("PART_VerticalScrollBar", service);
				scrollBar3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				scrollBar3.SetValue(ScrollBar.OrientationProperty, Orientation.Vertical, BindingPriority.Template);
				((ISupportInitialize)scrollBar3).EndInit();
				Controls children4 = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children4.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				panel3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				panel3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<IBrush?> backgroundProperty = Panel.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Panel.BackgroundProperty;
				IBinding binding4 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				panel3.Bind(backgroundProperty, binding4);
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollViewer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			setter2.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_177.Build, context);
			context.PopParent();
			setter2.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_178
	{
		private class XamlClosure_179
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				Controls children = dockPanel.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				repeatButton5.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Command("LineUp", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002EScrollViewer_002BLineUp_0_0021CommandExecuteTrampoline, null, null)
					.Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton5.Bind(commandProperty, binding);
				repeatButton5.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				MultiBinding multiBinding;
				MultiBinding binding2 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				MultiBinding multiBinding2 = multiBinding;
				multiBinding2.Converter = MenuScrollingVisibilityConverter.Instance;
				multiBinding2.ConverterParameter = "0";
				IList<IBinding> bindings = multiBinding2.Bindings;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.VerticalScrollBarVisibilityProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings.Add(item);
				IList<IBinding> bindings2 = multiBinding2.Bindings;
				CompiledBindingExtension obj2 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.OffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EVector_002CAvalonia_002EBase_002EY_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item2 = obj2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings2.Add(item2);
				IList<IBinding> bindings3 = multiBinding2.Bindings;
				CompiledBindingExtension obj3 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ExtentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item3 = obj3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings3.Add(item3);
				IList<IBinding> bindings4 = multiBinding2.Bindings;
				CompiledBindingExtension obj4 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ViewportProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item4 = obj4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings4.Add(item4);
				context.PopParent();
				repeatButton5.Bind(isVisibleProperty, binding2);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				repeatButton5.Content = path2;
				path.SetValue(Path.DataProperty, Geometry.Parse("M 0 4 L 8 4 L 4 0 Z"), BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children2 = dockPanel.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children2.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				repeatButton9.SetValue(TemplatedControl.BorderThicknessProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				StyledProperty<ICommand?> commandProperty2 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Command("LineDown", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002EScrollViewer_002BLineDown_0_0021CommandExecuteTrampoline, null, null)
					.Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				repeatButton9.Bind(commandProperty2, binding3);
				repeatButton9.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				MultiBinding binding4 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				MultiBinding multiBinding3 = multiBinding;
				multiBinding3.Converter = MenuScrollingVisibilityConverter.Instance;
				multiBinding3.ConverterParameter = "100";
				IList<IBinding> bindings5 = multiBinding3.Bindings;
				CompiledBindingExtension obj5 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.VerticalScrollBarVisibilityProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item5 = obj5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings5.Add(item5);
				IList<IBinding> bindings6 = multiBinding3.Bindings;
				CompiledBindingExtension obj6 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.OffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EVector_002CAvalonia_002EBase_002EY_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item6 = obj6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings6.Add(item6);
				IList<IBinding> bindings7 = multiBinding3.Bindings;
				CompiledBindingExtension obj7 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ExtentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item7 = obj7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings7.Add(item7);
				IList<IBinding> bindings8 = multiBinding3.Bindings;
				CompiledBindingExtension obj8 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ScrollViewer.ViewportProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ESize_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item8 = obj8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings8.Add(item8);
				context.PopParent();
				repeatButton9.Bind(isVisibleProperty2, binding4);
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				repeatButton9.Content = path4;
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 0 0 L 4 4 L 8 0 Z"), BindingPriority.Template);
				((ISupportInitialize)path3).EndInit();
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Controls children3 = dockPanel.Children;
				ScrollContentPresenter scrollContentPresenter;
				ScrollContentPresenter scrollContentPresenter2 = (scrollContentPresenter = new ScrollContentPresenter());
				((ISupportInitialize)scrollContentPresenter2).BeginInit();
				children3.Add(scrollContentPresenter2);
				scrollContentPresenter.Name = "PART_ContentPresenter";
				service = scrollContentPresenter;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				scrollContentPresenter.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((ISupportInitialize)scrollContentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ScrollViewer);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_179.Build, context);
			context.PopParent();
			setter4.Value = value;
			context.PopParent();
			controlTheme.Add(setter3);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Child()
				.OfType(typeof(Path));
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style3.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(RepeatButton))
				.Class(":pointerover")
				.Child()
				.OfType(typeof(Path));
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = Shape.FillProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style5.Add(setter7);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_180
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Indent = 16.0;
			marginMultiplierConverter.Left = true;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_181
	{
		private class XamlClosure_182
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.SetValue(Layoutable.WidthProperty, 14.0, BindingPriority.Template);
				border.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				border.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				border.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				border.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				border.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path3.SetValue(Path.DataProperty, Geometry.Parse("M 0 2 L 4 6 L 0 10 Z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(fillProperty, binding);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ToggleButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_182.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":checked");
			Setter setter3 = new Setter();
			setter3.Property = Visual.RenderTransformProperty;
			setter3.Value = new RotateTransform
			{
				Angle = 45.0
			};
			style.Add(setter3);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_183
	{
		private class XamlClosure_184
		{
			private class DynamicSetters_185
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new StackPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				StackPanel stackPanel = (StackPanel)intermediateRoot;
				context.PushParent(stackPanel);
				Controls children = stackPanel.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "SelectionBorder";
				service = border3;
				context.AvaloniaNameScope.Register("SelectionBorder", service);
				border3.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border3.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border3.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				border3.SetValue(InputElement.FocusableProperty, value: true, BindingPriority.Template);
				border3.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border3.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.Name = "PART_Header";
				service = grid3;
				context.AvaloniaNameScope.Register("PART_Header", service);
				StyledProperty<Thickness> marginProperty = Layoutable.MarginProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TreeViewItem.LevelProperty));
				context.PushParent(templateBinding);
				templateBinding.Mode = BindingMode.OneWay;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("LeftMarginConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding.Converter = (IValueConverter)obj;
				context.PopParent();
				grid3.Bind(marginProperty, templateBinding2.ProvideValue());
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(16.0, GridUnitType.Pixel)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid3.ColumnDefinitions = columnDefinitions;
				Controls children2 = grid3.Children;
				ToggleButton toggleButton;
				ToggleButton toggleButton2 = (toggleButton = new ToggleButton());
				((ISupportInitialize)toggleButton2).BeginInit();
				children2.Add(toggleButton2);
				ToggleButton toggleButton3;
				ToggleButton toggleButton4 = (toggleButton3 = toggleButton);
				context.PushParent(toggleButton3);
				toggleButton3.Name = "PART_ExpandCollapseChevron";
				service = toggleButton3;
				context.AvaloniaNameScope.Register("PART_ExpandCollapseChevron", service);
				toggleButton3.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				toggleButton3.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				toggleButton3.Bind(ToggleButton.IsCheckedProperty, new TemplateBinding(TreeViewItem.IsExpandedProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleTreeViewItemToggleButtonTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_185.DynamicSetter_1(toggleButton3, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)toggleButton4).EndInit();
				Controls children3 = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children3.Add(contentPresenter2);
				contentPresenter.Name = "PART_HeaderPresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				contentPresenter.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				contentPresenter.SetValue(ContentPresenter.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				contentPresenter.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(Layoutable.HorizontalAlignmentProperty).ProvideValue());
				DynamicSetters_185.DynamicSetter_2(contentPresenter, BindingPriority.Template, new TemplateBinding(HeaderedItemsControl.HeaderProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedItemsControl.HeaderTemplateProperty).ProvideValue());
				contentPresenter.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)contentPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children4 = stackPanel.Children;
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				children4.Add(itemsPresenter2);
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(Visual.IsVisibleProperty, new TemplateBinding(TreeViewItem.IsExpandedProperty).ProvideValue());
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TreeViewItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.PaddingProperty;
			setter.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BackgroundProperty;
			setter2.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_184.Build, context);
			context.PopParent();
			setter5.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter))
				.Name("PART_HeaderPresenter");
			Setter setter6 = new Setter();
			setter6.Property = ContentPresenter.PaddingProperty;
			setter6.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			style.Add(setter6);
			controlTheme.Add(style);
			Style style2;
			Style style3 = (style2 = new Style());
			context.PushParent(style2);
			Style style4 = style2;
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("SelectionBorder")
				.Class(":pointerover");
			Setter setter7 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter8 = setter3;
			setter8.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			style4.Add(setter7);
			context.PopParent();
			controlTheme.Add(style3);
			Style style5 = (style2 = new Style());
			context.PushParent(style2);
			Style style6 = style2;
			style6.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("SelectionBorder");
			Setter setter9 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter10 = setter3;
			setter10.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style6.Add(setter9);
			context.PopParent();
			controlTheme.Add(style5);
			Style style7 = (style2 = new Style());
			context.PushParent(style2);
			Style style8 = style2;
			style8.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("SelectionBorder")
				.Class(":focus");
			Setter setter11 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter12 = setter3;
			setter12.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value4;
			context.PopParent();
			style8.Add(setter11);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style2 = new Style());
			context.PushParent(style2);
			Style style10 = style2;
			style10.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("SelectionBorder")
				.Class(":pointerover");
			Setter setter13 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter14 = setter3;
			setter14.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeAccentBrush3");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value5;
			context.PopParent();
			style10.Add(setter13);
			context.PopParent();
			controlTheme.Add(style9);
			Style style11 = (style2 = new Style());
			context.PushParent(style2);
			Style style12 = style2;
			style12.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("SelectionBorder")
				.Class(":pointerover")
				.Class(":focus");
			Setter setter15 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter16 = setter3;
			setter16.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeAccentBrush2");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style12.Add(setter15);
			context.PopParent();
			controlTheme.Add(style11);
			Style style13 = new Style();
			style13.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(ToggleButton))
				.Name("PART_ExpandCollapseChevron");
			Setter setter17 = new Setter();
			setter17.Property = Visual.IsVisibleProperty;
			setter17.Value = false;
			style13.Add(setter17);
			controlTheme.Add(style13);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_186
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new StringFormatConverter();
		}
	}

	private class XamlClosure_187
	{
		private class XamlClosure_188
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border5.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border5.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border5.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border5.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children2 = panel3.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children2.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "PART_Indicator";
				service = border9;
				context.AvaloniaNameScope.Register("PART_Indicator", service);
				border9.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(ProgressBar.IsIndeterminateProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border9.Bind(isVisibleProperty, binding);
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children3 = panel3.Children;
				Border border10;
				Border border11 = (border10 = new Border());
				((ISupportInitialize)border11).BeginInit();
				children3.Add(border11);
				Border border12 = (border3 = border10);
				context.PushParent(border3);
				Border border13 = border3;
				border13.Name = "PART_IndeterminateIndicator";
				service = border13;
				context.AvaloniaNameScope.Register("PART_IndeterminateIndicator", service);
				border13.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ProgressBar.IsIndeterminateProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border13.Bind(isVisibleProperty2, binding2);
				context.PopParent();
				((ISupportInitialize)border12).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children4 = grid.Children;
				LayoutTransformControl layoutTransformControl;
				LayoutTransformControl layoutTransformControl2 = (layoutTransformControl = new LayoutTransformControl());
				((ISupportInitialize)layoutTransformControl2).BeginInit();
				children4.Add(layoutTransformControl2);
				LayoutTransformControl layoutTransformControl3;
				LayoutTransformControl layoutTransformControl4 = (layoutTransformControl3 = layoutTransformControl);
				context.PushParent(layoutTransformControl3);
				layoutTransformControl3.Name = "PART_LayoutTransformControl";
				service = layoutTransformControl3;
				context.AvaloniaNameScope.Register("PART_LayoutTransformControl", service);
				layoutTransformControl3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				layoutTransformControl3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty3 = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(ProgressBar.ShowProgressTextProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding3 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				layoutTransformControl3.Bind(isVisibleProperty3, binding3);
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				layoutTransformControl3.Child = textBlock2;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				StyledProperty<IBrush?> foregroundProperty = TextBlock.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = TextBlock.ForegroundProperty;
				IBinding binding4 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock3.Bind(foregroundProperty, binding4);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				MultiBinding multiBinding;
				MultiBinding binding5 = (multiBinding = new MultiBinding());
				context.PushParent(multiBinding);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("StringFormatConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				multiBinding.Converter = (IMultiValueConverter)obj;
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = ProgressBar.ProgressTextFormatProperty
				}.ProvideValue());
				IList<IBinding> bindings = multiBinding.Bindings;
				CompiledBindingExtension obj2 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(RangeBase.ValueProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EMultiBinding_002CAvalonia_002EMarkup_002EBindings_0021Property();
				CompiledBindingExtension item = obj2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				bindings.Add(item);
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = ProgressBar.PercentageProperty
				}.ProvideValue());
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = RangeBase.MinimumProperty
				}.ProvideValue());
				multiBinding.Bindings.Add(new TemplateBinding
				{
					Property = RangeBase.MaximumProperty
				}.ProvideValue());
				context.PopParent();
				textBlock3.Bind(textProperty, binding5);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				context.PopParent();
				((ISupportInitialize)layoutTransformControl4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ProgressBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value3 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.TargetType = typeof(ProgressBar);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_188.Build, context);
			context.PopParent();
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":horizontal").Template()
				.OfType(typeof(Border))
				.Name("PART_Indicator");
			Setter setter8 = new Setter();
			setter8.Property = Layoutable.HorizontalAlignmentProperty;
			setter8.Value = HorizontalAlignment.Left;
			style.Add(setter8);
			Setter setter9 = new Setter();
			setter9.Property = Layoutable.VerticalAlignmentProperty;
			setter9.Value = VerticalAlignment.Stretch;
			style.Add(setter9);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(Border))
				.Name("PART_Indicator");
			Setter setter10 = new Setter();
			setter10.Property = Layoutable.HorizontalAlignmentProperty;
			setter10.Value = HorizontalAlignment.Stretch;
			style2.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.VerticalAlignmentProperty;
			setter11.Value = VerticalAlignment.Bottom;
			style2.Add(setter11);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.MinWidthProperty;
			setter12.Value = 200.0;
			style3.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.MinHeightProperty;
			setter13.Value = 16.0;
			style3.Add(setter13);
			controlTheme.Add(style3);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter14 = new Setter();
			setter14.Property = Layoutable.MinWidthProperty;
			setter14.Value = 16.0;
			style4.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Layoutable.MinHeightProperty;
			setter15.Value = 200.0;
			style4.Add(setter15);
			controlTheme.Add(style4);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":vertical").Template()
				.OfType(typeof(LayoutTransformControl))
				.Name("PART_LayoutTransformControl");
			Setter setter16 = new Setter();
			setter16.Property = LayoutTransformControl.LayoutTransformProperty;
			RotateTransform rotateTransform = new RotateTransform();
			rotateTransform.SetValue(RotateTransform.AngleProperty, 90.0, BindingPriority.Template);
			setter16.Value = rotateTransform;
			style5.Add(setter16);
			controlTheme.Add(style5);
			Style style6;
			Style style7 = (style6 = new Style());
			context.PushParent(style6);
			Style style8 = style6;
			style8.Selector = ((Selector?)null).Nesting().Class(":horizontal").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_IndeterminateIndicator");
			IList<IAnimation> animations = style8.Animations;
			Animation animation;
			Animation item = (animation = new Animation());
			context.PushParent(animation);
			Animation animation2 = animation;
			animation2.Easing = Easing.Parse("LinearEasing");
			animation2.IterationCount = IterationCount.Parse("Infinite");
			animation2.Duration = TimeSpan.FromTicks(30000000L);
			KeyFrames children = animation2.Children;
			KeyFrame keyFrame;
			KeyFrame item2 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame2 = keyFrame;
			keyFrame2.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters = keyFrame2.Setters;
			Setter item3 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.IndeterminateStartingOffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value4 = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value4;
			context.PopParent();
			setters.Add(item3);
			context.PopParent();
			children.Add(item2);
			KeyFrames children2 = animation2.Children;
			KeyFrame item4 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame3 = keyFrame;
			keyFrame3.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters2 = keyFrame3.Setters;
			Setter item5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TranslateTransform.XProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.IndeterminateEndingOffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value5 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value5;
			context.PopParent();
			setters2.Add(item5);
			context.PopParent();
			children2.Add(item4);
			context.PopParent();
			animations.Add(item);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = Layoutable.WidthProperty;
			CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
				.Property(ProgressBar.ProgressBarTemplateSettings.ContainerWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value6 = compiledBindingExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value6;
			context.PopParent();
			style8.Add(setter19);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = (style6 = new Style());
			context.PushParent(style6);
			Style style10 = style6;
			style10.Selector = ((Selector?)null).Nesting().Class(":vertical").Class(":indeterminate")
				.Template()
				.OfType(typeof(Border))
				.Name("PART_IndeterminateIndicator");
			IList<IAnimation> animations2 = style10.Animations;
			Animation item6 = (animation = new Animation());
			context.PushParent(animation);
			Animation animation3 = animation;
			animation3.Easing = Easing.Parse("LinearEasing");
			animation3.IterationCount = IterationCount.Parse("Infinite");
			animation3.Duration = TimeSpan.FromTicks(30000000L);
			KeyFrames children3 = animation3.Children;
			KeyFrame item7 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame4 = keyFrame;
			keyFrame4.Cue = Cue.Parse("0%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters3 = keyFrame4.Setters;
			Setter item8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter21 = setter;
			setter21.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.IndeterminateStartingOffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value7 = compiledBindingExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter21.Value = value7;
			context.PopParent();
			setters3.Add(item8);
			context.PopParent();
			children3.Add(item7);
			KeyFrames children4 = animation3.Children;
			KeyFrame item9 = (keyFrame = new KeyFrame());
			context.PushParent(keyFrame);
			KeyFrame keyFrame5 = keyFrame;
			keyFrame5.Cue = Cue.Parse("100%", CultureInfo.InvariantCulture);
			AvaloniaList<IAnimationSetter> setters4 = keyFrame5.Setters;
			Setter item10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter22 = setter;
			setter22.Property = TranslateTransform.YProperty;
			CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(ProgressBar), 0).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Property(ProgressBar.ProgressBarTemplateSettings.IndeterminateEndingOffsetProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value8 = compiledBindingExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value8;
			context.PopParent();
			setters4.Add(item10);
			context.PopParent();
			children4.Add(item9);
			context.PopParent();
			animations2.Add(item6);
			Setter setter23 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter24 = setter;
			setter24.Property = Layoutable.HeightProperty;
			CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002EProgressBar_002CAvalonia_002EControls_002ETemplateSettings_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
				.Property(ProgressBar.ProgressBarTemplateSettings.ContainerWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
				.Build());
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value9 = compiledBindingExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value9;
			context.PopParent();
			style10.Add(setter23);
			context.PopParent();
			controlTheme.Add(style9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_189
	{
		private class XamlClosure_190
		{
			private class DynamicSetters_191
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			private class XamlClosure_192
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new AccessText();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					AccessText accessText = (AccessText)intermediateRoot;
					context.PushParent(accessText);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					accessText.Bind(textProperty, binding);
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "root";
				service = border2;
				context.AvaloniaNameScope.Register("root", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				border2.Child = panel2;
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Controls children = panel3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "PART_HeaderPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				contentPresenter3.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				DynamicSetters_191.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(HeaderedSelectingItemsControl.HeaderProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedSelectingItemsControl.HeaderTemplateProperty).ProvideValue());
				DataTemplates dataTemplates = contentPresenter3.DataTemplates;
				DataTemplate dataTemplate;
				DataTemplate item = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				dataTemplate.DataType = typeof(string);
				dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_192.Build, context);
				context.PopParent();
				dataTemplates.Add(item);
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				Controls children2 = panel3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children2.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(MenuItem.IsSubMenuOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				popup3.SetValue(Popup.PlacementProperty, PlacementMode.BottomEdgeAlignedLeft, BindingPriority.Template);
				StyledProperty<IInputElement?> overlayInputPassThroughElementProperty = Popup.OverlayInputPassThroughElementProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Menu), 0).Build());
				context.ProvideTargetProperty = Popup.OverlayInputPassThroughElementProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				popup3.Bind(overlayInputPassThroughElementProperty, binding);
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				popup3.Child = border4;
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding2 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding2);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding3 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderBrushProperty, binding3);
				border6.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border6.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_191.DynamicSetter_2(scrollViewer3, BindingPriority.Template, obj);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				itemsPresenter.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.PaddingProperty;
			setter2.Value = new Thickness(6.0, 0.0, 6.0, 0.0);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.BorderThicknessProperty;
			setter3.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_190.Build, context);
			context.PopParent();
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("root");
			Setter setter7 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter8 = setter4;
			setter8.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			style3.Add(setter7);
			Setter setter9 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter10 = setter4;
			setter10.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style3.Add(setter9);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(Path))
				.Name("rightArrow");
			Setter setter11 = new Setter();
			setter11.Property = Visual.IsVisibleProperty;
			setter11.Value = false;
			style4.Add(setter11);
			controlTheme.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter12 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter13 = setter4;
			setter13.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			style6.Add(setter12);
			context.PopParent();
			controlTheme.Add(style5);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_193
	{
		private class XamlClosure_194
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Decorator.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				((Decorator)intermediateRoot).Child = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				itemsPresenter.SetValue(KeyboardNavigation.TabNavigationProperty, KeyboardNavigationMode.Continue, BindingPriority.Template);
				((ISupportInitialize)itemsPresenter).EndInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Menu);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = ItemsControl.ItemContainerThemeProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleTopLevelMenuItem");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.TemplateProperty;
			setter3.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_194.Build, context)
			};
			controlTheme.Add(setter3);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_195
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new PlatformKeyGestureConverter();
		}
	}

	private class XamlClosure_196
	{
		private class XamlClosure_197
		{
			private class DynamicSetters_198
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_2(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			private class XamlClosure_199
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new AccessText();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					AccessText accessText = (AccessText)intermediateRoot;
					context.PushParent(accessText);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					accessText.Bind(textProperty, binding);
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				Border border2 = border;
				border2.Name = "root";
				service = border2;
				context.AvaloniaNameScope.Register("root", service);
				border2.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border2.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border2.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border2.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border2.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(20.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(5.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				ColumnDefinitions columnDefinitions4 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "MenuItemIGT", BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition4);
				ColumnDefinitions columnDefinitions5 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition5 = new ColumnDefinition();
				columnDefinition5.SetValue(ColumnDefinition.WidthProperty, new GridLength(20.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinitions5.Add(columnDefinition5);
				Controls children = grid3.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children.Add(contentPresenter2);
				contentPresenter.Name = "icon";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("icon", service);
				contentPresenter.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.MarginProperty, new Thickness(3.0, 3.0, 3.0, 3.0), BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				contentPresenter.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				DynamicSetters_198.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(MenuItem.IconProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children2 = grid3.Children;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				children2.Add(path2);
				path.Name = "check";
				service = path;
				context.AvaloniaNameScope.Register("check", service);
				path.SetValue(Layoutable.MarginProperty, new Thickness(3.0, 3.0, 3.0, 3.0), BindingPriority.Template);
				path.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path.SetValue(Path.DataProperty, Geometry.Parse("F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"), BindingPriority.Template);
				path.Bind(Shape.FillProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				path.SetValue(Visual.IsVisibleProperty, value: false, BindingPriority.Template);
				((ISupportInitialize)path).EndInit();
				Controls children3 = grid3.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children3.Add(contentPresenter4);
				ContentPresenter contentPresenter5;
				ContentPresenter contentPresenter6 = (contentPresenter5 = contentPresenter3);
				context.PushParent(contentPresenter5);
				contentPresenter5.Name = "PART_HeaderPresenter";
				service = contentPresenter5;
				context.AvaloniaNameScope.Register("PART_HeaderPresenter", service);
				contentPresenter5.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				contentPresenter5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				DynamicSetters_198.DynamicSetter_1(contentPresenter5, BindingPriority.Template, new TemplateBinding(HeaderedSelectingItemsControl.HeaderProperty).ProvideValue());
				contentPresenter5.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(HeaderedSelectingItemsControl.HeaderTemplateProperty).ProvideValue());
				DataTemplates dataTemplates = contentPresenter5.DataTemplates;
				DataTemplate dataTemplate;
				DataTemplate item = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				dataTemplate.DataType = typeof(string);
				dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_199.Build, context);
				context.PopParent();
				dataTemplates.Add(item);
				context.PopParent();
				((ISupportInitialize)contentPresenter6).EndInit();
				Controls children4 = grid3.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children4.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				textBlock3.Name = "PART_InputGestureText";
				service = textBlock3;
				context.AvaloniaNameScope.Register("PART_InputGestureText", service);
				textBlock3.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				textBlock3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				StyledProperty<string?> textProperty = TextBlock.TextProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(MenuItem.InputGestureProperty));
				context.PushParent(templateBinding);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("KeyGestureConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding.Converter = (IValueConverter)obj;
				context.PopParent();
				textBlock3.Bind(textProperty, templateBinding2.ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children5 = grid3.Children;
				Path path3;
				Path path4 = (path3 = new Path());
				((ISupportInitialize)path4).BeginInit();
				children5.Add(path4);
				Path path5;
				Path path6 = (path5 = path3);
				context.PushParent(path5);
				path5.Name = "rightArrow";
				service = path5;
				context.AvaloniaNameScope.Register("rightArrow", service);
				path5.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				path5.SetValue(Layoutable.MarginProperty, new Thickness(10.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				path5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0,0L4,3.5 0,7z"), BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(fillProperty, binding);
				context.PopParent();
				((ISupportInitialize)path6).EndInit();
				Controls children6 = grid3.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children6.Add(popup2);
				Popup popup3;
				Popup popup4 = (popup3 = popup);
				context.PushParent(popup3);
				popup3.Name = "PART_Popup";
				service = popup3;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup3.SetValue(Popup.IsLightDismissEnabledProperty, value: false, BindingPriority.Template);
				popup3.Bind(Popup.IsOpenProperty, new TemplateBinding(MenuItem.IsSubMenuOpenProperty)
				{
					Mode = BindingMode.TwoWay
				}.ProvideValue());
				popup3.SetValue(Popup.PlacementProperty, PlacementMode.RightEdgeAlignedTop, BindingPriority.Template);
				Border border3;
				Border border4 = (border3 = new Border());
				((ISupportInitialize)border4).BeginInit();
				popup3.Child = border4;
				Border border5 = (border = border3);
				context.PushParent(border);
				Border border6 = border;
				StyledProperty<IBrush?> backgroundProperty = Border.BackgroundProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
				context.ProvideTargetProperty = Border.BackgroundProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(backgroundProperty, binding2);
				StyledProperty<IBrush?> borderBrushProperty = Border.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderMidBrush");
				context.ProvideTargetProperty = Border.BorderBrushProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border6.Bind(borderBrushProperty, binding3);
				border6.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				border6.Child = scrollViewer2;
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleMenuScrollViewer");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_198.DynamicSetter_2(scrollViewer3, BindingPriority.Template, obj2);
				ItemsPresenter itemsPresenter;
				ItemsPresenter itemsPresenter2 = (itemsPresenter = new ItemsPresenter());
				((ISupportInitialize)itemsPresenter2).BeginInit();
				scrollViewer3.Content = itemsPresenter2;
				itemsPresenter.Name = "PART_ItemsPresenter";
				service = itemsPresenter;
				context.AvaloniaNameScope.Register("PART_ItemsPresenter", service);
				itemsPresenter.SetValue(Layoutable.MarginProperty, new Thickness(2.0, 2.0, 2.0, 2.0), BindingPriority.Template);
				itemsPresenter.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				itemsPresenter.Bind(ItemsPresenter.ItemsPanelProperty, new TemplateBinding(ItemsControl.ItemsPanelProperty).ProvideValue());
				((ISupportInitialize)itemsPresenter).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				context.PopParent();
				((ISupportInitialize)border5).EndInit();
				context.PopParent();
				((ISupportInitialize)popup4).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_200
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Separator();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(MenuItem);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = TemplatedControl.BorderThicknessProperty;
			setter2.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = TemplatedControl.PaddingProperty;
			setter3.Value = new Thickness(6.0, 0.0, 6.0, 0.0);
			controlTheme.Add(setter3);
			Setter setter4;
			Setter setter5 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter6 = setter4;
			setter6.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_197.Build, context);
			context.PopParent();
			setter6.Value = value;
			context.PopParent();
			controlTheme.Add(setter5);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":separator");
			Setter setter7 = new Setter();
			setter7.Property = TemplatedControl.TemplateProperty;
			setter7.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_200.Build, context)
			};
			style.Add(setter7);
			controlTheme.Add(style);
			Style style2;
			Style style3 = (style2 = new Style());
			context.PushParent(style2);
			Style style4 = style2;
			style4.Selector = ((Selector?)null).Nesting().Class(":selected").Template()
				.OfType(typeof(Border))
				.Name("root");
			Setter setter8 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter9 = setter4;
			setter9.Property = Border.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush4");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			style4.Add(setter8);
			Setter setter10 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter11 = setter4;
			setter11.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeAccentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			style4.Add(setter10);
			context.PopParent();
			controlTheme.Add(style3);
			Style style5 = new Style();
			style5.Selector = ((Selector?)null).Nesting().Class(":empty").Template()
				.OfType(typeof(Path))
				.Name("rightArrow");
			Setter setter12 = new Setter();
			setter12.Property = Visual.IsVisibleProperty;
			setter12.Value = false;
			style5.Add(setter12);
			controlTheme.Add(style5);
			Style style6 = (style2 = new Style());
			context.PushParent(style2);
			Style style7 = style2;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled");
			Setter setter13 = (setter4 = new Setter());
			context.PushParent(setter4);
			Setter setter14 = setter4;
			setter14.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value4;
			context.PopParent();
			style7.Add(setter13);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_201
	{
		private class XamlClosure_202
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((AvaloniaObject)intermediateRoot).Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.BackgroundProperty;
			setter.Value = new ImmutableSolidColorBrush(16777215u);
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = InputElement.FocusableProperty;
			setter2.Value = false;
			controlTheme.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			setter3.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = TemplatedControl.TemplateProperty;
			setter5.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_202.Build, context)
			};
			controlTheme.Add(setter5);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_203
	{
		private class XamlClosure_204
		{
			private class DynamicSetters_205
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			private class XamlClosure_206
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Grid();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					Grid grid = (Grid)intermediateRoot;
					context.PushParent(grid);
					Controls children = grid.Children;
					Ellipse ellipse;
					Ellipse ellipse2 = (ellipse = new Ellipse());
					((ISupportInitialize)ellipse2).BeginInit();
					children.Add(ellipse2);
					Ellipse ellipse3;
					Ellipse ellipse4 = (ellipse3 = ellipse);
					context.PushParent(ellipse3);
					ellipse3.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
					StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
					DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush");
					context.ProvideTargetProperty = Shape.FillProperty;
					IBinding binding = dynamicResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					ellipse3.Bind(fillProperty, binding);
					context.PopParent();
					((ISupportInitialize)ellipse4).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "grid";
				service = grid;
				context.AvaloniaNameScope.Register("grid", service);
				RowDefinitions rowDefinitions = grid.RowDefinitions;
				RowDefinition rowDefinition = new RowDefinition();
				rowDefinition.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions.Add(rowDefinition);
				RowDefinitions rowDefinitions2 = grid.RowDefinitions;
				RowDefinition rowDefinition2 = new RowDefinition();
				rowDefinition2.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinition2.SetValue(RowDefinition.MinHeightProperty, 20.0, BindingPriority.Template);
				rowDefinitions2.Add(rowDefinition2);
				RowDefinitions rowDefinitions3 = grid.RowDefinitions;
				RowDefinition rowDefinition3 = new RowDefinition();
				rowDefinition3.SetValue(RowDefinition.HeightProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				rowDefinitions3.Add(rowDefinition3);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "TrackBackground";
				service = border;
				context.AvaloniaNameScope.Register("TrackBackground", service);
				border.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				border.SetValue(Layoutable.HeightProperty, 4.0, BindingPriority.Template);
				border.SetValue(Layoutable.MarginProperty, new Thickness(6.0, 0.0, 6.0, 0.0), BindingPriority.Template);
				border.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children2.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.Name = "PART_Track";
				service = track3;
				context.AvaloniaNameScope.Register("PART_Track", service);
				track3.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				track3.Bind(Track.IsDirectionReversedProperty, new TemplateBinding(Slider.IsDirectionReversedProperty).ProvideValue());
				track3.SetValue(Track.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton2, BindingPriority.Template);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_DecreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SliderRepeatTrackTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_205.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_IncreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SliderRepeatTrackTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_205.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				thumb3.Name = "thumb";
				service = thumb3;
				context.AvaloniaNameScope.Register("thumb", service);
				thumb3.SetValue(Layoutable.MinWidthProperty, 20.0, BindingPriority.Template);
				thumb3.SetValue(Layoutable.MinHeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IControlTemplate?> templateProperty = TemplatedControl.TemplateProperty;
				ControlTemplate controlTemplate;
				ControlTemplate value = (controlTemplate = new ControlTemplate());
				context.PushParent(controlTemplate);
				controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_206.Build, context);
				context.PopParent();
				thumb3.SetValue(templateProperty, value, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_207
		{
			private class DynamicSetters_208
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			private class XamlClosure_209
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Grid();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					Grid grid = (Grid)intermediateRoot;
					context.PushParent(grid);
					Controls children = grid.Children;
					Ellipse ellipse;
					Ellipse ellipse2 = (ellipse = new Ellipse());
					((ISupportInitialize)ellipse2).BeginInit();
					children.Add(ellipse2);
					Ellipse ellipse3;
					Ellipse ellipse4 = (ellipse3 = ellipse);
					context.PushParent(ellipse3);
					ellipse3.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
					ellipse3.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
					StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
					DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeAccentBrush");
					context.ProvideTargetProperty = Shape.FillProperty;
					IBinding binding = dynamicResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					ellipse3.Bind(fillProperty, binding);
					context.PopParent();
					((ISupportInitialize)ellipse4).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinition2.SetValue(ColumnDefinition.MinWidthProperty, 26.0, BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Controls children = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children.Add(border2);
				border.Name = "TrackBackground";
				service = border;
				context.AvaloniaNameScope.Register("TrackBackground", service);
				border.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				border.SetValue(Layoutable.WidthProperty, 4.0, BindingPriority.Template);
				border.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 6.0, 0.0, 6.0), BindingPriority.Template);
				border.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				((ISupportInitialize)border).EndInit();
				Controls children2 = grid.Children;
				Track track;
				Track track2 = (track = new Track());
				((ISupportInitialize)track2).BeginInit();
				children2.Add(track2);
				Track track3;
				Track track4 = (track3 = track);
				context.PushParent(track3);
				track3.Name = "PART_Track";
				service = track3;
				context.AvaloniaNameScope.Register("PART_Track", service);
				track3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				track3.Bind(Track.IsDirectionReversedProperty, new TemplateBinding(Slider.IsDirectionReversedProperty).ProvideValue());
				track3.SetValue(Track.OrientationProperty, Orientation.Vertical, BindingPriority.Template);
				StyledProperty<Button?> decreaseButtonProperty = Track.DecreaseButtonProperty;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				track3.SetValue(decreaseButtonProperty, repeatButton2, BindingPriority.Template);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_DecreaseButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_DecreaseButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SliderRepeatTrackTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_208.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				StyledProperty<Button?> increaseButtonProperty = Track.IncreaseButtonProperty;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				track3.SetValue(increaseButtonProperty, repeatButton7, BindingPriority.Template);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_IncreaseButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_IncreaseButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SliderRepeatTrackTheme");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_208.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				Thumb thumb;
				Thumb thumb2 = (thumb = new Thumb());
				((ISupportInitialize)thumb2).BeginInit();
				track3.Thumb = thumb2;
				Thumb thumb3;
				Thumb thumb4 = (thumb3 = thumb);
				context.PushParent(thumb3);
				thumb3.Name = "thumb";
				service = thumb3;
				context.AvaloniaNameScope.Register("thumb", service);
				thumb3.SetValue(Layoutable.MinWidthProperty, 20.0, BindingPriority.Template);
				thumb3.SetValue(Layoutable.MinHeightProperty, 20.0, BindingPriority.Template);
				StyledProperty<IControlTemplate?> templateProperty = TemplatedControl.TemplateProperty;
				ControlTemplate controlTemplate;
				ControlTemplate value = (controlTemplate = new ControlTemplate());
				context.PushParent(controlTemplate);
				controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_209.Build, context);
				context.PopParent();
				thumb3.SetValue(templateProperty, value, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)thumb4).EndInit();
				context.PopParent();
				((ISupportInitialize)track4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Slider);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":horizontal");
			Setter setter = new Setter();
			setter.Property = Layoutable.MinWidthProperty;
			setter.Value = 40.0;
			style3.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinHeightProperty;
			setter2.Value = 20.0;
			style3.Add(setter2);
			Setter setter3;
			Setter setter4 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter5 = setter3;
			setter5.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_204.Build, context);
			context.PopParent();
			setter5.Value = value;
			context.PopParent();
			style3.Add(setter4);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":vertical");
			Setter setter6 = new Setter();
			setter6.Property = Layoutable.MinWidthProperty;
			setter6.Value = 20.0;
			style5.Add(setter6);
			Setter setter7 = new Setter();
			setter7.Property = Layoutable.MinHeightProperty;
			setter7.Value = 40.0;
			style5.Add(setter7);
			Setter setter8 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter9 = setter3;
			setter9.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_207.Build, context);
			context.PopParent();
			setter9.Value = value2;
			context.PopParent();
			style5.Add(setter8);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Track))
				.Name("PART_Track");
			Setter setter10 = new Setter();
			setter10.Property = Track.MinimumProperty;
			setter10.Value = new TemplateBinding(Track.MinimumProperty).ProvideValue();
			style6.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Track.MaximumProperty;
			setter11.Value = new TemplateBinding(Track.MaximumProperty).ProvideValue();
			style6.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Track.ValueProperty;
			setter12.Value = new TemplateBinding(Track.ValueProperty)
			{
				Mode = BindingMode.TwoWay
			}.ProvideValue();
			style6.Add(setter12);
			controlTheme.Add(style6);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Border))
				.Name("TrackBackground");
			Setter setter13 = new Setter();
			setter13.Property = Border.BorderThicknessProperty;
			setter13.Value = new Thickness(2.0, 2.0, 2.0, 2.0);
			style8.Add(setter13);
			Setter setter14 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter15 = setter3;
			setter15.Property = Border.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBorderLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter15.Value = value3;
			context.PopParent();
			style8.Add(setter14);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = new Style();
			style9.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(TickBar));
			Setter setter16 = new Setter();
			setter16.Property = TickBar.TicksProperty;
			setter16.Value = new TemplateBinding(TickBar.TicksProperty).ProvideValue();
			style9.Add(setter16);
			controlTheme.Add(style9);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Grid))
				.Name("grid");
			Setter setter17 = (setter3 = new Setter());
			context.PushParent(setter3);
			Setter setter18 = setter3;
			setter18.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value4;
			context.PopParent();
			style11.Add(setter17);
			context.PopParent();
			controlTheme.Add(style10);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_210
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new IBitmapToImageConverter();
		}
	}

	private class XamlClosure_211
	{
		private class XamlClosure_212
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Menu();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Menu menu = (Menu)intermediateRoot;
				context.PushParent(menu);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Ancestor(typeof(TopLevel), 0).Property(NativeMenu.IsNativeMenuExportedProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				menu.Bind(isVisibleProperty, binding);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(TopLevel), 0).Property(NativeMenu.MenuProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENativeMenu_002CAvalonia_002EControls_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
					.Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				menu.Bind(itemsSourceProperty, binding2);
				Styles styles = menu.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(MenuItem));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter3 = setter;
				setter3.Property = HeaderedSelectingItemsControl.HeaderProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.HeaderProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter3.Value = value;
				context.PopParent();
				style.Add(setter2);
				Setter setter4 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter5 = setter;
				setter5.Property = InputElement.IsEnabledProperty;
				CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.IsEnabledProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value2 = compiledBindingExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter5.Value = value2;
				context.PopParent();
				style.Add(setter4);
				Setter setter6 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter7 = setter;
				setter7.Property = MenuItem.InputGestureProperty;
				CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.GestureProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value3 = compiledBindingExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter7.Value = value3;
				context.PopParent();
				style.Add(setter6);
				Setter setter8 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter9 = setter;
				setter9.Property = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.MenuProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EControls_002ENativeMenu_002CAvalonia_002EControls_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value4 = compiledBindingExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter9.Value = value4;
				context.PopParent();
				style.Add(setter8);
				Setter setter10 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter11 = setter;
				setter11.Property = MenuItem.CommandProperty;
				CompiledBindingExtension compiledBindingExtension7 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.CommandProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value5 = compiledBindingExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter11.Value = value5;
				context.PopParent();
				style.Add(setter10);
				Setter setter12 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter13 = setter;
				setter13.Property = MenuItem.CommandParameterProperty;
				CompiledBindingExtension compiledBindingExtension8 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.CommandParameterProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value6 = compiledBindingExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter13.Value = value6;
				context.PopParent();
				style.Add(setter12);
				Setter setter14 = new Setter();
				setter14.Property = NativeMenuBar.EnableMenuItemClickForwardingProperty;
				setter14.Value = true;
				style.Add(setter14);
				Setter setter15 = (setter = new Setter());
				context.PushParent(setter);
				Setter setter16 = setter;
				setter16.Property = MenuItem.IconProperty;
				CompiledBindingExtension compiledBindingExtension9;
				CompiledBindingExtension compiledBindingExtension10 = (compiledBindingExtension9 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(NativeMenuItem.IconProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build()));
				context.PushParent(compiledBindingExtension9);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("AvaloniaThemesSimpleNativeMenuBarIBitmapToImageConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				compiledBindingExtension9.Converter = (IValueConverter)obj;
				context.PopParent();
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				CompiledBindingExtension value7 = compiledBindingExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter16.Value = value7;
				context.PopParent();
				style.Add(setter15);
				context.PopParent();
				styles.Add(item);
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(NativeMenuBar);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_212.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_213
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension(typeof(ListBoxItem));
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(ListBoxItem);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DatePickerFlyoutPresenterItemPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = ContentControl.VerticalContentAlignmentProperty;
			setter4.Value = VerticalAlignment.Center;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter5.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter5);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":selected");
			Setter setter6 = new Setter();
			setter6.Property = InputElement.IsHitTestVisibleProperty;
			setter6.Value = false;
			style3.Add(setter6);
			Style style4 = new Style();
			style4.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("PressedBackground");
			Setter setter7 = new Setter();
			setter7.Property = Shape.FillProperty;
			setter7.Value = new ImmutableSolidColorBrush(16777215u);
			style4.Add(setter7);
			style3.Add(style4);
			Style style5 = (style = new Style());
			context.PushParent(style);
			Style style6 = style;
			style6.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter8 = new Setter();
			setter8.Property = ContentPresenter.BackgroundProperty;
			setter8.Value = new ImmutableSolidColorBrush(16777215u);
			style6.Add(setter8);
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value2;
			context.PopParent();
			style6.Add(setter9);
			context.PopParent();
			style3.Add(style5);
			context.PopParent();
			controlTheme.Add(style2);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class("MonthItem");
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TemplatedControl.PaddingProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerFlyoutPresenterMonthPadding");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value3;
			context.PopParent();
			style8.Add(setter11);
			Setter setter13 = new Setter();
			setter13.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter13.Value = HorizontalAlignment.Left;
			style8.Add(setter13);
			context.PopParent();
			controlTheme.Add(style7);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_214
	{
		private class XamlClosure_215
		{
			private class DynamicSetters_216
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				border.Child = contentPresenter2;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = contentPresenter);
				context.PushParent(contentPresenter3);
				contentPresenter3.Name = "ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("ContentPresenter", service);
				contentPresenter3.Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<IBrush?> borderBrushProperty = ContentPresenter.BorderBrushProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlTransparentBrush");
				context.ProvideTargetProperty = ContentPresenter.BorderBrushProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(borderBrushProperty, binding);
				StyledProperty<Thickness> borderThicknessProperty = ContentPresenter.BorderThicknessProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DateTimeFlyoutButtonBorderThickness");
				context.ProvideTargetProperty = ContentPresenter.BorderThicknessProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(borderThicknessProperty, binding2);
				DynamicSetters_216.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				StyledProperty<IBrush?> foregroundProperty = ContentPresenter.ForegroundProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeForegroundBrush");
				context.ProvideTargetProperty = ContentPresenter.ForegroundProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				contentPresenter3.Bind(foregroundProperty, binding3);
				context.PopParent();
				((ISupportInitialize)contentPresenter4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlTransparentBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = Layoutable.HeightProperty;
			setter4.Value = 22.0;
			controlTheme.Add(setter4);
			Setter setter5 = new Setter();
			setter5.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter5.Value = HorizontalAlignment.Center;
			controlTheme.Add(setter5);
			Setter setter6 = new Setter();
			setter6.Property = ContentControl.VerticalContentAlignmentProperty;
			setter6.Value = VerticalAlignment.Center;
			controlTheme.Add(setter6);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value2 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_215.Build, context);
			context.PopParent();
			setter8.Value = value2;
			context.PopParent();
			controlTheme.Add(setter7);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style3.Add(setter9);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value4;
			context.PopParent();
			style3.Add(setter11);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = ContentPresenter.BackgroundProperty;
			SolidColorBrush solidColorBrush;
			SolidColorBrush value5 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlMidHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			setter14.Value = value5;
			context.PopParent();
			style5.Add(setter13);
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeControlLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style5.Add(setter15);
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			style5.Add(setter17);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_217
	{
		private class XamlClosure_218
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Viewbox();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Viewbox viewbox = (Viewbox)intermediateRoot;
				context.PushParent(viewbox);
				viewbox.Width = 10.0;
				viewbox.Height = 10.0;
				viewbox.HorizontalAlignment = HorizontalAlignment.Center;
				viewbox.VerticalAlignment = VerticalAlignment.Center;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Data = Geometry.Parse("M 0,9 L 9,0 L 18,9");
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(RepeatButton), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding);
				path3.StrokeThickness = 1.0;
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleDateTimePickerButton");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = Layoutable.VerticalAlignmentProperty;
			setter.Value = VerticalAlignment.Top;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.HeightProperty;
			setter2.Value = 22.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.FocusableProperty;
			setter4.Value = false;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighlightLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			controlTheme.Add(setter8);
			Setter setter9 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter10 = setter5;
			setter10.Property = ContentControl.ContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_218.Build, context);
			context.PopParent();
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_219
	{
		private class XamlClosure_220
		{
			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				if (P_0 != null)
				{
					object service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Viewbox();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Viewbox viewbox = (Viewbox)intermediateRoot;
				context.PushParent(viewbox);
				viewbox.Width = 10.0;
				viewbox.Height = 10.0;
				viewbox.HorizontalAlignment = HorizontalAlignment.Center;
				viewbox.VerticalAlignment = VerticalAlignment.Center;
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				viewbox.Child = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				path3.Data = Geometry.Parse("M 0,0 L 9,9 L 18,0");
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(RepeatButton), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path3.Bind(strokeProperty, binding);
				path3.StrokeThickness = 1.0;
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleDateTimePickerButton");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002EControlTheme_002CAvalonia_002EBase_002EBasedOn_0021Property();
			object? obj = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			controlTheme.BasedOn = (ControlTheme)obj;
			controlTheme.TargetType = typeof(RepeatButton);
			Setter setter = new Setter();
			setter.Property = Layoutable.VerticalAlignmentProperty;
			setter.Value = VerticalAlignment.Bottom;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.HeightProperty;
			setter2.Value = 22.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.HorizontalAlignmentProperty;
			setter3.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.FocusableProperty;
			setter4.Value = false;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighlightLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = new Setter();
			setter8.Property = Visual.IsVisibleProperty;
			setter8.Value = false;
			controlTheme.Add(setter8);
			Setter setter9 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter10 = setter5;
			setter10.Property = ContentControl.ContentProperty;
			Template template;
			Template value2 = (template = new Template());
			context.PushParent(template);
			template.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_220.Build, context);
			context.PopParent();
			setter10.Value = value2;
			context.PopParent();
			controlTheme.Add(setter9);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_221
	{
		private class XamlClosure_222
		{
			private class DynamicSetters_223
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_223.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = Visual.RenderTransformProperty;
			setter3.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.TemplateProperty;
			setter4.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_222.Build, context)
			};
			controlTheme.Add(setter4);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			style3.Add(setter5);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeControlLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value3;
			context.PopParent();
			style5.Add(setter9);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ContentPresenter.BackgroundProperty;
			SolidColorBrush solidColorBrush;
			SolidColorBrush value4 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlMidHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			setter12.Value = value4;
			context.PopParent();
			style5.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value5;
			context.PopParent();
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_224
	{
		private class XamlClosure_225
		{
			private class DynamicSetters_226
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "LayoutRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Controls children = grid5.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				button3.Name = "PART_FlyoutButton";
				service = button3;
				context.AvaloniaNameScope.Register("PART_FlyoutButton", service);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DatePickerThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(minWidthProperty, binding);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(maxWidthProperty, binding2);
				button3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button3.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				button3.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				button3.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button3.Bind(InputElement.IsEnabledProperty, new TemplateBinding(InputElement.IsEnabledProperty).ProvideValue());
				button3.SetValue(TemplatedControl.IsTemplateFocusTargetProperty, value: true, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleDatePickerFlyoutButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_226.DynamicSetter_1(button3, BindingPriority.Template, obj);
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				button3.Content = grid7;
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_ButtonContentGrid";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_ButtonContentGrid", service);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 5;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(78.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(132.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(0.0, GridUnitType.Auto)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(78.0, GridUnitType.Star)));
				grid9.ColumnDefinitions = columnDefinitions;
				Controls children2 = grid9.Children;
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				children2.Add(textBlock2);
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				TextBlock textBlock5 = textBlock3;
				textBlock5.Name = "PART_DayTextBlock";
				service = textBlock5;
				context.AvaloniaNameScope.Register("PART_DayTextBlock", service);
				StyledProperty<Thickness> paddingProperty = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock5.Bind(paddingProperty, binding3);
				textBlock5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock5.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock5.SetValue(TextBlock.TextProperty, "day", BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				Controls children3 = grid9.Children;
				TextBlock textBlock6;
				TextBlock textBlock7 = (textBlock6 = new TextBlock());
				((ISupportInitialize)textBlock7).BeginInit();
				children3.Add(textBlock7);
				TextBlock textBlock8 = (textBlock3 = textBlock6);
				context.PushParent(textBlock3);
				TextBlock textBlock9 = textBlock3;
				textBlock9.Name = "PART_MonthTextBlock";
				service = textBlock9;
				context.AvaloniaNameScope.Register("PART_MonthTextBlock", service);
				StyledProperty<Thickness> paddingProperty2 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerHostMonthPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock9.Bind(paddingProperty2, binding4);
				textBlock9.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock9.SetValue(TextBlock.TextProperty, "month", BindingPriority.Template);
				textBlock9.SetValue(TextBlock.TextAlignmentProperty, TextAlignment.Left, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)textBlock8).EndInit();
				Controls children4 = grid9.Children;
				TextBlock textBlock10;
				TextBlock textBlock11 = (textBlock10 = new TextBlock());
				((ISupportInitialize)textBlock11).BeginInit();
				children4.Add(textBlock11);
				TextBlock textBlock12 = (textBlock3 = textBlock10);
				context.PushParent(textBlock3);
				TextBlock textBlock13 = textBlock3;
				textBlock13.Name = "PART_YearTextBlock";
				service = textBlock13;
				context.AvaloniaNameScope.Register("PART_YearTextBlock", service);
				StyledProperty<Thickness> paddingProperty3 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DatePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock13.Bind(paddingProperty3, binding5);
				textBlock13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock13.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				textBlock13.SetValue(TextBlock.TextProperty, "year", BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)textBlock12).EndInit();
				Controls children5 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children5.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "PART_FirstSpacer";
				service = rectangle5;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				rectangle5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("DatePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding6);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children6 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children6.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_SecondSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				rectangle9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("DatePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding7);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children7 = grid5.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children7.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup.SetValue(Popup.PlacementProperty, PlacementMode.Bottom, BindingPriority.Template);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				DatePickerPresenter datePickerPresenter;
				DatePickerPresenter datePickerPresenter2 = (datePickerPresenter = new DatePickerPresenter());
				((ISupportInitialize)datePickerPresenter2).BeginInit();
				popup.Child = datePickerPresenter2;
				datePickerPresenter.Name = "PART_PickerPresenter";
				service = datePickerPresenter;
				context.AvaloniaNameScope.Register("PART_PickerPresenter", service);
				((ISupportInitialize)datePickerPresenter).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DatePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = new Setter();
			setter10.Property = TemplatedControl.BorderThicknessProperty;
			setter10.Value = new Thickness(1.0, 1.0, 1.0, 1.0);
			controlTheme.Add(setter10);
			Setter setter11 = new Setter();
			setter11.Property = Layoutable.HorizontalAlignmentProperty;
			setter11.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter11);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.VerticalAlignmentProperty;
			setter12.Value = VerticalAlignment.Center;
			controlTheme.Add(setter12);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_225.Build, context);
			context.PopParent();
			setter14.Value = value5;
			context.PopParent();
			controlTheme.Add(setter13);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Rectangle));
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style3.Add(setter15);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":hasnodate").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton")
				.Descendant()
				.OfType(typeof(TextBlock));
			Setter setter17 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter18 = setter;
			setter18.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value7;
			context.PopParent();
			style5.Add(setter17);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_227
	{
		private class XamlClosure_228
		{
			private class DynamicSetters_229
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.SetValue(Layoutable.MaxHeightProperty, 398.0, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimeFlyoutBorderPadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "ContentRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid5.RowDefinitions = rowDefinitions;
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_PickerContainer";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_PickerContainer", service);
				Styles styles = grid9.Styles;
				Style style;
				Style item = (style = new Style());
				context.PushParent(style);
				style.Selector = ((Selector?)null).OfType(typeof(DateTimePickerPanel)).Child().OfType(typeof(ListBoxItem));
				Setter setter;
				Setter setter2 = (setter = new Setter());
				context.PushParent(setter);
				setter.Property = StyledElement.ThemeProperty;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleDateTimePickerItem");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
				object? value = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				setter.Value = value;
				context.PopParent();
				style.Add(setter2);
				context.PopParent();
				styles.Add(item);
				Controls children2 = grid9.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children2.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Panel panel5 = panel3;
				panel5.Name = "PART_MonthHost";
				service = panel5;
				context.AvaloniaNameScope.Register("PART_MonthHost", service);
				Controls children3 = panel5.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children3.Add(scrollViewer2);
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer5 = scrollViewer3;
				scrollViewer5.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer5.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel;
				DateTimePickerPanel dateTimePickerPanel2 = (dateTimePickerPanel = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel2).BeginInit();
				scrollViewer5.Content = dateTimePickerPanel2;
				DateTimePickerPanel dateTimePickerPanel3;
				DateTimePickerPanel dateTimePickerPanel4 = (dateTimePickerPanel3 = dateTimePickerPanel);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel5 = dateTimePickerPanel3;
				dateTimePickerPanel5.Name = "PART_MonthSelector";
				service = dateTimePickerPanel5;
				context.AvaloniaNameScope.Register("PART_MonthSelector", service);
				StyledProperty<double> itemHeightProperty = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel5.Bind(itemHeightProperty, binding2);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Month, BindingPriority.Template);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				Controls children4 = panel5.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children4.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_MonthUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_MonthUpButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children5 = panel5.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children5.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_MonthDownButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_MonthDownButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children6 = grid9.Children;
				Panel panel6;
				Panel panel7 = (panel6 = new Panel());
				((ISupportInitialize)panel7).BeginInit();
				children6.Add(panel7);
				Panel panel8 = (panel3 = panel6);
				context.PushParent(panel3);
				Panel panel9 = panel3;
				panel9.Name = "PART_DayHost";
				service = panel9;
				context.AvaloniaNameScope.Register("PART_DayHost", service);
				Controls children7 = panel9.Children;
				ScrollViewer scrollViewer6;
				ScrollViewer scrollViewer7 = (scrollViewer6 = new ScrollViewer());
				((ISupportInitialize)scrollViewer7).BeginInit();
				children7.Add(scrollViewer7);
				ScrollViewer scrollViewer8 = (scrollViewer3 = scrollViewer6);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer9 = scrollViewer3;
				scrollViewer9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer9.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel6;
				DateTimePickerPanel dateTimePickerPanel7 = (dateTimePickerPanel6 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel7).BeginInit();
				scrollViewer9.Content = dateTimePickerPanel7;
				DateTimePickerPanel dateTimePickerPanel8 = (dateTimePickerPanel3 = dateTimePickerPanel6);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel9 = dateTimePickerPanel3;
				dateTimePickerPanel9.Name = "PART_DaySelector";
				service = dateTimePickerPanel9;
				context.AvaloniaNameScope.Register("PART_DaySelector", service);
				StyledProperty<double> itemHeightProperty2 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel9.Bind(itemHeightProperty2, binding3);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Day, BindingPriority.Template);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel8).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer8).EndInit();
				Controls children8 = panel9.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children8.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_DayUpButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_DayUpButton", service);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Controls children9 = panel9.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children9.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_DayDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_DayDownButton", service);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj4);
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)panel8).EndInit();
				Controls children10 = grid9.Children;
				Panel panel10;
				Panel panel11 = (panel10 = new Panel());
				((ISupportInitialize)panel11).BeginInit();
				children10.Add(panel11);
				Panel panel12 = (panel3 = panel10);
				context.PushParent(panel3);
				Panel panel13 = panel3;
				panel13.Name = "PART_YearHost";
				service = panel13;
				context.AvaloniaNameScope.Register("PART_YearHost", service);
				Controls children11 = panel13.Children;
				ScrollViewer scrollViewer10;
				ScrollViewer scrollViewer11 = (scrollViewer10 = new ScrollViewer());
				((ISupportInitialize)scrollViewer11).BeginInit();
				children11.Add(scrollViewer11);
				ScrollViewer scrollViewer12 = (scrollViewer3 = scrollViewer10);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer13 = scrollViewer3;
				scrollViewer13.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer13.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel10;
				DateTimePickerPanel dateTimePickerPanel11 = (dateTimePickerPanel10 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel11).BeginInit();
				scrollViewer13.Content = dateTimePickerPanel11;
				DateTimePickerPanel dateTimePickerPanel12 = (dateTimePickerPanel3 = dateTimePickerPanel10);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel13 = dateTimePickerPanel3;
				dateTimePickerPanel13.Name = "PART_YearSelector";
				service = dateTimePickerPanel13;
				context.AvaloniaNameScope.Register("PART_YearSelector", service);
				StyledProperty<double> itemHeightProperty3 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DatePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel13.Bind(itemHeightProperty3, binding4);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Year, BindingPriority.Template);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel12).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer12).EndInit();
				Controls children12 = panel13.Children;
				RepeatButton repeatButton18;
				RepeatButton repeatButton19 = (repeatButton18 = new RepeatButton());
				((ISupportInitialize)repeatButton19).BeginInit();
				children12.Add(repeatButton19);
				RepeatButton repeatButton20 = (repeatButton3 = repeatButton18);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton21 = repeatButton3;
				repeatButton21.Name = "PART_YearUpButton";
				service = repeatButton21;
				context.AvaloniaNameScope.Register("PART_YearUpButton", service);
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton21, BindingPriority.Template, obj5);
				context.PopParent();
				((ISupportInitialize)repeatButton20).EndInit();
				Controls children13 = panel13.Children;
				RepeatButton repeatButton22;
				RepeatButton repeatButton23 = (repeatButton22 = new RepeatButton());
				((ISupportInitialize)repeatButton23).BeginInit();
				children13.Add(repeatButton23);
				RepeatButton repeatButton24 = (repeatButton3 = repeatButton22);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton25 = repeatButton3;
				repeatButton25.Name = "PART_YearDownButton";
				service = repeatButton25;
				context.AvaloniaNameScope.Register("PART_YearDownButton", service);
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj6 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(repeatButton25, BindingPriority.Template, obj6);
				context.PopParent();
				((ISupportInitialize)repeatButton24).EndInit();
				context.PopParent();
				((ISupportInitialize)panel12).EndInit();
				Controls children14 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children14.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "HighlightRect";
				service = rectangle5;
				context.AvaloniaNameScope.Register("HighlightRect", service);
				rectangle5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnSpanProperty, 5, BindingPriority.Template);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("DatePickerFlyoutPresenterHighlightHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(heightProperty, binding5);
				rectangle5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				rectangle5.SetValue(InputElement.IsHitTestVisibleProperty, value: false, BindingPriority.Template);
				rectangle5.SetValue(Visual.ZIndexProperty, -1, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				SolidColorBrush solidColorBrush;
				SolidColorBrush value2 = (solidColorBrush = new SolidColorBrush());
				context.PushParent(solidColorBrush);
				solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
				StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeAccentColor");
				context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				solidColorBrush.Bind(colorProperty, binding6);
				context.PopParent();
				rectangle5.SetValue(fillProperty, value2, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children15 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children15.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_FirstSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				rectangle9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children16 = grid9.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children16.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.Name = "PART_SecondSpacer";
				service = rectangle13;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				rectangle13.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(widthProperty2, binding9);
				rectangle13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(fillProperty3, binding10);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children17 = grid5.Children;
				Grid grid10;
				Grid grid11 = (grid10 = new Grid());
				((ISupportInitialize)grid11).BeginInit();
				children17.Add(grid11);
				Grid grid12 = (grid3 = grid10);
				context.PushParent(grid3);
				Grid grid13 = grid3;
				grid13.Name = "AcceptDismissGrid";
				service = grid13;
				context.AvaloniaNameScope.Register("AcceptDismissGrid", service);
				grid13.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid13.ColumnDefinitions = columnDefinitions;
				Controls children18 = grid13.Children;
				Rectangle rectangle14;
				Rectangle rectangle15 = (rectangle14 = new Rectangle());
				((ISupportInitialize)rectangle15).BeginInit();
				children18.Add(rectangle15);
				Rectangle rectangle16 = (rectangle3 = rectangle14);
				context.PushParent(rectangle3);
				Rectangle rectangle17 = rectangle3;
				rectangle17.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("DatePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(heightProperty2, binding11);
				rectangle17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty4 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(fillProperty4, binding12);
				context.PopParent();
				((ISupportInitialize)rectangle16).EndInit();
				Controls children19 = grid13.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children19.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_AcceptButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_AcceptButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("DatePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(heightProperty3, binding13);
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("SimpleDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj7 = staticResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(button5, BindingPriority.Template, obj7);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0.5,8.5 5,13.5 15.5,3"), BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding14);
				path5.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path5.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children20 = grid13.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children20.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_DismissButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_DismissButton", service);
				button9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("DatePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding15 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(heightProperty4, binding15);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension9 = new StaticResourceExtension("SimpleDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj8 = staticResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_229.DynamicSetter_1(button9, BindingPriority.Template, obj8);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.SetValue(Path.DataProperty, Geometry.Parse("M2,2 14,14 M2,14 14 2"), BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding16 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(strokeProperty2, binding16);
				path9.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path9.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(DatePickerPresenter);
			Setter setter = new Setter();
			setter.Property = Layoutable.WidthProperty;
			setter.Value = 296.0;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 296.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MaxHeightProperty;
			setter3.Value = 398.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.FontWeightProperty;
			setter4.Value = FontWeight.Normal;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter9 = setter5;
			setter9.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter11 = setter5;
			setter11.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter13 = setter5;
			setter13.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("DateTimeFlyoutBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter13.Value = value4;
			context.PopParent();
			controlTheme.Add(setter12);
			Setter setter14 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter15 = setter5;
			setter15.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value5 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_228.Build, context);
			context.PopParent();
			setter15.Value = value5;
			context.PopParent();
			controlTheme.Add(setter14);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel));
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pointerover").Descendant()
				.OfType(typeof(RepeatButton));
			Setter setter16 = new Setter();
			setter16.Property = Visual.IsVisibleProperty;
			setter16.Value = true;
			style2.Add(setter16);
			style.Add(style2);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_230
	{
		private class XamlClosure_231
		{
			private class DynamicSetters_232
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.HorizontalContentAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.VerticalContentAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_232.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = Visual.RenderTransformProperty;
			setter3.Value = (ITransform)new TransformConverter().ConvertFrom(context, CultureInfo.InvariantCulture, "none");
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.TemplateProperty;
			setter4.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_231.Build, context)
			};
			controlTheme.Add(setter4);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlHighBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value;
			context.PopParent();
			style3.Add(setter5);
			Setter setter7 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter8 = setter;
			setter8.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value2;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter9 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter10 = setter;
			setter10.Property = ContentPresenter.BackgroundProperty;
			SolidColorBrush solidColorBrush;
			SolidColorBrush value3 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeControlMidHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			context.PopParent();
			setter10.Value = value3;
			context.PopParent();
			style5.Add(setter9);
			Setter setter11 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter12 = setter;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value4;
			context.PopParent();
			style5.Add(setter11);
			Setter setter13 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter14 = setter;
			setter14.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value5;
			context.PopParent();
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter))
				.Name("PART_ContentPresenter");
			Setter setter15 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter16 = setter;
			setter16.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter16.Value = value6;
			context.PopParent();
			style7.Add(setter15);
			context.PopParent();
			controlTheme.Add(style6);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_233
	{
		private class XamlClosure_234
		{
			private class DynamicSetters_235
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DataValidationErrors();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DataValidationErrors dataValidationErrors = (DataValidationErrors)intermediateRoot;
				context.PushParent(dataValidationErrors);
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				dataValidationErrors.Content = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "LayoutRoot";
				service = grid5;
				context.AvaloniaNameScope.Register("LayoutRoot", service);
				grid5.Bind(Layoutable.MarginProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				Controls children = grid5.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				button3.Name = "PART_FlyoutButton";
				service = button3;
				context.AvaloniaNameScope.Register("PART_FlyoutButton", service);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("TimePickerThemeMinWidth");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(minWidthProperty, binding);
				StyledProperty<double> maxWidthProperty = Layoutable.MaxWidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerThemeMaxWidth");
				context.ProvideTargetProperty = Layoutable.MaxWidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button3.Bind(maxWidthProperty, binding2);
				button3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button3.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				button3.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button3.Bind(TemplatedControl.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				button3.Bind(TemplatedControl.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				button3.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button3.Bind(InputElement.IsEnabledProperty, new TemplateBinding(InputElement.IsEnabledProperty).ProvideValue());
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleTimePickerFlyoutButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_235.DynamicSetter_1(button3, BindingPriority.Template, obj);
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				button3.Content = grid7;
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_FlyoutButtonContentGrid";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_FlyoutButtonContentGrid", service);
				Controls children2 = grid9.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children2.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				Border border5 = border3;
				border5.Name = "PART_FirstPickerHost";
				service = border5;
				context.AvaloniaNameScope.Register("PART_FirstPickerHost", service);
				border5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				border5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				border5.Child = textBlock2;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = textBlock);
				context.PushParent(textBlock3);
				TextBlock textBlock5 = textBlock3;
				textBlock5.Name = "PART_HourTextBlock";
				service = textBlock5;
				context.AvaloniaNameScope.Register("PART_HourTextBlock", service);
				StyledProperty<Thickness> paddingProperty = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock5.Bind(paddingProperty, binding3);
				textBlock5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock5.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock5.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock4).EndInit();
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children3 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "PART_FirstColumnDivider";
				service = rectangle5;
				context.AvaloniaNameScope.Register("PART_FirstColumnDivider", service);
				rectangle5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(widthProperty, binding4);
				rectangle5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding5);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children4 = grid9.Children;
				Border border6;
				Border border7 = (border6 = new Border());
				((ISupportInitialize)border7).BeginInit();
				children4.Add(border7);
				Border border8 = (border3 = border6);
				context.PushParent(border3);
				Border border9 = border3;
				border9.Name = "PART_SecondPickerHost";
				service = border9;
				context.AvaloniaNameScope.Register("PART_SecondPickerHost", service);
				border9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				border9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock6;
				TextBlock textBlock7 = (textBlock6 = new TextBlock());
				((ISupportInitialize)textBlock7).BeginInit();
				border9.Child = textBlock7;
				TextBlock textBlock8 = (textBlock3 = textBlock6);
				context.PushParent(textBlock3);
				TextBlock textBlock9 = textBlock3;
				textBlock9.Name = "PART_MinuteTextBlock";
				service = textBlock9;
				context.AvaloniaNameScope.Register("PART_MinuteTextBlock", service);
				StyledProperty<Thickness> paddingProperty2 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock9.Bind(paddingProperty2, binding6);
				textBlock9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock9.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock9.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock8).EndInit();
				context.PopParent();
				((ISupportInitialize)border8).EndInit();
				Controls children5 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children5.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_SecondColumnDivider";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_SecondColumnDivider", service);
				rectangle9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty2, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("TimePickerSpacerFill");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children6 = grid9.Children;
				Border border10;
				Border border11 = (border10 = new Border());
				((ISupportInitialize)border11).BeginInit();
				children6.Add(border11);
				Border border12 = (border3 = border10);
				context.PushParent(border3);
				Border border13 = border3;
				border13.Name = "PART_ThirdPickerHost";
				service = border13;
				context.AvaloniaNameScope.Register("PART_ThirdPickerHost", service);
				border13.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				border13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				border13.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				TextBlock textBlock10;
				TextBlock textBlock11 = (textBlock10 = new TextBlock());
				((ISupportInitialize)textBlock11).BeginInit();
				border13.Child = textBlock11;
				TextBlock textBlock12 = (textBlock3 = textBlock10);
				context.PushParent(textBlock3);
				TextBlock textBlock13 = textBlock3;
				textBlock13.Name = "PART_PeriodTextBlock";
				service = textBlock13;
				context.AvaloniaNameScope.Register("PART_PeriodTextBlock", service);
				StyledProperty<Thickness> paddingProperty3 = TextBlock.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TimePickerHostPadding");
				context.ProvideTargetProperty = TextBlock.PaddingProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBlock13.Bind(paddingProperty3, binding9);
				textBlock13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				textBlock13.Bind(TextBlock.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				textBlock13.Bind(TextBlock.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)textBlock12).EndInit();
				context.PopParent();
				((ISupportInitialize)border12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children7 = grid5.Children;
				Popup popup;
				Popup popup2 = (popup = new Popup());
				((ISupportInitialize)popup2).BeginInit();
				children7.Add(popup2);
				popup.Name = "PART_Popup";
				service = popup;
				context.AvaloniaNameScope.Register("PART_Popup", service);
				popup.SetValue(Popup.IsLightDismissEnabledProperty, value: true, BindingPriority.Template);
				popup.SetValue(Popup.PlacementProperty, PlacementMode.Bottom, BindingPriority.Template);
				popup.Bind(Popup.PlacementTargetProperty, new TemplateBinding().ProvideValue());
				popup.SetValue(Popup.WindowManagerAddShadowHintProperty, value: false, BindingPriority.Template);
				TimePickerPresenter timePickerPresenter;
				TimePickerPresenter timePickerPresenter2 = (timePickerPresenter = new TimePickerPresenter());
				((ISupportInitialize)timePickerPresenter2).BeginInit();
				popup.Child = timePickerPresenter2;
				timePickerPresenter.Name = "PART_PickerPresenter";
				service = timePickerPresenter;
				context.AvaloniaNameScope.Register("PART_PickerPresenter", service);
				((ISupportInitialize)timePickerPresenter).EndInit();
				((ISupportInitialize)popup).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TimePicker);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.FontSizeProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("FontSizeNormal");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlHighlightMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.HorizontalAlignmentProperty;
			setter12.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.VerticalAlignmentProperty;
			setter13.Value = VerticalAlignment.Center;
			controlTheme.Add(setter13);
			Setter setter14 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter15 = setter;
			setter15.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_234.Build, context);
			context.PopParent();
			setter15.Value = value6;
			context.PopParent();
			controlTheme.Add(setter14);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(Rectangle));
			Setter setter16 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter17 = setter;
			setter17.Property = Visual.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value7 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter17.Value = value7;
			context.PopParent();
			style3.Add(setter16);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":hasnotime").Template()
				.OfType(typeof(Button))
				.Name("PART_FlyoutButton")
				.Descendant()
				.OfType(typeof(TextBlock));
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = TextBlock.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeForegroundLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value8;
			context.PopParent();
			style5.Add(setter18);
			context.PopParent();
			controlTheme.Add(style4);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_236
	{
		private class XamlClosure_237
		{
			private class DynamicSetters_238
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Border();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Border border = (Border)intermediateRoot;
				context.PushParent(border);
				border.Name = "Background";
				service = border;
				context.AvaloniaNameScope.Register("Background", service);
				border.SetValue(Layoutable.MaxHeightProperty, 398.0, BindingPriority.Template);
				StyledProperty<Thickness> paddingProperty = Decorator.PaddingProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("DateTimeFlyoutBorderPadding");
				context.ProvideTargetProperty = Decorator.PaddingProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border.Bind(paddingProperty, binding);
				border.Bind(Border.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				border.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				border.Bind(Border.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				border.Bind(Border.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				border.Child = grid2;
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				Grid grid5 = grid3;
				grid5.Name = "ContentPanel";
				service = grid5;
				context.AvaloniaNameScope.Register("ContentPanel", service);
				RowDefinitions rowDefinitions = new RowDefinitions();
				rowDefinitions.Capacity = 2;
				rowDefinitions.Add(new RowDefinition(new GridLength(1.0, GridUnitType.Star)));
				rowDefinitions.Add(new RowDefinition(new GridLength(0.0, GridUnitType.Auto)));
				grid5.RowDefinitions = rowDefinitions;
				Controls children = grid5.Children;
				Grid grid6;
				Grid grid7 = (grid6 = new Grid());
				((ISupportInitialize)grid7).BeginInit();
				children.Add(grid7);
				Grid grid8 = (grid3 = grid6);
				context.PushParent(grid3);
				Grid grid9 = grid3;
				grid9.Name = "PART_PickerContainer";
				service = grid9;
				context.AvaloniaNameScope.Register("PART_PickerContainer", service);
				Controls children2 = grid9.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children2.Add(panel2);
				Panel panel3;
				Panel panel4 = (panel3 = panel);
				context.PushParent(panel3);
				Panel panel5 = panel3;
				panel5.Name = "PART_HourHost";
				service = panel5;
				context.AvaloniaNameScope.Register("PART_HourHost", service);
				panel5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				Controls children3 = panel5.Children;
				ScrollViewer scrollViewer;
				ScrollViewer scrollViewer2 = (scrollViewer = new ScrollViewer());
				((ISupportInitialize)scrollViewer2).BeginInit();
				children3.Add(scrollViewer2);
				ScrollViewer scrollViewer3;
				ScrollViewer scrollViewer4 = (scrollViewer3 = scrollViewer);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer5 = scrollViewer3;
				scrollViewer5.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer5.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel;
				DateTimePickerPanel dateTimePickerPanel2 = (dateTimePickerPanel = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel2).BeginInit();
				scrollViewer5.Content = dateTimePickerPanel2;
				DateTimePickerPanel dateTimePickerPanel3;
				DateTimePickerPanel dateTimePickerPanel4 = (dateTimePickerPanel3 = dateTimePickerPanel);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel5 = dateTimePickerPanel3;
				dateTimePickerPanel5.Name = "PART_HourSelector";
				service = dateTimePickerPanel5;
				context.AvaloniaNameScope.Register("PART_HourSelector", service);
				StyledProperty<double> itemHeightProperty = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel5.Bind(itemHeightProperty, binding2);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Hour, BindingPriority.Template);
				dateTimePickerPanel5.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel4).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer4).EndInit();
				Controls children4 = panel5.Children;
				RepeatButton repeatButton;
				RepeatButton repeatButton2 = (repeatButton = new RepeatButton());
				((ISupportInitialize)repeatButton2).BeginInit();
				children4.Add(repeatButton2);
				RepeatButton repeatButton3;
				RepeatButton repeatButton4 = (repeatButton3 = repeatButton);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton5 = repeatButton3;
				repeatButton5.Name = "PART_HourUpButton";
				service = repeatButton5;
				context.AvaloniaNameScope.Register("PART_HourUpButton", service);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton5, BindingPriority.Template, obj);
				context.PopParent();
				((ISupportInitialize)repeatButton4).EndInit();
				Controls children5 = panel5.Children;
				RepeatButton repeatButton6;
				RepeatButton repeatButton7 = (repeatButton6 = new RepeatButton());
				((ISupportInitialize)repeatButton7).BeginInit();
				children5.Add(repeatButton7);
				RepeatButton repeatButton8 = (repeatButton3 = repeatButton6);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton9 = repeatButton3;
				repeatButton9.Name = "PART_HourDownButton";
				service = repeatButton9;
				context.AvaloniaNameScope.Register("PART_HourDownButton", service);
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton9, BindingPriority.Template, obj2);
				context.PopParent();
				((ISupportInitialize)repeatButton8).EndInit();
				context.PopParent();
				((ISupportInitialize)panel4).EndInit();
				Controls children6 = grid9.Children;
				Panel panel6;
				Panel panel7 = (panel6 = new Panel());
				((ISupportInitialize)panel7).BeginInit();
				children6.Add(panel7);
				Panel panel8 = (panel3 = panel6);
				context.PushParent(panel3);
				Panel panel9 = panel3;
				panel9.Name = "PART_MinuteHost";
				service = panel9;
				context.AvaloniaNameScope.Register("PART_MinuteHost", service);
				panel9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				Controls children7 = panel9.Children;
				ScrollViewer scrollViewer6;
				ScrollViewer scrollViewer7 = (scrollViewer6 = new ScrollViewer());
				((ISupportInitialize)scrollViewer7).BeginInit();
				children7.Add(scrollViewer7);
				ScrollViewer scrollViewer8 = (scrollViewer3 = scrollViewer6);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer9 = scrollViewer3;
				scrollViewer9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer9.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel6;
				DateTimePickerPanel dateTimePickerPanel7 = (dateTimePickerPanel6 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel7).BeginInit();
				scrollViewer9.Content = dateTimePickerPanel7;
				DateTimePickerPanel dateTimePickerPanel8 = (dateTimePickerPanel3 = dateTimePickerPanel6);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel9 = dateTimePickerPanel3;
				dateTimePickerPanel9.Name = "PART_MinuteSelector";
				service = dateTimePickerPanel9;
				context.AvaloniaNameScope.Register("PART_MinuteSelector", service);
				StyledProperty<double> itemHeightProperty2 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel9.Bind(itemHeightProperty2, binding3);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.Minute, BindingPriority.Template);
				dateTimePickerPanel9.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: true, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel8).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer8).EndInit();
				Controls children8 = panel9.Children;
				RepeatButton repeatButton10;
				RepeatButton repeatButton11 = (repeatButton10 = new RepeatButton());
				((ISupportInitialize)repeatButton11).BeginInit();
				children8.Add(repeatButton11);
				RepeatButton repeatButton12 = (repeatButton3 = repeatButton10);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton13 = repeatButton3;
				repeatButton13.Name = "PART_MinuteUpButton";
				service = repeatButton13;
				context.AvaloniaNameScope.Register("PART_MinuteUpButton", service);
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton13, BindingPriority.Template, obj3);
				context.PopParent();
				((ISupportInitialize)repeatButton12).EndInit();
				Controls children9 = panel9.Children;
				RepeatButton repeatButton14;
				RepeatButton repeatButton15 = (repeatButton14 = new RepeatButton());
				((ISupportInitialize)repeatButton15).BeginInit();
				children9.Add(repeatButton15);
				RepeatButton repeatButton16 = (repeatButton3 = repeatButton14);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton17 = repeatButton3;
				repeatButton17.Name = "PART_MinuteDownButton";
				service = repeatButton17;
				context.AvaloniaNameScope.Register("PART_MinuteDownButton", service);
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton17, BindingPriority.Template, obj4);
				context.PopParent();
				((ISupportInitialize)repeatButton16).EndInit();
				context.PopParent();
				((ISupportInitialize)panel8).EndInit();
				Controls children10 = grid9.Children;
				Panel panel10;
				Panel panel11 = (panel10 = new Panel());
				((ISupportInitialize)panel11).BeginInit();
				children10.Add(panel11);
				Panel panel12 = (panel3 = panel10);
				context.PushParent(panel3);
				Panel panel13 = panel3;
				panel13.Name = "PART_PeriodHost";
				service = panel13;
				context.AvaloniaNameScope.Register("PART_PeriodHost", service);
				panel13.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				Controls children11 = panel13.Children;
				ScrollViewer scrollViewer10;
				ScrollViewer scrollViewer11 = (scrollViewer10 = new ScrollViewer());
				((ISupportInitialize)scrollViewer11).BeginInit();
				children11.Add(scrollViewer11);
				ScrollViewer scrollViewer12 = (scrollViewer3 = scrollViewer10);
				context.PushParent(scrollViewer3);
				ScrollViewer scrollViewer13 = scrollViewer3;
				scrollViewer13.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				scrollViewer13.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, ScrollBarVisibility.Hidden, BindingPriority.Template);
				DateTimePickerPanel dateTimePickerPanel10;
				DateTimePickerPanel dateTimePickerPanel11 = (dateTimePickerPanel10 = new DateTimePickerPanel());
				((ISupportInitialize)dateTimePickerPanel11).BeginInit();
				scrollViewer13.Content = dateTimePickerPanel11;
				DateTimePickerPanel dateTimePickerPanel12 = (dateTimePickerPanel3 = dateTimePickerPanel10);
				context.PushParent(dateTimePickerPanel3);
				DateTimePickerPanel dateTimePickerPanel13 = dateTimePickerPanel3;
				dateTimePickerPanel13.Name = "PART_PeriodSelector";
				service = dateTimePickerPanel13;
				context.AvaloniaNameScope.Register("PART_PeriodSelector", service);
				StyledProperty<double> itemHeightProperty3 = DateTimePickerPanel.ItemHeightProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("TimePickerFlyoutPresenterItemHeight");
				context.ProvideTargetProperty = DateTimePickerPanel.ItemHeightProperty;
				IBinding binding4 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				dateTimePickerPanel13.Bind(itemHeightProperty3, binding4);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.PanelTypeProperty, DateTimePickerPanelType.TimePeriod, BindingPriority.Template);
				dateTimePickerPanel13.SetValue(DateTimePickerPanel.ShouldLoopProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)dateTimePickerPanel12).EndInit();
				context.PopParent();
				((ISupportInitialize)scrollViewer12).EndInit();
				Controls children12 = panel13.Children;
				RepeatButton repeatButton18;
				RepeatButton repeatButton19 = (repeatButton18 = new RepeatButton());
				((ISupportInitialize)repeatButton19).BeginInit();
				children12.Add(repeatButton19);
				RepeatButton repeatButton20 = (repeatButton3 = repeatButton18);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton21 = repeatButton3;
				repeatButton21.Name = "PART_PeriodUpButton";
				service = repeatButton21;
				context.AvaloniaNameScope.Register("PART_PeriodUpButton", service);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("SimpleDateTimePickerUpButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton21, BindingPriority.Template, obj5);
				context.PopParent();
				((ISupportInitialize)repeatButton20).EndInit();
				Controls children13 = panel13.Children;
				RepeatButton repeatButton22;
				RepeatButton repeatButton23 = (repeatButton22 = new RepeatButton());
				((ISupportInitialize)repeatButton23).BeginInit();
				children13.Add(repeatButton23);
				RepeatButton repeatButton24 = (repeatButton3 = repeatButton22);
				context.PushParent(repeatButton3);
				RepeatButton repeatButton25 = repeatButton3;
				repeatButton25.Name = "PART_PeriodDownButton";
				service = repeatButton25;
				context.AvaloniaNameScope.Register("PART_PeriodDownButton", service);
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SimpleDateTimePickerDownButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj6 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(repeatButton25, BindingPriority.Template, obj6);
				context.PopParent();
				((ISupportInitialize)repeatButton24).EndInit();
				context.PopParent();
				((ISupportInitialize)panel12).EndInit();
				Controls children14 = grid9.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children14.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.Name = "HighlightRect";
				service = rectangle5;
				context.AvaloniaNameScope.Register("HighlightRect", service);
				rectangle5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnSpanProperty, 5, BindingPriority.Template);
				StyledProperty<double> heightProperty = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("TimePickerFlyoutPresenterHighlightHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding5 = dynamicResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(heightProperty, binding5);
				rectangle5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				rectangle5.SetValue(Visual.ZIndexProperty, -1, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				SolidColorBrush solidColorBrush;
				SolidColorBrush value = (solidColorBrush = new SolidColorBrush());
				context.PushParent(solidColorBrush);
				solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
				StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
				DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeAccentColor");
				context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
				IBinding binding6 = dynamicResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				solidColorBrush.Bind(colorProperty, binding6);
				context.PopParent();
				rectangle5.SetValue(fillProperty, value, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children15 = grid9.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children15.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.Name = "PART_FirstSpacer";
				service = rectangle9;
				context.AvaloniaNameScope.Register("PART_FirstSpacer", service);
				rectangle9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding7 = dynamicResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(widthProperty, binding7);
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding8 = dynamicResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding8);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children16 = grid9.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children16.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.Name = "PART_SecondSpacer";
				service = rectangle13;
				context.AvaloniaNameScope.Register("PART_SecondSpacer", service);
				rectangle13.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding9 = dynamicResourceExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(widthProperty2, binding9);
				rectangle13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding10 = dynamicResourceExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(fillProperty3, binding10);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid8).EndInit();
				Controls children17 = grid5.Children;
				Grid grid10;
				Grid grid11 = (grid10 = new Grid());
				((ISupportInitialize)grid11).BeginInit();
				children17.Add(grid11);
				Grid grid12 = (grid3 = grid10);
				context.PushParent(grid3);
				Grid grid13 = grid3;
				grid13.Name = "AcceptDismissGrid";
				service = grid13;
				context.AvaloniaNameScope.Register("AcceptDismissGrid", service);
				grid13.SetValue(Grid.RowProperty, 1, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = new ColumnDefinitions();
				columnDefinitions.Capacity = 2;
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				columnDefinitions.Add(new ColumnDefinition(new GridLength(1.0, GridUnitType.Star)));
				grid13.ColumnDefinitions = columnDefinitions;
				Controls children18 = grid13.Children;
				Rectangle rectangle14;
				Rectangle rectangle15 = (rectangle14 = new Rectangle());
				((ISupportInitialize)rectangle15).BeginInit();
				children18.Add(rectangle15);
				Rectangle rectangle16 = (rectangle3 = rectangle14);
				context.PushParent(rectangle3);
				Rectangle rectangle17 = rectangle3;
				rectangle17.SetValue(Grid.ColumnSpanProperty, 2, BindingPriority.Template);
				StyledProperty<double> heightProperty2 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("TimePickerSpacerThemeWidth");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding11 = dynamicResourceExtension11.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(heightProperty2, binding11);
				rectangle17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Top, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty4 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ThemeControlMidHighBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding12 = dynamicResourceExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(fillProperty4, binding12);
				context.PopParent();
				((ISupportInitialize)rectangle16).EndInit();
				Controls children19 = grid13.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children19.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_AcceptButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_AcceptButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StyledProperty<double> heightProperty3 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("TimePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding13 = dynamicResourceExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(heightProperty3, binding13);
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("SimpleDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj7 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(button5, BindingPriority.Template, obj7);
				Path path;
				Path path2 = (path = new Path());
				((ISupportInitialize)path2).BeginInit();
				button5.Content = path2;
				Path path3;
				Path path4 = (path3 = path);
				context.PushParent(path3);
				Path path5 = path3;
				path5.SetValue(Path.DataProperty, Geometry.Parse("M0.5,8.5 5,13.5 15.5,3"), BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path5.Bind(strokeProperty, binding14);
				path5.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path5.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children20 = grid13.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children20.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_DismissButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_DismissButton", service);
				button9.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				StyledProperty<double> heightProperty4 = Layoutable.HeightProperty;
				DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("TimePickerFlyoutPresenterAcceptDismissHostGridHeight");
				context.ProvideTargetProperty = Layoutable.HeightProperty;
				IBinding binding15 = dynamicResourceExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(heightProperty4, binding15);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(TemplatedControl.FontSizeProperty, 16.0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("SimpleDateTimePickerButton");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj8 = staticResourceExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_238.DynamicSetter_1(button9, BindingPriority.Template, obj8);
				Path path6;
				Path path7 = (path6 = new Path());
				((ISupportInitialize)path7).BeginInit();
				button9.Content = path7;
				Path path8 = (path3 = path6);
				context.PushParent(path3);
				Path path9 = path3;
				path9.SetValue(Path.DataProperty, Geometry.Parse("M2,2 14,14 M2,14 14 2"), BindingPriority.Template);
				StyledProperty<IBrush?> strokeProperty2 = Shape.StrokeProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(Button), 0).Property(TemplatedControl.ForegroundProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
				context.ProvideTargetProperty = Shape.StrokeProperty;
				CompiledBindingExtension binding16 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				path9.Bind(strokeProperty2, binding16);
				path9.SetValue(Shape.StrokeLineCapProperty, PenLineCap.Round, BindingPriority.Template);
				path9.SetValue(Shape.StrokeThicknessProperty, 0.75, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)path8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)grid12).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(TimePickerPresenter);
			Setter setter = new Setter();
			setter.Property = Layoutable.WidthProperty;
			setter.Value = 242.0;
			controlTheme.Add(setter);
			Setter setter2 = new Setter();
			setter2.Property = Layoutable.MinWidthProperty;
			setter2.Value = 242.0;
			controlTheme.Add(setter2);
			Setter setter3 = new Setter();
			setter3.Property = Layoutable.MaxHeightProperty;
			setter3.Value = 398.0;
			controlTheme.Add(setter3);
			Setter setter4 = new Setter();
			setter4.Property = TemplatedControl.FontWeightProperty;
			setter4.Value = FontWeight.Normal;
			controlTheme.Add(setter4);
			Setter setter5;
			Setter setter6 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter7 = setter5;
			setter7.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeBackgroundBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter9 = setter5;
			setter9.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value2;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter11 = setter5;
			setter11.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("DateTimeFlyoutBorderThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value3;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = (setter5 = new Setter());
			context.PushParent(setter5);
			Setter setter13 = setter5;
			setter13.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_237.Build, context);
			context.PopParent();
			setter13.Value = value4;
			context.PopParent();
			controlTheme.Add(setter12);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Panel));
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":pointerover").Descendant()
				.OfType(typeof(RepeatButton));
			Setter setter14 = new Setter();
			setter14.Property = Visual.IsVisibleProperty;
			setter14.Value = true;
			style2.Add(setter14);
			style.Add(style2);
			controlTheme.Add(style);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_239
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return Easing.Parse("0.1,0.9,0.2,1.0");
		}
	}

	private class XamlClosure_240
	{
		private class XamlClosure_241
		{
			private class DynamicSetters_242
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "Container";
				service = grid;
				context.AvaloniaNameScope.Register("Container", service);
				grid.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition;
				ColumnDefinition item = (columnDefinition = new ColumnDefinition());
				context.PushParent(columnDefinition);
				StyledProperty<GridLength> widthProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(SplitViewTemplateSettings.PaneColumnGridLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				columnDefinition.Bind(widthProperty, binding);
				context.PopParent();
				columnDefinitions.Add(item);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				Controls children = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				panel.Name = "PART_PaneRoot";
				service = panel;
				context.AvaloniaNameScope.Register("PART_PaneRoot", service);
				panel.Bind(Panel.BackgroundProperty, new TemplateBinding(SplitView.PaneBackgroundProperty).ProvideValue());
				panel.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				panel.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				panel.SetValue(Visual.ZIndexProperty, 100, BindingPriority.Template);
				Controls children2 = panel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_PanePresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_PanePresenter", service);
				DynamicSetters_242.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(SplitView.PaneProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(SplitView.PaneTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children3 = panel.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				rectangle.Name = "HCPaneBorder";
				service = rectangle;
				context.AvaloniaNameScope.Register("HCPaneBorder", service);
				rectangle.SetValue(Shape.FillProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				rectangle.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				((ISupportInitialize)rectangle).EndInit();
				((ISupportInitialize)panel).EndInit();
				Controls children4 = grid.Children;
				Panel panel3;
				Panel panel4 = (panel3 = new Panel());
				((ISupportInitialize)panel4).BeginInit();
				children4.Add(panel4);
				panel3.Name = "ContentRoot";
				service = panel3;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				Controls children5 = panel3.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children5.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_242.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				Controls children6 = panel3.Children;
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = new Rectangle());
				((ISupportInitialize)rectangle4).BeginInit();
				children6.Add(rectangle4);
				rectangle3.Name = "LightDismissLayer";
				service = rectangle3;
				context.AvaloniaNameScope.Register("LightDismissLayer", service);
				((ISupportInitialize)rectangle3).EndInit();
				((ISupportInitialize)panel3).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		private class XamlClosure_243
		{
			private class DynamicSetters_244
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				grid.Name = "Container";
				service = grid;
				context.AvaloniaNameScope.Register("Container", service);
				grid.Bind(Panel.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2;
				ColumnDefinition item = (columnDefinition2 = new ColumnDefinition());
				context.PushParent(columnDefinition2);
				StyledProperty<GridLength> widthProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Property(SplitViewTemplateSettings.PaneColumnGridLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = ColumnDefinition.WidthProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				columnDefinition2.Bind(widthProperty, binding);
				context.PopParent();
				columnDefinitions2.Add(item);
				Controls children = grid.Children;
				Panel panel;
				Panel panel2 = (panel = new Panel());
				((ISupportInitialize)panel2).BeginInit();
				children.Add(panel2);
				panel.Name = "PART_PaneRoot";
				service = panel;
				context.AvaloniaNameScope.Register("PART_PaneRoot", service);
				panel.Bind(Panel.BackgroundProperty, new TemplateBinding(SplitView.PaneBackgroundProperty).ProvideValue());
				panel.SetValue(Visual.ClipToBoundsProperty, value: true, BindingPriority.Template);
				panel.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				panel.SetValue(Visual.ZIndexProperty, 100, BindingPriority.Template);
				Controls children2 = panel.Children;
				ContentPresenter contentPresenter;
				ContentPresenter contentPresenter2 = (contentPresenter = new ContentPresenter());
				((ISupportInitialize)contentPresenter2).BeginInit();
				children2.Add(contentPresenter2);
				contentPresenter.Name = "PART_PanePresenter";
				service = contentPresenter;
				context.AvaloniaNameScope.Register("PART_PanePresenter", service);
				DynamicSetters_244.DynamicSetter_1(contentPresenter, BindingPriority.Template, new TemplateBinding(SplitView.PaneProperty).ProvideValue());
				contentPresenter.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(SplitView.PaneTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter).EndInit();
				Controls children3 = panel.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children3.Add(rectangle2);
				rectangle.Name = "HCPaneBorder";
				service = rectangle;
				context.AvaloniaNameScope.Register("HCPaneBorder", service);
				rectangle.SetValue(Shape.FillProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				rectangle.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				rectangle.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				((ISupportInitialize)rectangle).EndInit();
				((ISupportInitialize)panel).EndInit();
				Controls children4 = grid.Children;
				Panel panel3;
				Panel panel4 = (panel3 = new Panel());
				((ISupportInitialize)panel4).BeginInit();
				children4.Add(panel4);
				panel3.Name = "ContentRoot";
				service = panel3;
				context.AvaloniaNameScope.Register("ContentRoot", service);
				Controls children5 = panel3.Children;
				ContentPresenter contentPresenter3;
				ContentPresenter contentPresenter4 = (contentPresenter3 = new ContentPresenter());
				((ISupportInitialize)contentPresenter4).BeginInit();
				children5.Add(contentPresenter4);
				contentPresenter3.Name = "PART_ContentPresenter";
				service = contentPresenter3;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				DynamicSetters_244.DynamicSetter_1(contentPresenter3, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				contentPresenter3.Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((ISupportInitialize)contentPresenter3).EndInit();
				Controls children6 = panel3.Children;
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = new Rectangle());
				((ISupportInitialize)rectangle4).BeginInit();
				children6.Add(rectangle4);
				rectangle3.Name = "LightDismissLayer";
				service = rectangle3;
				context.AvaloniaNameScope.Register("LightDismissLayer", service);
				((ISupportInitialize)rectangle3).EndInit();
				((ISupportInitialize)panel3).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SplitView);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = SplitView.OpenPaneLengthProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitViewOpenPaneThemeLength");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = SplitView.CompactPaneLengthProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitViewCompactPaneThemeLength");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = SplitView.PaneBackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeControlHighlightLowBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":left");
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value4 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			ControlTemplate controlTemplate2 = controlTemplate;
			controlTemplate2.TargetType = typeof(SplitView);
			controlTemplate2.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_241.Build, context);
			context.PopParent();
			setter9.Value = value4;
			context.PopParent();
			style3.Add(setter8);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value5 = obj.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			style5.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Grid.ColumnSpanProperty;
			setter12.Value = 1;
			style5.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Grid.ColumnProperty;
			setter13.Value = 0;
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = new Style();
			style6.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter14 = new Setter();
			setter14.Property = Grid.ColumnProperty;
			setter14.Value = 1;
			style6.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = Grid.ColumnSpanProperty;
			setter15.Value = 2;
			style6.Add(setter15);
			controlTheme.Add(style6);
			Style style7 = (style = new Style());
			context.PushParent(style);
			Style style8 = style;
			style8.Selector = ((Selector?)null).Nesting().Class(":compactinline").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter16 = new Setter();
			setter16.Property = Grid.ColumnSpanProperty;
			setter16.Value = 1;
			style8.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = Grid.ColumnProperty;
			setter17.Value = 0;
			style8.Add(setter17);
			Setter setter18 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter19 = setter;
			setter19.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj2 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value6 = obj2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter19.Value = value6;
			context.PopParent();
			style8.Add(setter18);
			context.PopParent();
			controlTheme.Add(style7);
			Style style9 = new Style();
			style9.Selector = ((Selector?)null).Nesting().Class(":compactinline").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter20 = new Setter();
			setter20.Property = Grid.ColumnProperty;
			setter20.Value = 1;
			style9.Add(setter20);
			Setter setter21 = new Setter();
			setter21.Property = Grid.ColumnSpanProperty;
			setter21.Value = 1;
			style9.Add(setter21);
			controlTheme.Add(style9);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter22 = new Setter();
			setter22.Property = Grid.ColumnSpanProperty;
			setter22.Value = 1;
			style11.Add(setter22);
			Setter setter23 = new Setter();
			setter23.Property = Grid.ColumnProperty;
			setter23.Value = 0;
			style11.Add(setter23);
			Setter setter24 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter25 = setter;
			setter25.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj3 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value7 = obj3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter25.Value = value7;
			context.PopParent();
			style11.Add(setter24);
			context.PopParent();
			controlTheme.Add(style10);
			Style style12 = new Style();
			style12.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter26 = new Setter();
			setter26.Property = Grid.ColumnProperty;
			setter26.Value = 1;
			style12.Add(setter26);
			Setter setter27 = new Setter();
			setter27.Property = Grid.ColumnSpanProperty;
			setter27.Value = 1;
			style12.Add(setter27);
			controlTheme.Add(style12);
			Style style13 = (style = new Style());
			context.PushParent(style);
			Style style14 = style;
			style14.Selector = ((Selector?)null).Nesting().Class(":inline").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter28 = new Setter();
			setter28.Property = Grid.ColumnSpanProperty;
			setter28.Value = 1;
			style14.Add(setter28);
			Setter setter29 = new Setter();
			setter29.Property = Grid.ColumnProperty;
			setter29.Value = 0;
			style14.Add(setter29);
			Setter setter30 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter31 = setter;
			setter31.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj4 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value8 = obj4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter31.Value = value8;
			context.PopParent();
			style14.Add(setter30);
			context.PopParent();
			controlTheme.Add(style13);
			Style style15 = new Style();
			style15.Selector = ((Selector?)null).Nesting().Class(":inline").Class(":left")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter32 = new Setter();
			setter32.Property = Grid.ColumnProperty;
			setter32.Value = 1;
			style15.Add(setter32);
			Setter setter33 = new Setter();
			setter33.Property = Grid.ColumnSpanProperty;
			setter33.Value = 1;
			style15.Add(setter33);
			controlTheme.Add(style15);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":right");
			Setter setter34 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter35 = setter;
			setter35.Property = TemplatedControl.TemplateProperty;
			ControlTemplate value9 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			ControlTemplate controlTemplate3 = controlTemplate;
			controlTemplate3.TargetType = typeof(SplitView);
			controlTemplate3.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_243.Build, context);
			context.PopParent();
			setter35.Value = value9;
			context.PopParent();
			style17.Add(setter34);
			context.PopParent();
			controlTheme.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter36 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter37 = setter;
			setter37.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj5 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value10 = obj5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter37.Value = value10;
			context.PopParent();
			style19.Add(setter36);
			Setter setter38 = new Setter();
			setter38.Property = Grid.ColumnSpanProperty;
			setter38.Value = 2;
			style19.Add(setter38);
			Setter setter39 = new Setter();
			setter39.Property = Grid.ColumnProperty;
			setter39.Value = 1;
			style19.Add(setter39);
			context.PopParent();
			controlTheme.Add(style18);
			Style style20 = new Style();
			style20.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter40 = new Setter();
			setter40.Property = Grid.ColumnProperty;
			setter40.Value = 0;
			style20.Add(setter40);
			Setter setter41 = new Setter();
			setter41.Property = Grid.ColumnSpanProperty;
			setter41.Value = 2;
			style20.Add(setter41);
			controlTheme.Add(style20);
			Style style21 = (style = new Style());
			context.PushParent(style);
			Style style22 = style;
			style22.Selector = ((Selector?)null).Nesting().Class(":compactinline").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter42 = new Setter();
			setter42.Property = Grid.ColumnSpanProperty;
			setter42.Value = 1;
			style22.Add(setter42);
			Setter setter43 = new Setter();
			setter43.Property = Grid.ColumnProperty;
			setter43.Value = 1;
			style22.Add(setter43);
			Setter setter44 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter45 = setter;
			setter45.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj6 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value11 = obj6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter45.Value = value11;
			context.PopParent();
			style22.Add(setter44);
			context.PopParent();
			controlTheme.Add(style21);
			Style style23 = new Style();
			style23.Selector = ((Selector?)null).Nesting().Class(":compactinline").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter46 = new Setter();
			setter46.Property = Grid.ColumnProperty;
			setter46.Value = 0;
			style23.Add(setter46);
			Setter setter47 = new Setter();
			setter47.Property = Grid.ColumnSpanProperty;
			setter47.Value = 1;
			style23.Add(setter47);
			controlTheme.Add(style23);
			Style style24 = (style = new Style());
			context.PushParent(style);
			Style style25 = style;
			style25.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter48 = new Setter();
			setter48.Property = Grid.ColumnSpanProperty;
			setter48.Value = 2;
			style25.Add(setter48);
			Setter setter49 = new Setter();
			setter49.Property = Grid.ColumnProperty;
			setter49.Value = 1;
			style25.Add(setter49);
			Setter setter50 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter51 = setter;
			setter51.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj7 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value12 = obj7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter51.Value = value12;
			context.PopParent();
			style25.Add(setter50);
			context.PopParent();
			controlTheme.Add(style24);
			Style style26 = new Style();
			style26.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter52 = new Setter();
			setter52.Property = Grid.ColumnProperty;
			setter52.Value = 0;
			style26.Add(setter52);
			Setter setter53 = new Setter();
			setter53.Property = Grid.ColumnSpanProperty;
			setter53.Value = 1;
			style26.Add(setter53);
			controlTheme.Add(style26);
			Style style27 = (style = new Style());
			context.PushParent(style);
			Style style28 = style;
			style28.Selector = ((Selector?)null).Nesting().Class(":inline").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter54 = new Setter();
			setter54.Property = Grid.ColumnSpanProperty;
			setter54.Value = 1;
			style28.Add(setter54);
			Setter setter55 = new Setter();
			setter55.Property = Grid.ColumnProperty;
			setter55.Value = 1;
			style28.Add(setter55);
			Setter setter56 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter57 = setter;
			setter57.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj8 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value13 = obj8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter57.Value = value13;
			context.PopParent();
			style28.Add(setter56);
			context.PopParent();
			controlTheme.Add(style27);
			Style style29 = new Style();
			style29.Selector = ((Selector?)null).Nesting().Class(":inline").Class(":right")
				.Template()
				.OfType(typeof(Panel))
				.Name("ContentRoot");
			Setter setter58 = new Setter();
			setter58.Property = Grid.ColumnProperty;
			setter58.Value = 0;
			style29.Add(setter58);
			Setter setter59 = new Setter();
			setter59.Property = Grid.ColumnSpanProperty;
			setter59.Value = 1;
			style29.Add(setter59);
			controlTheme.Add(style29);
			Style style30 = (style = new Style());
			context.PushParent(style);
			Style style31 = style;
			style31.Selector = ((Selector?)null).Nesting().Class(":open").Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter60 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter61 = setter;
			setter61.Property = Animatable.TransitionsProperty;
			Transitions transitions;
			Transitions value14 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions2 = transitions;
			DoubleTransition doubleTransition;
			DoubleTransition item = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition2 = doubleTransition;
			doubleTransition2.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SplitViewPaneAnimationOpenDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj9 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition2.Duration = (TimeSpan)obj9;
			StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj10 = staticResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition2.Easing = (Easing)obj10;
			context.PopParent();
			transitions2.Add(item);
			context.PopParent();
			setter61.Value = value14;
			context.PopParent();
			style31.Add(setter60);
			Setter setter62 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter63 = setter;
			setter63.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj11 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.OpenPaneLengthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value15 = obj11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter63.Value = value15;
			context.PopParent();
			style31.Add(setter62);
			context.PopParent();
			controlTheme.Add(style30);
			Style style32 = (style = new Style());
			context.PushParent(style);
			Style style33 = style;
			style33.Selector = ((Selector?)null).Nesting().Class(":open").Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter64 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter65 = setter;
			setter65.Property = Animatable.TransitionsProperty;
			Transitions value16 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions3 = transitions;
			DoubleTransition item2 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition3 = doubleTransition;
			doubleTransition3.Property = Visual.OpacityProperty;
			StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("SplitViewPaneAnimationOpenDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj12 = staticResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition3.Duration = (TimeSpan)obj12;
			StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj13 = staticResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition3.Easing = (Easing)obj13;
			context.PopParent();
			transitions3.Add(item2);
			context.PopParent();
			setter65.Value = value16;
			context.PopParent();
			style33.Add(setter64);
			Setter setter66 = new Setter();
			setter66.Property = Visual.OpacityProperty;
			setter66.Value = 1.0;
			style33.Add(setter66);
			context.PopParent();
			controlTheme.Add(style32);
			Style style34 = (style = new Style());
			context.PushParent(style);
			Style style35 = style;
			style35.Selector = ((Selector?)null).Nesting().Class(":closed").Template()
				.OfType(typeof(Panel))
				.Name("PART_PaneRoot");
			Setter setter67 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter68 = setter;
			setter68.Property = Animatable.TransitionsProperty;
			Transitions value17 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions4 = transitions;
			DoubleTransition item3 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition4 = doubleTransition;
			doubleTransition4.Property = Layoutable.WidthProperty;
			StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("SplitViewPaneAnimationCloseDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj14 = staticResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition4.Duration = (TimeSpan)obj14;
			StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj15 = staticResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition4.Easing = (Easing)obj15;
			context.PopParent();
			transitions4.Add(item3);
			context.PopParent();
			setter68.Value = value17;
			context.PopParent();
			style35.Add(setter67);
			Setter setter69 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter70 = setter;
			setter70.Property = Layoutable.WidthProperty;
			CompiledBindingExtension obj16 = new CompiledBindingExtension
			{
				Path = new CompiledBindingPathBuilder().Self().Property(StyledElement.TemplatedParentProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(SplitView.TemplateSettingsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Property(SplitViewTemplateSettings.ClosedPaneWidthProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor)
					.Build()
			};
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			CompiledBindingExtension value18 = obj16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter70.Value = value18;
			context.PopParent();
			style35.Add(setter69);
			context.PopParent();
			controlTheme.Add(style34);
			Style style36 = (style = new Style());
			context.PushParent(style);
			Style style37 = style;
			style37.Selector = ((Selector?)null).Nesting().Class(":closed").Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter71 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter72 = setter;
			setter72.Property = Animatable.TransitionsProperty;
			Transitions value19 = (transitions = new Transitions());
			context.PushParent(transitions);
			Transitions transitions5 = transitions;
			DoubleTransition item4 = (doubleTransition = new DoubleTransition());
			context.PushParent(doubleTransition);
			DoubleTransition doubleTransition5 = doubleTransition;
			doubleTransition5.Property = Visual.OpacityProperty;
			StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("SplitViewPaneAnimationCloseDuration");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EDuration_0021Property();
			object? obj17 = staticResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition5.Duration = (TimeSpan)obj17;
			StaticResourceExtension staticResourceExtension8 = new StaticResourceExtension("SplitViewPaneAnimationEasing");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EAnimation_002ETransition_00601_002CAvalonia_002EBase_002EEasing_0021Property();
			object? obj18 = staticResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			doubleTransition5.Easing = (Easing)obj18;
			context.PopParent();
			transitions5.Add(item4);
			context.PopParent();
			setter72.Value = value19;
			context.PopParent();
			style37.Add(setter71);
			Setter setter73 = new Setter();
			setter73.Property = Visual.OpacityProperty;
			setter73.Value = 0.0;
			style37.Add(setter73);
			context.PopParent();
			controlTheme.Add(style36);
			Style style38 = new Style();
			style38.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter74 = new Setter();
			setter74.Property = Visual.IsVisibleProperty;
			setter74.Value = false;
			style38.Add(setter74);
			Setter setter75 = new Setter();
			setter75.Property = Shape.FillProperty;
			setter75.Value = new ImmutableSolidColorBrush(16777215u);
			style38.Add(setter75);
			controlTheme.Add(style38);
			Style style39 = (style = new Style());
			context.PushParent(style);
			Style style40 = style;
			style40.Selector = ((Selector?)null).Nesting().Class(":lightdismiss").Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter76 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter77 = setter;
			setter77.Property = Shape.FillProperty;
			SolidColorBrush solidColorBrush;
			SolidColorBrush value20 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlLowColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			solidColorBrush.Bind(colorProperty, binding);
			solidColorBrush.SetValue(Brush.OpacityProperty, 0.6, BindingPriority.Template);
			context.PopParent();
			setter77.Value = value20;
			context.PopParent();
			style40.Add(setter76);
			context.PopParent();
			controlTheme.Add(style39);
			Style style41 = new Style();
			style41.Selector = ((Selector?)null).Nesting().Class(":overlay").Class(":open")
				.Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter78 = new Setter();
			setter78.Property = Visual.IsVisibleProperty;
			setter78.Value = true;
			style41.Add(setter78);
			controlTheme.Add(style41);
			Style style42 = new Style();
			style42.Selector = ((Selector?)null).Nesting().Class(":compactoverlay").Class(":open")
				.Template()
				.OfType(typeof(Rectangle))
				.Name("LightDismissLayer");
			Setter setter79 = new Setter();
			setter79.Property = Visual.IsVisibleProperty;
			setter79.Value = true;
			style42.Add(setter79);
			controlTheme.Add(style42);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_245
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			DrawingGroup drawingGroup = new DrawingGroup();
			DrawingCollection children = drawingGroup.Children;
			GeometryDrawing geometryDrawing = new GeometryDrawing();
			geometryDrawing.Brush = new ImmutableSolidColorBrush(16777215u);
			geometryDrawing.Geometry = Geometry.Parse("F1M16,16L0,16 0,0 16,0z");
			children.Add(geometryDrawing);
			DrawingCollection children2 = drawingGroup.Children;
			GeometryDrawing geometryDrawing2 = new GeometryDrawing();
			geometryDrawing2.Brush = new ImmutableSolidColorBrush(4294375158u);
			geometryDrawing2.Geometry = Geometry.Parse("F1M14.5,0L6.39,0 5.39,2 2.504,2C1.677,2,1,2.673,1,3.5L1,10.582 1,10.586 1,15.414 3,13.414 3,16 7,16 7,13.414 9,15.414 9,13 14.5,13C15.327,13,16,12.327,16,11.5L16,1.5C16,0.673,15.327,0,14.5,0");
			children2.Add(geometryDrawing2);
			DrawingCollection children3 = drawingGroup.Children;
			GeometryDrawing geometryDrawing3 = new GeometryDrawing();
			geometryDrawing3.Brush = new ImmutableSolidColorBrush(4292654713u);
			geometryDrawing3.Geometry = Geometry.Parse("F1M14,3L7.508,3 8.008,2 8.012,2 14,2z M14.5,1L7.008,1 6.008,3 2.504,3C2.227,3,2,3.224,2,3.5L2,9.582 4.998,6.586 9,10.586 9,12 14.5,12C14.775,12,15,11.776,15,11.5L15,1.5C15,1.224,14.775,1,14.5,1");
			children3.Add(geometryDrawing3);
			DrawingCollection children4 = drawingGroup.Children;
			GeometryDrawing geometryDrawing4 = new GeometryDrawing();
			geometryDrawing4.Brush = new ImmutableSolidColorBrush(4278211228u);
			geometryDrawing4.Geometry = Geometry.Parse("F1M8,11L5,8 2,11 2,13 4,11 4,15 6,15 6,11 8,13z");
			children4.Add(geometryDrawing4);
			DrawingCollection children5 = drawingGroup.Children;
			GeometryDrawing geometryDrawing5 = new GeometryDrawing();
			geometryDrawing5.Brush = new ImmutableSolidColorBrush(4293980145u);
			geometryDrawing5.Geometry = Geometry.Parse("F1M8.0001,1.9996L7.5001,3.0006 14.0001,3.0006 14.0001,1.9996z");
			children5.Add(geometryDrawing5);
			return drawingGroup;
		}
	}

	private class XamlClosure_246
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			DrawingGroup drawingGroup = new DrawingGroup();
			DrawingCollection children = drawingGroup.Children;
			GeometryDrawing geometryDrawing = new GeometryDrawing();
			geometryDrawing.Brush = new ImmutableSolidColorBrush(4294375158u);
			geometryDrawing.Geometry = Geometry.Parse("F1M13.5049,7.3896L13.2339,6.2646 9.9299,7.5886 10.0729,8.3896C10.0909,8.4906 10.1079,8.5926 10.1079,8.6976 10.1079,9.8596 9.1619,10.8046 7.9999,10.8046 6.8369,10.8046 5.8909,9.8596 5.8909,8.6976 5.8909,7.8966 6.3399,7.1996 6.9999,6.8426L6.9999,9.4986 12.6789,4.8156 8.0569,0.9996 6.9999,0.9996 6.9999,3.1266C4.3539,3.6006 2.3389,5.9176 2.3389,8.6976 2.3389,11.8186 4.8789,14.3586 7.9999,14.3586 11.1209,14.3586 13.6609,11.8186 13.6609,8.6976 13.6609,8.2626 13.6089,7.8226 13.5049,7.3896");
			children.Add(geometryDrawing);
			DrawingCollection children2 = drawingGroup.Children;
			GeometryDrawing geometryDrawing2 = new GeometryDrawing();
			geometryDrawing2.Brush = new ImmutableSolidColorBrush(4282466625u);
			geometryDrawing2.Geometry = Geometry.Parse("F1M12.5322,7.623L11.0572,8.214C11.0862,8.372 11.1072,8.533 11.1072,8.697 11.1072,10.415 9.7172,11.805 8.0002,11.805 6.2852,11.805 4.8912,10.415 4.8912,8.697 4.8912,6.983 6.2852,5.59 8.0002,5.59L8.0002,7.378 11.1072,4.815 8.0002,2.25 8.0002,4.039C5.4262,4.039 3.3392,6.123 3.3392,8.697 3.3392,11.27 5.4262,13.358 8.0002,13.358 10.5762,13.358 12.6612,11.27 12.6612,8.697 12.6612,8.327 12.6152,7.969 12.5322,7.623");
			children2.Add(geometryDrawing2);
			return drawingGroup;
		}
	}

	private class XamlClosure_247
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ResourceSelectorConverter resourceSelectorConverter = new ResourceSelectorConverter();
			DrawingGroup drawingGroup = new DrawingGroup();
			DrawingCollection children = drawingGroup.Children;
			GeometryDrawing geometryDrawing = new GeometryDrawing();
			geometryDrawing.Brush = new ImmutableSolidColorBrush(16777215u);
			geometryDrawing.Geometry = Geometry.Parse("F1M0,0L16,0 16,16 0,16z");
			children.Add(geometryDrawing);
			DrawingCollection children2 = drawingGroup.Children;
			GeometryDrawing geometryDrawing2 = new GeometryDrawing();
			geometryDrawing2.Brush = new ImmutableSolidColorBrush(4294375158u);
			geometryDrawing2.Geometry = Geometry.Parse("F1M1.5,1L9.61,1 10.61,3 13.496,3C14.323,3,14.996,3.673,14.996,4.5L14.996,12.5C14.996,13.327,14.323,14,13.496,14L1.5,14C0.673,14,0,13.327,0,12.5L0,2.5C0,1.673,0.673,1,1.5,1");
			children2.Add(geometryDrawing2);
			DrawingCollection children3 = drawingGroup.Children;
			GeometryDrawing geometryDrawing3 = new GeometryDrawing();
			geometryDrawing3.Brush = new ImmutableSolidColorBrush(4292654714u);
			geometryDrawing3.Geometry = Geometry.Parse("F1M2,3L8.374,3 8.874,4 2,4z M13.496,4L10,4 9.992,4 8.992,2 1.5,2C1.225,2,1,2.224,1,2.5L1,12.5C1,12.776,1.225,13,1.5,13L13.496,13C13.773,13,13.996,12.776,13.996,12.5L13.996,4.5C13.996,4.224,13.773,4,13.496,4");
			children3.Add(geometryDrawing3);
			DrawingCollection children4 = drawingGroup.Children;
			GeometryDrawing geometryDrawing4 = new GeometryDrawing();
			geometryDrawing4.Brush = new ImmutableSolidColorBrush(4293914608u);
			geometryDrawing4.Geometry = Geometry.Parse("F1M2,3L8.374,3 8.874,4 2,4z");
			children4.Add(geometryDrawing4);
			resourceSelectorConverter.Add("Icon_Folder", drawingGroup);
			DrawingGroup drawingGroup2 = new DrawingGroup();
			DrawingCollection children5 = drawingGroup2.Children;
			GeometryDrawing geometryDrawing5 = new GeometryDrawing();
			geometryDrawing5.Brush = new ImmutableSolidColorBrush(16777215u);
			geometryDrawing5.Geometry = Geometry.Parse("F1M16,16L0,16 0,0 16,0z");
			children5.Add(geometryDrawing5);
			DrawingCollection children6 = drawingGroup2.Children;
			GeometryDrawing geometryDrawing6 = new GeometryDrawing();
			geometryDrawing6.Brush = new ImmutableSolidColorBrush(4294375158u);
			geometryDrawing6.Geometry = Geometry.Parse("F1M4,15C3.03,15,2,14.299,2,13L2,3C2,1.701,3.03,1,4,1L10.061,1 14,4.556 14,13C14,13.97,13.299,15,12,15z");
			children6.Add(geometryDrawing6);
			DrawingCollection children7 = drawingGroup2.Children;
			GeometryDrawing geometryDrawing7 = new GeometryDrawing();
			geometryDrawing7.Brush = new ImmutableSolidColorBrush(4288368278u);
			geometryDrawing7.Geometry = Geometry.Parse("F1M12,13L4,13 4,3 9,3 9,6 12,6z M9.641,2L3.964,2C3.964,2,3,2,3,3L3,13C3,14,3.964,14,3.964,14L11.965,14C12.965,14,13,13,13,13L13,5z");
			children7.Add(geometryDrawing7);
			DrawingCollection children8 = drawingGroup2.Children;
			GeometryDrawing geometryDrawing8 = new GeometryDrawing();
			geometryDrawing8.Brush = new ImmutableSolidColorBrush(4293980145u);
			geometryDrawing8.Geometry = Geometry.Parse("F1M4,3L9,3 9,6 12,6 12,13 4,13z");
			children8.Add(geometryDrawing8);
			resourceSelectorConverter.Add("Icon_File", drawingGroup2);
			DrawingGroup drawingGroup3 = new DrawingGroup();
			DrawingCollection children9 = drawingGroup3.Children;
			GeometryDrawing geometryDrawing9 = new GeometryDrawing();
			geometryDrawing9.Brush = new ImmutableSolidColorBrush(16777215u);
			geometryDrawing9.Geometry = Geometry.Parse("F1M16,16L0,16 0,0 16,0z");
			children9.Add(geometryDrawing9);
			DrawingCollection children10 = drawingGroup3.Children;
			GeometryDrawing geometryDrawing10 = new GeometryDrawing();
			geometryDrawing10.Brush = new ImmutableSolidColorBrush(4294375158u);
			geometryDrawing10.Geometry = Geometry.Parse("F1M0,12L0,6.5C0,5.122,1.122,4,2.5,4L13.5,4C14.879,4,16,5.122,16,6.5L16,12z");
			children10.Add(geometryDrawing10);
			DrawingCollection children11 = drawingGroup3.Children;
			GeometryDrawing geometryDrawing11 = new GeometryDrawing();
			geometryDrawing11.Brush = new ImmutableSolidColorBrush(4293914608u);
			geometryDrawing11.Geometry = Geometry.Parse("F1M13,8L12,8 12,7 13,7z M11,8L10,8 10,7 11,7z M13.5,6L2.5,6C2.224,6,2,6.224,2,6.5L2,10 14,10 14,6.5C14,6.224,13.775,6,13.5,6");
			children11.Add(geometryDrawing11);
			DrawingCollection children12 = drawingGroup3.Children;
			GeometryDrawing geometryDrawing12 = new GeometryDrawing();
			geometryDrawing12.Brush = new ImmutableSolidColorBrush(4282532418u);
			geometryDrawing12.Geometry = Geometry.Parse("F1M13,7L12,7 12,8 13,8z M11,7L10,7 10,8 11,8z M2,10L14,10 14,6.5C14,6.224,13.775,6,13.5,6L2.5,6C2.224,6,2,6.224,2,6.5z M15,11L1,11 1,6.5C1,5.673,1.673,5,2.5,5L13.5,5C14.327,5,15,5.673,15,6.5z");
			children12.Add(geometryDrawing12);
			resourceSelectorConverter.Add("Icon_Volume", drawingGroup3);
			return resourceSelectorConverter;
		}
	}

	private class XamlClosure_248
	{
		private class XamlClosure_249
		{
			private class DynamicSetters_250
			{
				public static void DynamicSetter_1(DrawingImage P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(DrawingImage.DrawingProperty, binding);
						return;
					}
					if (P_2 is Drawing)
					{
						Drawing value = (Drawing)P_2;
						int priority = (int)P_1;
						P_0.SetValue(DrawingImage.DrawingProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						Drawing value = (Drawing)P_2;
						int priority = (int)P_1;
						P_0.SetValue(DrawingImage.DrawingProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(SelectingItemsControl P_0, CompiledBindingExtension P_1)
				{
					if (P_1 != null)
					{
						IBinding binding = P_1;
						P_0.Bind(SelectingItemsControl.SelectedItemProperty, binding);
					}
					else
					{
						P_0.SelectedItem = P_1;
					}
				}
			}

			private class XamlClosure_251
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new StackPanel();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					StackPanel stackPanel = (StackPanel)intermediateRoot;
					context.PushParent(stackPanel);
					stackPanel.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
					stackPanel.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
					stackPanel.SetValue(StackPanel.SpacingProperty, 4.0, BindingPriority.Template);
					Controls children = stackPanel.Children;
					Image image;
					Image image2 = (image = new Image());
					((ISupportInitialize)image2).BeginInit();
					children.Add(image2);
					Image image3;
					Image image4 = (image3 = image);
					context.PushParent(image3);
					image3.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
					image3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
					DrawingImage drawingImage;
					DrawingImage source = (drawingImage = new DrawingImage());
					context.PushParent(drawingImage);
					StyledProperty<Drawing?> drawingProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension compiledBindingExtension;
					CompiledBindingExtension compiledBindingExtension2 = (compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EIconKey_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build()));
					context.PushParent(compiledBindingExtension);
					StaticResourceExtension staticResourceExtension = new StaticResourceExtension("Icons");
					context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
					object? obj = staticResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					compiledBindingExtension.Converter = (IValueConverter)obj;
					context.PopParent();
					context.ProvideTargetProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension binding = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					drawingImage.Bind(drawingProperty, binding);
					context.PopParent();
					image3.Source = source;
					context.PopParent();
					((ISupportInitialize)image4).EndInit();
					Controls children2 = stackPanel.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children2.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EDisplayName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension3.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock3.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			private class XamlClosure_252
			{
				public static object Build(IServiceProvider P_0)
				{
					CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
					if (P_0 != null)
					{
						object service = P_0.GetService(typeof(IRootObjectProvider));
						if (service != null)
						{
							service = ((IRootObjectProvider)service).RootObject;
							context.RootObject = (Styles)service;
						}
					}
					context.IntermediateRoot = new Grid();
					object intermediateRoot = context.IntermediateRoot;
					((ISupportInitialize)intermediateRoot).BeginInit();
					Grid grid = (Grid)intermediateRoot;
					context.PushParent(grid);
					grid.SetValue(Panel.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
					ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition = new ColumnDefinition();
					columnDefinition.SetValue(DefinitionBase.SharedSizeGroupProperty, "Icon", BindingPriority.Template);
					columnDefinitions.Add(columnDefinition);
					ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition2 = new ColumnDefinition();
					columnDefinition2.SetValue(DefinitionBase.SharedSizeGroupProperty, "Name", BindingPriority.Template);
					columnDefinitions2.Add(columnDefinition2);
					ColumnDefinitions columnDefinitions3 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition3 = new ColumnDefinition();
					columnDefinition3.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions3.Add(columnDefinition3);
					ColumnDefinitions columnDefinitions4 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition4 = new ColumnDefinition();
					columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "Modified", BindingPriority.Template);
					columnDefinitions4.Add(columnDefinition4);
					ColumnDefinitions columnDefinitions5 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition5 = new ColumnDefinition();
					columnDefinition5.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions5.Add(columnDefinition5);
					ColumnDefinitions columnDefinitions6 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition6 = new ColumnDefinition();
					columnDefinition6.SetValue(DefinitionBase.SharedSizeGroupProperty, "Type", BindingPriority.Template);
					columnDefinitions6.Add(columnDefinition6);
					ColumnDefinitions columnDefinitions7 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition7 = new ColumnDefinition();
					columnDefinition7.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions7.Add(columnDefinition7);
					ColumnDefinitions columnDefinitions8 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition8 = new ColumnDefinition();
					columnDefinition8.SetValue(DefinitionBase.SharedSizeGroupProperty, "Size", BindingPriority.Template);
					columnDefinitions8.Add(columnDefinition8);
					ColumnDefinitions columnDefinitions9 = grid.ColumnDefinitions;
					ColumnDefinition columnDefinition9 = new ColumnDefinition();
					columnDefinition9.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
					columnDefinitions9.Add(columnDefinition9);
					Controls children = grid.Children;
					Image image;
					Image image2 = (image = new Image());
					((ISupportInitialize)image2).BeginInit();
					children.Add(image2);
					Image image3;
					Image image4 = (image3 = image);
					context.PushParent(image3);
					image3.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
					image3.SetValue(Layoutable.WidthProperty, 16.0, BindingPriority.Template);
					image3.SetValue(Layoutable.HeightProperty, 16.0, BindingPriority.Template);
					DrawingImage drawingImage;
					DrawingImage source = (drawingImage = new DrawingImage());
					context.PushParent(drawingImage);
					StyledProperty<Drawing?> drawingProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension compiledBindingExtension;
					CompiledBindingExtension compiledBindingExtension2 = (compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EIconKey_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build()));
					context.PushParent(compiledBindingExtension);
					StaticResourceExtension staticResourceExtension = new StaticResourceExtension("Icons");
					context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002EBindingBase_002CAvalonia_002EMarkup_002EConverter_0021Property();
					object? obj = staticResourceExtension.ProvideValue(context);
					context.ProvideTargetProperty = null;
					compiledBindingExtension.Converter = (IValueConverter)obj;
					context.PopParent();
					context.ProvideTargetProperty = DrawingImage.DrawingProperty;
					CompiledBindingExtension binding = compiledBindingExtension2.ProvideValue(context);
					context.ProvideTargetProperty = null;
					drawingImage.Bind(drawingProperty, binding);
					context.PopParent();
					image3.Source = source;
					context.PopParent();
					((ISupportInitialize)image4).EndInit();
					Controls children2 = grid.Children;
					TextBlock textBlock;
					TextBlock textBlock2 = (textBlock = new TextBlock());
					((ISupportInitialize)textBlock2).BeginInit();
					children2.Add(textBlock2);
					TextBlock textBlock3;
					TextBlock textBlock4 = (textBlock3 = textBlock);
					context.PushParent(textBlock3);
					TextBlock textBlock5 = textBlock3;
					textBlock5.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
					StyledProperty<string?> textProperty = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EDisplayName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding2 = compiledBindingExtension3.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock5.Bind(textProperty, binding2);
					context.PopParent();
					((ISupportInitialize)textBlock4).EndInit();
					Controls children3 = grid.Children;
					TextBlock textBlock6;
					TextBlock textBlock7 = (textBlock6 = new TextBlock());
					((ISupportInitialize)textBlock7).BeginInit();
					children3.Add(textBlock7);
					TextBlock textBlock8 = (textBlock3 = textBlock6);
					context.PushParent(textBlock3);
					TextBlock textBlock9 = textBlock3;
					textBlock9.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
					StyledProperty<string?> textProperty2 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EModified_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding3 = compiledBindingExtension4.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock9.Bind(textProperty2, binding3);
					context.PopParent();
					((ISupportInitialize)textBlock8).EndInit();
					Controls children4 = grid.Children;
					TextBlock textBlock10;
					TextBlock textBlock11 = (textBlock10 = new TextBlock());
					((ISupportInitialize)textBlock11).BeginInit();
					children4.Add(textBlock11);
					TextBlock textBlock12 = (textBlock3 = textBlock10);
					context.PushParent(textBlock3);
					TextBlock textBlock13 = textBlock3;
					textBlock13.SetValue(Grid.ColumnProperty, 5, BindingPriority.Template);
					StyledProperty<string?> textProperty3 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002EType_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding4 = compiledBindingExtension5.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock13.Bind(textProperty3, binding4);
					context.PopParent();
					((ISupportInitialize)textBlock12).EndInit();
					Controls children5 = grid.Children;
					TextBlock textBlock14;
					TextBlock textBlock15 = (textBlock14 = new TextBlock());
					((ISupportInitialize)textBlock15).BeginInit();
					children5.Add(textBlock15);
					TextBlock textBlock16 = (textBlock3 = textBlock14);
					context.PushParent(textBlock3);
					TextBlock textBlock17 = textBlock3;
					textBlock17.SetValue(Grid.ColumnProperty, 7, BindingPriority.Template);
					textBlock17.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
					StyledProperty<string?> textProperty4 = TextBlock.TextProperty;
					CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension();
					compiledBindingExtension6.Path = new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserItemViewModel_002CAvalonia_002EDialogs_002ESize_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build();
					compiledBindingExtension6.Converter = new FileSizeStringConverter();
					context.ProvideTargetProperty = TextBlock.TextProperty;
					CompiledBindingExtension binding5 = compiledBindingExtension6.ProvideValue(context);
					context.ProvideTargetProperty = null;
					textBlock17.Bind(textProperty4, binding5);
					context.PopParent();
					((ISupportInitialize)textBlock16).EndInit();
					context.PopParent();
					((ISupportInitialize)intermediateRoot).EndInit();
					return intermediateRoot;
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new DockPanel();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				DockPanel dockPanel = (DockPanel)intermediateRoot;
				context.PushParent(dockPanel);
				DockPanel dockPanel2 = dockPanel;
				dockPanel2.SetValue(Layoutable.MarginProperty, new Thickness(5.0, 5.0, 5.0, 5.0), BindingPriority.Template);
				Controls children = dockPanel2.Children;
				DockPanel dockPanel3;
				DockPanel dockPanel4 = (dockPanel3 = new DockPanel());
				((ISupportInitialize)dockPanel4).BeginInit();
				children.Add(dockPanel4);
				DockPanel dockPanel5 = (dockPanel = dockPanel3);
				context.PushParent(dockPanel);
				DockPanel dockPanel6 = dockPanel;
				dockPanel6.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 0.0, 5.0), BindingPriority.Template);
				dockPanel6.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				Controls children2 = dockPanel6.Children;
				ChildFitter childFitter;
				ChildFitter childFitter2 = (childFitter = new ChildFitter());
				((ISupportInitialize)childFitter2).BeginInit();
				children2.Add(childFitter2);
				ChildFitter childFitter3;
				ChildFitter childFitter4 = (childFitter3 = childFitter);
				context.PushParent(childFitter3);
				ChildFitter childFitter5 = childFitter3;
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				CompiledBindingExtension obj = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "Location").Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				CompiledBindingExtension binding = obj.ProvideValue(context);
				context.ProvideTargetProperty = null;
				childFitter5.Bind(widthProperty, binding);
				childFitter5.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				childFitter5.Child = button2;
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				StyledProperty<ICommand?> commandProperty = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("GoUp", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BGoUp_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding2 = compiledBindingExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(commandProperty, binding2);
				Image image;
				Image image2 = (image = new Image());
				((ISupportInitialize)image2).BeginInit();
				button5.Content = image2;
				Image image3;
				Image image4 = (image3 = image);
				context.PushParent(image3);
				Image image5 = image3;
				image5.SetValue(Image.StretchProperty, Stretch.Fill, BindingPriority.Template);
				DrawingImage drawingImage;
				DrawingImage source = (drawingImage = new DrawingImage());
				context.PushParent(drawingImage);
				DrawingImage drawingImage2 = drawingImage;
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("LevelUp");
				context.ProvideTargetProperty = DrawingImage.DrawingProperty;
				object? obj2 = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_250.DynamicSetter_1(drawingImage2, BindingPriority.Template, obj2);
				context.PopParent();
				image5.Source = source;
				context.PopParent();
				((ISupportInitialize)image4).EndInit();
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				context.PopParent();
				((ISupportInitialize)childFitter4).EndInit();
				Controls children3 = dockPanel6.Children;
				ChildFitter childFitter6;
				ChildFitter childFitter7 = (childFitter6 = new ChildFitter());
				((ISupportInitialize)childFitter7).BeginInit();
				children3.Add(childFitter7);
				ChildFitter childFitter8 = (childFitter3 = childFitter6);
				context.PushParent(childFitter3);
				ChildFitter childFitter9 = childFitter3;
				StyledProperty<double> widthProperty2 = Layoutable.WidthProperty;
				CompiledBindingExtension obj3 = new CompiledBindingExtension
				{
					Path = new CompiledBindingPathBuilder().ElementName(context.AvaloniaNameScope, "Location").Property(Visual.BoundsProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002ERect_002CAvalonia_002EBase_002EHeight_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor)
						.Build()
				};
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				CompiledBindingExtension binding3 = obj3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				childFitter9.Bind(widthProperty2, binding3);
				childFitter9.SetValue(DockPanel.DockProperty, Dock.Right, BindingPriority.Template);
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				childFitter9.Child = button7;
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				StyledProperty<ICommand?> commandProperty2 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Refresh", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BRefresh_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding4 = compiledBindingExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(commandProperty2, binding4);
				Image image6;
				Image image7 = (image6 = new Image());
				((ISupportInitialize)image7).BeginInit();
				button9.Content = image7;
				Image image8 = (image3 = image6);
				context.PushParent(image3);
				Image image9 = image3;
				image9.SetValue(Image.StretchProperty, Stretch.Fill, BindingPriority.Template);
				DrawingImage source2 = (drawingImage = new DrawingImage());
				context.PushParent(drawingImage);
				DrawingImage drawingImage3 = drawingImage;
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("Refresh");
				context.ProvideTargetProperty = DrawingImage.DrawingProperty;
				object? obj4 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_250.DynamicSetter_1(drawingImage3, BindingPriority.Template, obj4);
				context.PopParent();
				image9.Source = source2;
				context.PopParent();
				((ISupportInitialize)image8).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)childFitter8).EndInit();
				Controls children4 = dockPanel6.Children;
				TextBox textBox;
				TextBox textBox2 = (textBox = new TextBox());
				((ISupportInitialize)textBox2).BeginInit();
				children4.Add(textBox2);
				TextBox textBox3;
				TextBox textBox4 = (textBox3 = textBox);
				context.PushParent(textBox3);
				TextBox textBox5 = textBox3;
				textBox5.Name = "Location";
				service = textBox5;
				context.AvaloniaNameScope.Register("Location", service);
				textBox5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 5.0, 0.0), BindingPriority.Template);
				StyledProperty<string?> textProperty = TextBox.TextProperty;
				CompiledBindingExtension compiledBindingExtension3 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ELocation_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = TextBox.TextProperty;
				CompiledBindingExtension binding5 = compiledBindingExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox5.Bind(textProperty, binding5);
				List<KeyBinding> keyBindings = textBox5.KeyBindings;
				KeyBinding keyBinding;
				KeyBinding item = (keyBinding = new KeyBinding());
				context.PushParent(keyBinding);
				StyledProperty<ICommand> commandProperty3 = KeyBinding.CommandProperty;
				CompiledBindingExtension compiledBindingExtension4 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("EnterPressed", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BEnterPressed_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = KeyBinding.CommandProperty;
				CompiledBindingExtension binding6 = compiledBindingExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				keyBinding.Bind(commandProperty3, binding6);
				keyBinding.SetValue(KeyBinding.GestureProperty, KeyGesture.Parse("Enter"), BindingPriority.Template);
				context.PopParent();
				keyBindings.Add(item);
				context.PopParent();
				((ISupportInitialize)textBox4).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel5).EndInit();
				Controls children5 = dockPanel2.Children;
				DockPanel dockPanel7;
				DockPanel dockPanel8 = (dockPanel7 = new DockPanel());
				((ISupportInitialize)dockPanel8).BeginInit();
				children5.Add(dockPanel8);
				DockPanel dockPanel9 = (dockPanel = dockPanel7);
				context.PushParent(dockPanel);
				DockPanel dockPanel10 = dockPanel;
				dockPanel10.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 0.0), BindingPriority.Template);
				dockPanel10.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				Controls children6 = dockPanel10.Children;
				StackPanel stackPanel;
				StackPanel stackPanel2 = (stackPanel = new StackPanel());
				((ISupportInitialize)stackPanel2).BeginInit();
				children6.Add(stackPanel2);
				StackPanel stackPanel3;
				StackPanel stackPanel4 = (stackPanel3 = stackPanel);
				context.PushParent(stackPanel3);
				StackPanel stackPanel5 = stackPanel3;
				stackPanel5.SetValue(DockPanel.DockProperty, Dock.Left, BindingPriority.Template);
				stackPanel5.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				Controls children7 = stackPanel5.Children;
				CheckBox checkBox;
				CheckBox checkBox2 = (checkBox = new CheckBox());
				((ISupportInitialize)checkBox2).BeginInit();
				children7.Add(checkBox2);
				CheckBox checkBox3;
				CheckBox checkBox4 = (checkBox3 = checkBox);
				context.PushParent(checkBox3);
				StyledProperty<bool?> isCheckedProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension compiledBindingExtension5 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EShowHiddenFiles_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ToggleButton.IsCheckedProperty;
				CompiledBindingExtension binding7 = compiledBindingExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				checkBox3.Bind(isCheckedProperty, binding7);
				TextBlock textBlock;
				TextBlock textBlock2 = (textBlock = new TextBlock());
				((ISupportInitialize)textBlock2).BeginInit();
				checkBox3.Content = textBlock2;
				textBlock.Inlines.Add("Show hidden files");
				((ISupportInitialize)textBlock).EndInit();
				context.PopParent();
				((ISupportInitialize)checkBox4).EndInit();
				context.PopParent();
				((ISupportInitialize)stackPanel4).EndInit();
				Controls children8 = dockPanel10.Children;
				StackPanel stackPanel6;
				StackPanel stackPanel7 = (stackPanel6 = new StackPanel());
				((ISupportInitialize)stackPanel7).BeginInit();
				children8.Add(stackPanel7);
				StackPanel stackPanel8 = (stackPanel3 = stackPanel6);
				context.PushParent(stackPanel3);
				StackPanel stackPanel9 = stackPanel3;
				stackPanel9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Right, BindingPriority.Template);
				stackPanel9.SetValue(StackPanel.OrientationProperty, Orientation.Horizontal, BindingPriority.Template);
				stackPanel9.SetValue(StackPanel.SpacingProperty, 10.0, BindingPriority.Template);
				Styles styles = stackPanel9.Styles;
				Style style = new Style();
				style.Selector = ((Selector?)null).OfType(typeof(Button));
				Setter setter = new Setter();
				setter.Property = Layoutable.MarginProperty;
				setter.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
				style.Add(setter);
				styles.Add(style);
				Controls children9 = stackPanel9.Children;
				Button button10;
				Button button11 = (button10 = new Button());
				((ISupportInitialize)button11).BeginInit();
				children9.Add(button11);
				Button button12 = (button3 = button10);
				context.PushParent(button3);
				Button button13 = button3;
				StyledProperty<ICommand?> commandProperty4 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension6 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Ok", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BOk_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding8 = compiledBindingExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button13.Bind(commandProperty4, binding8);
				button13.SetValue(Layoutable.MinWidthProperty, 60.0, BindingPriority.Template);
				button13.Content = "OK";
				context.PopParent();
				((ISupportInitialize)button12).EndInit();
				Controls children10 = stackPanel9.Children;
				Button button14;
				Button button15 = (button14 = new Button());
				((ISupportInitialize)button15).BeginInit();
				children10.Add(button15);
				Button button16 = (button3 = button14);
				context.PushParent(button3);
				Button button17 = button3;
				StyledProperty<ICommand?> commandProperty5 = Button.CommandProperty;
				CompiledBindingExtension compiledBindingExtension7 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Command("Cancel", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EDialogs_003AAvalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002BCancel_0_0021CommandExecuteTrampoline, null, null).Build());
				context.ProvideTargetProperty = Button.CommandProperty;
				CompiledBindingExtension binding9 = compiledBindingExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button17.Bind(commandProperty5, binding9);
				button17.SetValue(Layoutable.MinWidthProperty, 60.0, BindingPriority.Template);
				button17.Content = "Cancel";
				context.PopParent();
				((ISupportInitialize)button16).EndInit();
				context.PopParent();
				((ISupportInitialize)stackPanel8).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel9).EndInit();
				Controls children11 = dockPanel2.Children;
				ComboBox comboBox;
				ComboBox comboBox2 = (comboBox = new ComboBox());
				((ISupportInitialize)comboBox2).BeginInit();
				children11.Add(comboBox2);
				ComboBox comboBox3;
				ComboBox comboBox4 = (comboBox3 = comboBox);
				context.PushParent(comboBox3);
				comboBox3.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 0.0), BindingPriority.Template);
				comboBox3.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension8 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EShowFilters_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding10 = compiledBindingExtension8.ProvideValue(context);
				context.ProvideTargetProperty = null;
				comboBox3.Bind(isVisibleProperty, binding10);
				StyledProperty<IEnumerable?> itemsSourceProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension9 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EFilters_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding11 = compiledBindingExtension9.ProvideValue(context);
				context.ProvideTargetProperty = null;
				comboBox3.Bind(itemsSourceProperty, binding11);
				CompiledBindingExtension compiledBindingExtension10 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectedFilter_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = SelectingItemsControl.SelectedItemProperty;
				CompiledBindingExtension compiledBindingExtension11 = compiledBindingExtension10.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_250.DynamicSetter_2(comboBox3, compiledBindingExtension11);
				context.PopParent();
				((ISupportInitialize)comboBox4).EndInit();
				Controls children12 = dockPanel2.Children;
				TextBox textBox6;
				TextBox textBox7 = (textBox6 = new TextBox());
				((ISupportInitialize)textBox7).BeginInit();
				children12.Add(textBox7);
				TextBox textBox8 = (textBox3 = textBox6);
				context.PushParent(textBox3);
				TextBox textBox9 = textBox3;
				textBox9.SetValue(DockPanel.DockProperty, Dock.Bottom, BindingPriority.Template);
				StyledProperty<bool> isVisibleProperty2 = Visual.IsVisibleProperty;
				CompiledBindingExtension compiledBindingExtension12 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Not().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectingFolder_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = Visual.IsVisibleProperty;
				CompiledBindingExtension binding12 = compiledBindingExtension12.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox9.Bind(isVisibleProperty2, binding12);
				StyledProperty<string?> textProperty2 = TextBox.TextProperty;
				CompiledBindingExtension compiledBindingExtension13 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EFileName_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = TextBox.TextProperty;
				CompiledBindingExtension binding13 = compiledBindingExtension13.ProvideValue(context);
				context.ProvideTargetProperty = null;
				textBox9.Bind(textProperty2, binding13);
				textBox9.SetValue(TextBox.WatermarkProperty, "File name", BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)textBox8).EndInit();
				Controls children13 = dockPanel2.Children;
				ListBox listBox;
				ListBox listBox2 = (listBox = new ListBox());
				((ISupportInitialize)listBox2).BeginInit();
				children13.Add(listBox2);
				ListBox listBox3;
				ListBox listBox4 = (listBox3 = listBox);
				context.PushParent(listBox3);
				ListBox listBox5 = listBox3;
				listBox5.Name = "PART_QuickLinks";
				service = listBox5;
				context.AvaloniaNameScope.Register("PART_QuickLinks", service);
				listBox5.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 0.0, 5.0, 5.0), BindingPriority.Template);
				listBox5.SetValue(TemplatedControl.BorderBrushProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				listBox5.SetValue(DockPanel.DockProperty, Dock.Left, BindingPriority.Template);
				listBox5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				StyledProperty<IEnumerable?> itemsSourceProperty2 = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension14 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EQuickLinks_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding14 = compiledBindingExtension14.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox5.Bind(itemsSourceProperty2, binding14);
				DirectProperty<SelectingItemsControl, int> selectedIndexProperty = SelectingItemsControl.SelectedIndexProperty;
				CompiledBindingExtension compiledBindingExtension15 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EQuickLinksSelectedIndex_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = SelectingItemsControl.SelectedIndexProperty;
				CompiledBindingExtension binding15 = compiledBindingExtension15.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox5.Bind(selectedIndexProperty, binding15);
				StyledProperty<IDataTemplate?> itemTemplateProperty = ItemsControl.ItemTemplateProperty;
				DataTemplate dataTemplate;
				DataTemplate value = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_251.Build, context);
				context.PopParent();
				listBox5.SetValue(itemTemplateProperty, value, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)listBox4).EndInit();
				Controls children14 = dockPanel2.Children;
				DockPanel dockPanel11;
				DockPanel dockPanel12 = (dockPanel11 = new DockPanel());
				((ISupportInitialize)dockPanel12).BeginInit();
				children14.Add(dockPanel12);
				DockPanel dockPanel13 = (dockPanel = dockPanel11);
				context.PushParent(dockPanel);
				DockPanel dockPanel14 = dockPanel;
				dockPanel14.SetValue(Grid.IsSharedSizeScopeProperty, value: true, BindingPriority.Template);
				Controls children15 = dockPanel14.Children;
				Grid grid;
				Grid grid2 = (grid = new Grid());
				((ISupportInitialize)grid2).BeginInit();
				children15.Add(grid2);
				Grid grid3;
				Grid grid4 = (grid3 = grid);
				context.PushParent(grid3);
				grid3.SetValue(Layoutable.MarginProperty, new Thickness(15.0, 5.0, 0.0, 0.0), BindingPriority.Template);
				grid3.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				grid3.SetValue(DockPanel.DockProperty, Dock.Top, BindingPriority.Template);
				ColumnDefinitions columnDefinitions = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(20.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition.SetValue(DefinitionBase.SharedSizeGroupProperty, "Icon", BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(400.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition2.SetValue(DefinitionBase.SharedSizeGroupProperty, "Name", BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition3.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				ColumnDefinitions columnDefinitions4 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition4 = new ColumnDefinition();
				columnDefinition4.SetValue(ColumnDefinition.WidthProperty, new GridLength(200.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition4.SetValue(DefinitionBase.SharedSizeGroupProperty, "Modified", BindingPriority.Template);
				columnDefinitions4.Add(columnDefinition4);
				ColumnDefinitions columnDefinitions5 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition5 = new ColumnDefinition();
				columnDefinition5.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition5.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions5.Add(columnDefinition5);
				ColumnDefinitions columnDefinitions6 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition6 = new ColumnDefinition();
				columnDefinition6.SetValue(ColumnDefinition.WidthProperty, new GridLength(150.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition6.SetValue(DefinitionBase.SharedSizeGroupProperty, "Type", BindingPriority.Template);
				columnDefinitions6.Add(columnDefinition6);
				ColumnDefinitions columnDefinitions7 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition7 = new ColumnDefinition();
				columnDefinition7.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition7.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions7.Add(columnDefinition7);
				ColumnDefinitions columnDefinitions8 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition8 = new ColumnDefinition();
				columnDefinition8.SetValue(ColumnDefinition.WidthProperty, new GridLength(200.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition8.SetValue(DefinitionBase.SharedSizeGroupProperty, "Size", BindingPriority.Template);
				columnDefinitions8.Add(columnDefinition8);
				ColumnDefinitions columnDefinitions9 = grid3.ColumnDefinitions;
				ColumnDefinition columnDefinition9 = new ColumnDefinition();
				columnDefinition9.SetValue(ColumnDefinition.WidthProperty, new GridLength(16.0, GridUnitType.Pixel), BindingPriority.Template);
				columnDefinition9.SetValue(DefinitionBase.SharedSizeGroupProperty, "Splitter", BindingPriority.Template);
				columnDefinitions9.Add(columnDefinition9);
				Controls children16 = grid3.Children;
				TextBlock textBlock3;
				TextBlock textBlock4 = (textBlock3 = new TextBlock());
				((ISupportInitialize)textBlock4).BeginInit();
				children16.Add(textBlock4);
				textBlock3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				textBlock3.SetValue(TextBlock.TextProperty, "Name", BindingPriority.Template);
				((ISupportInitialize)textBlock3).EndInit();
				Controls children17 = grid3.Children;
				GridSplitter gridSplitter;
				GridSplitter gridSplitter2 = (gridSplitter = new GridSplitter());
				((ISupportInitialize)gridSplitter2).BeginInit();
				children17.Add(gridSplitter2);
				gridSplitter.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				gridSplitter.SetValue(GridSplitter.ResizeDirectionProperty, GridResizeDirection.Columns, BindingPriority.Template);
				gridSplitter.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)gridSplitter).EndInit();
				Controls children18 = grid3.Children;
				Rectangle rectangle;
				Rectangle rectangle2 = (rectangle = new Rectangle());
				((ISupportInitialize)rectangle2).BeginInit();
				children18.Add(rectangle2);
				Rectangle rectangle3;
				Rectangle rectangle4 = (rectangle3 = rectangle);
				context.PushParent(rectangle3);
				Rectangle rectangle5 = rectangle3;
				rectangle5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				rectangle5.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				rectangle5.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding16 = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle5.Bind(fillProperty, binding16);
				context.PopParent();
				((ISupportInitialize)rectangle4).EndInit();
				Controls children19 = grid3.Children;
				TextBlock textBlock5;
				TextBlock textBlock6 = (textBlock5 = new TextBlock());
				((ISupportInitialize)textBlock6).BeginInit();
				children19.Add(textBlock6);
				textBlock5.SetValue(Grid.ColumnProperty, 3, BindingPriority.Template);
				textBlock5.SetValue(TextBlock.TextProperty, "Date Modified", BindingPriority.Template);
				((ISupportInitialize)textBlock5).EndInit();
				Controls children20 = grid3.Children;
				GridSplitter gridSplitter3;
				GridSplitter gridSplitter4 = (gridSplitter3 = new GridSplitter());
				((ISupportInitialize)gridSplitter4).BeginInit();
				children20.Add(gridSplitter4);
				gridSplitter3.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				gridSplitter3.SetValue(GridSplitter.ResizeDirectionProperty, GridResizeDirection.Columns, BindingPriority.Template);
				gridSplitter3.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)gridSplitter3).EndInit();
				Controls children21 = grid3.Children;
				Rectangle rectangle6;
				Rectangle rectangle7 = (rectangle6 = new Rectangle());
				((ISupportInitialize)rectangle7).BeginInit();
				children21.Add(rectangle7);
				Rectangle rectangle8 = (rectangle3 = rectangle6);
				context.PushParent(rectangle3);
				Rectangle rectangle9 = rectangle3;
				rectangle9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				rectangle9.SetValue(Grid.ColumnProperty, 4, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				rectangle9.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty2 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding17 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle9.Bind(fillProperty2, binding17);
				context.PopParent();
				((ISupportInitialize)rectangle8).EndInit();
				Controls children22 = grid3.Children;
				TextBlock textBlock7;
				TextBlock textBlock8 = (textBlock7 = new TextBlock());
				((ISupportInitialize)textBlock8).BeginInit();
				children22.Add(textBlock8);
				textBlock7.SetValue(Grid.ColumnProperty, 5, BindingPriority.Template);
				textBlock7.SetValue(TextBlock.TextProperty, "Type", BindingPriority.Template);
				((ISupportInitialize)textBlock7).EndInit();
				Controls children23 = grid3.Children;
				GridSplitter gridSplitter5;
				GridSplitter gridSplitter6 = (gridSplitter5 = new GridSplitter());
				((ISupportInitialize)gridSplitter6).BeginInit();
				children23.Add(gridSplitter6);
				gridSplitter5.SetValue(Grid.ColumnProperty, 6, BindingPriority.Template);
				gridSplitter5.SetValue(GridSplitter.ResizeDirectionProperty, GridResizeDirection.Columns, BindingPriority.Template);
				gridSplitter5.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)gridSplitter5).EndInit();
				Controls children24 = grid3.Children;
				Rectangle rectangle10;
				Rectangle rectangle11 = (rectangle10 = new Rectangle());
				((ISupportInitialize)rectangle11).BeginInit();
				children24.Add(rectangle11);
				Rectangle rectangle12 = (rectangle3 = rectangle10);
				context.PushParent(rectangle3);
				Rectangle rectangle13 = rectangle3;
				rectangle13.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				rectangle13.SetValue(Grid.ColumnProperty, 6, BindingPriority.Template);
				rectangle13.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				rectangle13.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty3 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding18 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle13.Bind(fillProperty3, binding18);
				context.PopParent();
				((ISupportInitialize)rectangle12).EndInit();
				Controls children25 = grid3.Children;
				TextBlock textBlock9;
				TextBlock textBlock10 = (textBlock9 = new TextBlock());
				((ISupportInitialize)textBlock10).BeginInit();
				children25.Add(textBlock10);
				textBlock9.SetValue(Grid.ColumnProperty, 7, BindingPriority.Template);
				textBlock9.SetValue(TextBlock.TextProperty, "Size", BindingPriority.Template);
				((ISupportInitialize)textBlock9).EndInit();
				Controls children26 = grid3.Children;
				GridSplitter gridSplitter7;
				GridSplitter gridSplitter8 = (gridSplitter7 = new GridSplitter());
				((ISupportInitialize)gridSplitter8).BeginInit();
				children26.Add(gridSplitter8);
				gridSplitter7.SetValue(Grid.ColumnProperty, 8, BindingPriority.Template);
				gridSplitter7.SetValue(GridSplitter.ResizeDirectionProperty, GridResizeDirection.Columns, BindingPriority.Template);
				gridSplitter7.SetValue(TemplatedControl.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				((ISupportInitialize)gridSplitter7).EndInit();
				Controls children27 = grid3.Children;
				Rectangle rectangle14;
				Rectangle rectangle15 = (rectangle14 = new Rectangle());
				((ISupportInitialize)rectangle15).BeginInit();
				children27.Add(rectangle15);
				Rectangle rectangle16 = (rectangle3 = rectangle14);
				context.PushParent(rectangle3);
				Rectangle rectangle17 = rectangle3;
				rectangle17.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left, BindingPriority.Template);
				rectangle17.SetValue(Grid.ColumnProperty, 8, BindingPriority.Template);
				rectangle17.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				rectangle17.SetValue(Layoutable.WidthProperty, 1.0, BindingPriority.Template);
				StyledProperty<IBrush?> fillProperty4 = Shape.FillProperty;
				DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeControlMidBrush");
				context.ProvideTargetProperty = Shape.FillProperty;
				IBinding binding19 = dynamicResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				rectangle17.Bind(fillProperty4, binding19);
				context.PopParent();
				((ISupportInitialize)rectangle16).EndInit();
				context.PopParent();
				((ISupportInitialize)grid4).EndInit();
				Controls children28 = dockPanel14.Children;
				ListBox listBox6;
				ListBox listBox7 = (listBox6 = new ListBox());
				((ISupportInitialize)listBox7).BeginInit();
				children28.Add(listBox7);
				ListBox listBox8 = (listBox3 = listBox6);
				context.PushParent(listBox3);
				ListBox listBox9 = listBox3;
				listBox9.Name = "PART_Files";
				service = listBox9;
				context.AvaloniaNameScope.Register("PART_Files", service);
				listBox9.SetValue(Layoutable.MarginProperty, new Thickness(0.0, 5.0, 0.0, 5.0), BindingPriority.Template);
				StyledProperty<IEnumerable?> itemsSourceProperty3 = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension compiledBindingExtension16 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002EItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ItemsControl.ItemsSourceProperty;
				CompiledBindingExtension binding20 = compiledBindingExtension16.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(itemsSourceProperty3, binding20);
				listBox9.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, ScrollBarVisibility.Disabled, BindingPriority.Template);
				DirectProperty<SelectingItemsControl, IList?> selectedItemsProperty = ListBox.SelectedItemsProperty;
				CompiledBindingExtension compiledBindingExtension17 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectedItems_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ListBox.SelectedItemsProperty;
				CompiledBindingExtension binding21 = compiledBindingExtension17.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(selectedItemsProperty, binding21);
				StyledProperty<SelectionMode> selectionModeProperty = ListBox.SelectionModeProperty;
				CompiledBindingExtension compiledBindingExtension18 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Property(CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EDialogs_002EInternal_002EManagedFileChooserViewModel_002CAvalonia_002EDialogs_002ESelectionMode_0021Property(), PropertyInfoAccessorFactory.CreateInpcPropertyAccessor).Build());
				context.ProvideTargetProperty = ListBox.SelectionModeProperty;
				CompiledBindingExtension binding22 = compiledBindingExtension18.ProvideValue(context);
				context.ProvideTargetProperty = null;
				listBox9.Bind(selectionModeProperty, binding22);
				StyledProperty<IDataTemplate?> itemTemplateProperty2 = ItemsControl.ItemTemplateProperty;
				DataTemplate value2 = (dataTemplate = new DataTemplate());
				context.PushParent(dataTemplate);
				dataTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_252.Build, context);
				context.PopParent();
				listBox9.SetValue(itemTemplateProperty2, value2, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)listBox8).EndInit();
				context.PopParent();
				((ISupportInitialize)dockPanel13).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(ManagedFileChooser);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			setter.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_249.Build, context);
			context.PopParent();
			setter.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_253
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Left = true;
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_254
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Right = true;
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_255
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MarginMultiplierConverter marginMultiplierConverter = new MarginMultiplierConverter();
			marginMultiplierConverter.Top = true;
			marginMultiplierConverter.Bottom = true;
			marginMultiplierConverter.Indent = 1.0;
			return marginMultiplierConverter;
		}
	}

	private class XamlClosure_256
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopLeft | Corners.TopRight)
			};
		}
	}

	private class XamlClosure_257
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopRight | Corners.BottomRight)
			};
		}
	}

	private class XamlClosure_258
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.BottomLeft | Corners.BottomRight)
			};
		}
	}

	private class XamlClosure_259
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			return new CornerRadiusFilterConverter
			{
				Filter = (Corners.TopLeft | Corners.BottomLeft)
			};
		}
	}

	private class XamlClosure_260
	{
		private class XamlClosure_261
		{
			private class DynamicSetters_262
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				DynamicSetters_262.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).SetValue(ContentPresenter.RecognizesAccessKeyProperty, value: true, BindingPriority.Template);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(Button);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_261.Build, context)
			};
			controlTheme.Add(setter);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			Style style3 = style;
			style3.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter2;
			Setter setter3 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter4 = setter2;
			setter4.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter4.Value = value;
			context.PopParent();
			style3.Add(setter3);
			Setter setter5 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter6 = setter2;
			setter6.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeBorderMidColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style3.Add(setter5);
			Setter setter7 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter8 = setter2;
			setter8.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter8.Value = value3;
			context.PopParent();
			style3.Add(setter7);
			context.PopParent();
			controlTheme.Add(style2);
			Style style4 = (style = new Style());
			context.PushParent(style);
			Style style5 = style;
			style5.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter9 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter10 = setter2;
			setter10.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter10.Value = value4;
			context.PopParent();
			style5.Add(setter9);
			Setter setter11 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter12 = setter2;
			setter12.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("ThemeBorderLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter12.Value = value5;
			context.PopParent();
			style5.Add(setter11);
			Setter setter13 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter14 = setter2;
			setter14.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension6 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value6 = dynamicResourceExtension6.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter14.Value = value6;
			context.PopParent();
			style5.Add(setter13);
			context.PopParent();
			controlTheme.Add(style4);
			Style style6 = (style = new Style());
			context.PushParent(style);
			Style style7 = style;
			style7.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter15 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter16 = setter2;
			setter16.Property = ContentPresenter.BackgroundProperty;
			SolidColorBrush solidColorBrush;
			SolidColorBrush value7 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			SolidColorBrush target = solidColorBrush;
			StyledProperty<Color> colorProperty = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension7 = new DynamicResourceExtension("ThemeControlMidColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding = dynamicResourceExtension7.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target.Bind(colorProperty, binding);
			StyledProperty<double> opacityProperty = Brush.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension8 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = Brush.OpacityProperty;
			IBinding binding2 = dynamicResourceExtension8.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target.Bind(opacityProperty, binding2);
			context.PopParent();
			setter16.Value = value7;
			context.PopParent();
			style7.Add(setter15);
			Setter setter17 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter18 = setter2;
			setter18.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension9 = new DynamicResourceExtension("ThemeBorderLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value8 = dynamicResourceExtension9.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter18.Value = value8;
			context.PopParent();
			style7.Add(setter17);
			Setter setter19 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter20 = setter2;
			setter20.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension10 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value9 = dynamicResourceExtension10.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter20.Value = value9;
			context.PopParent();
			style7.Add(setter19);
			context.PopParent();
			controlTheme.Add(style6);
			Style style8 = (style = new Style());
			context.PushParent(style);
			Style style9 = style;
			style9.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"flyout-open").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter21 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter22 = setter2;
			setter22.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension11 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value10 = dynamicResourceExtension11.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter22.Value = value10;
			context.PopParent();
			style9.Add(setter21);
			Setter setter23 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter24 = setter2;
			setter24.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension12 = new DynamicResourceExtension("ThemeBorderLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value11 = dynamicResourceExtension12.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter24.Value = value11;
			context.PopParent();
			style9.Add(setter23);
			Setter setter25 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter26 = setter2;
			setter26.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension13 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value12 = dynamicResourceExtension13.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter26.Value = value12;
			context.PopParent();
			style9.Add(setter25);
			context.PopParent();
			controlTheme.Add(style8);
			Style style10 = (style = new Style());
			context.PushParent(style);
			Style style11 = style;
			style11.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"checked");
			Style style12 = (style = new Style());
			context.PushParent(style);
			Style style13 = style;
			style13.Selector = ((Selector?)null).Nesting().Template().OfType(typeof(ContentPresenter));
			Setter setter27 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter28 = setter2;
			setter28.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension14 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value13 = dynamicResourceExtension14.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter28.Value = value13;
			context.PopParent();
			style13.Add(setter27);
			Setter setter29 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter30 = setter2;
			setter30.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension15 = new DynamicResourceExtension("ThemeBorderMidColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value14 = dynamicResourceExtension15.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter30.Value = value14;
			context.PopParent();
			style13.Add(setter29);
			Setter setter31 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter32 = setter2;
			setter32.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension16 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value15 = dynamicResourceExtension16.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter32.Value = value15;
			context.PopParent();
			style13.Add(setter31);
			context.PopParent();
			style11.Add(style12);
			Style style14 = (style = new Style());
			context.PushParent(style);
			Style style15 = style;
			style15.Selector = ((Selector?)null).Nesting().Class(":pointerover").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter33 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter34 = setter2;
			setter34.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension17 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value16 = dynamicResourceExtension17.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter34.Value = value16;
			context.PopParent();
			style15.Add(setter33);
			Setter setter35 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter36 = setter2;
			setter36.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension18 = new DynamicResourceExtension("ThemeBorderMidColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value17 = dynamicResourceExtension18.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter36.Value = value17;
			context.PopParent();
			style15.Add(setter35);
			Setter setter37 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter38 = setter2;
			setter38.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension19 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value18 = dynamicResourceExtension19.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter38.Value = value18;
			context.PopParent();
			style15.Add(setter37);
			context.PopParent();
			style11.Add(style14);
			Style style16 = (style = new Style());
			context.PushParent(style);
			Style style17 = style;
			style17.Selector = ((Selector?)null).Nesting().Class(":pressed").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter39 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter40 = setter2;
			setter40.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension20 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value19 = dynamicResourceExtension20.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter40.Value = value19;
			context.PopParent();
			style17.Add(setter39);
			Setter setter41 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter42 = setter2;
			setter42.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension21 = new DynamicResourceExtension("ThemeControlHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value20 = dynamicResourceExtension21.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter42.Value = value20;
			context.PopParent();
			style17.Add(setter41);
			Setter setter43 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter44 = setter2;
			setter44.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension22 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value21 = dynamicResourceExtension22.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter44.Value = value21;
			context.PopParent();
			style17.Add(setter43);
			context.PopParent();
			style11.Add(style16);
			Style style18 = (style = new Style());
			context.PushParent(style);
			Style style19 = style;
			style19.Selector = ((Selector?)null).Nesting().Class(":disabled").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter45 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter46 = setter2;
			setter46.Property = ContentPresenter.BackgroundProperty;
			SolidColorBrush value22 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			SolidColorBrush target2 = solidColorBrush;
			StyledProperty<Color> colorProperty2 = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension23 = new DynamicResourceExtension("ThemeControlHighColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding3 = dynamicResourceExtension23.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target2.Bind(colorProperty2, binding3);
			StyledProperty<double> opacityProperty2 = Brush.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension24 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = Brush.OpacityProperty;
			IBinding binding4 = dynamicResourceExtension24.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target2.Bind(opacityProperty2, binding4);
			context.PopParent();
			setter46.Value = value22;
			context.PopParent();
			style19.Add(setter45);
			Setter setter47 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter48 = setter2;
			setter48.Property = ContentPresenter.BorderBrushProperty;
			SolidColorBrush value23 = (solidColorBrush = new SolidColorBrush());
			context.PushParent(solidColorBrush);
			SolidColorBrush target3 = solidColorBrush;
			StyledProperty<Color> colorProperty3 = SolidColorBrush.ColorProperty;
			DynamicResourceExtension dynamicResourceExtension25 = new DynamicResourceExtension("ThemeControlMidColor");
			context.ProvideTargetProperty = SolidColorBrush.ColorProperty;
			IBinding binding5 = dynamicResourceExtension25.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target3.Bind(colorProperty3, binding5);
			StyledProperty<double> opacityProperty3 = Brush.OpacityProperty;
			DynamicResourceExtension dynamicResourceExtension26 = new DynamicResourceExtension("ThemeDisabledOpacity");
			context.ProvideTargetProperty = Brush.OpacityProperty;
			IBinding binding6 = dynamicResourceExtension26.ProvideValue(context);
			context.ProvideTargetProperty = null;
			target3.Bind(opacityProperty3, binding6);
			context.PopParent();
			setter48.Value = value23;
			context.PopParent();
			style19.Add(setter47);
			Setter setter49 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter50 = setter2;
			setter50.Property = TextElement.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension27 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value24 = dynamicResourceExtension27.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter50.Value = value24;
			context.PopParent();
			style19.Add(setter49);
			context.PopParent();
			style11.Add(style18);
			context.PopParent();
			controlTheme.Add(style10);
			Style style20 = (style = new Style());
			context.PushParent(style);
			Style style21 = style;
			style21.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)Control.TagProperty, (object?)"checked-flyout-open").Template()
				.OfType(typeof(ContentPresenter));
			Setter setter51 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter52 = setter2;
			setter52.Property = ContentPresenter.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension28 = new DynamicResourceExtension("ThemeBorderHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value25 = dynamicResourceExtension28.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter52.Value = value25;
			context.PopParent();
			style21.Add(setter51);
			Setter setter53 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter54 = setter2;
			setter54.Property = ContentPresenter.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension29 = new DynamicResourceExtension("ThemeControlHighColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value26 = dynamicResourceExtension29.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter54.Value = value26;
			context.PopParent();
			style21.Add(setter53);
			Setter setter55 = (setter2 = new Setter());
			context.PushParent(setter2);
			Setter setter56 = setter2;
			setter56.Property = ContentPresenter.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension30 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value27 = dynamicResourceExtension30.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter56.Value = value27;
			context.PopParent();
			style21.Add(setter55);
			context.PopParent();
			controlTheme.Add(style20);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_263
	{
		private class XamlClosure_264
		{
			private class DynamicSetters_265
			{
				public static void DynamicSetter_1(StyledElement P_0, BindingPriority P_1, object P_2)
				{
					if (P_2 is IBinding)
					{
						IBinding binding = (IBinding)P_2;
						P_0.Bind(StyledElement.ThemeProperty, binding);
						return;
					}
					if (P_2 is ControlTheme)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					if (P_2 == null)
					{
						ControlTheme value = (ControlTheme)P_2;
						int priority = (int)P_1;
						P_0.SetValue(StyledElement.ThemeProperty, value, (BindingPriority)priority);
						return;
					}
					throw new InvalidCastException();
				}

				public static void DynamicSetter_2(ContentControl P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentControl.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentControl.ContentProperty, value, (BindingPriority)priority);
					}
				}

				public static void DynamicSetter_3(Button P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(Button.CommandParameterProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(Button.CommandParameterProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Styles)service;
					}
				}
				context.IntermediateRoot = new Grid();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				Grid grid = (Grid)intermediateRoot;
				context.PushParent(grid);
				ColumnDefinitions columnDefinitions = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition = new ColumnDefinition();
				columnDefinition.SetValue(ColumnDefinition.WidthProperty, new GridLength(1.0, GridUnitType.Star), BindingPriority.Template);
				columnDefinitions.Add(columnDefinition);
				ColumnDefinitions columnDefinitions2 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition2 = new ColumnDefinition();
				columnDefinition2.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions2.Add(columnDefinition2);
				ColumnDefinitions columnDefinitions3 = grid.ColumnDefinitions;
				ColumnDefinition columnDefinition3 = new ColumnDefinition();
				columnDefinition3.SetValue(ColumnDefinition.WidthProperty, new GridLength(0.0, GridUnitType.Auto), BindingPriority.Template);
				columnDefinitions3.Add(columnDefinition3);
				Controls children = grid.Children;
				Button button;
				Button button2 = (button = new Button());
				((ISupportInitialize)button2).BeginInit();
				children.Add(button2);
				Button button3;
				Button button4 = (button3 = button);
				context.PushParent(button3);
				Button button5 = button3;
				button5.Name = "PART_PrimaryButton";
				service = button5;
				context.AvaloniaNameScope.Register("PART_PrimaryButton", service);
				button5.SetValue(Grid.ColumnProperty, 0, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleSplitButtonComponent");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj = staticResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(button5, BindingPriority.Template, obj);
				StyledProperty<double> minWidthProperty = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("SplitButtonPrimaryButtonSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding = dynamicResourceExtension.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button5.Bind(minWidthProperty, binding);
				button5.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button5.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding;
				TemplateBinding templateBinding2 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding3 = templateBinding;
				StaticResourceExtension staticResourceExtension2 = new StaticResourceExtension("PrimaryButtonBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj2 = staticResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding3.Converter = (IValueConverter)obj2;
				context.PopParent();
				button5.Bind(borderThicknessProperty, templateBinding2.ProvideValue());
				button5.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				DynamicSetters_265.DynamicSetter_2(button5, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				button5.Bind(ContentControl.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				button5.Bind(Button.CommandProperty, new TemplateBinding(SplitButton.CommandProperty).ProvideValue());
				DynamicSetters_265.DynamicSetter_3(button5, BindingPriority.Template, new TemplateBinding(SplitButton.CommandParameterProperty).ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty = TemplatedControl.CornerRadiusProperty;
				TemplateBinding templateBinding4 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding5 = templateBinding;
				StaticResourceExtension staticResourceExtension3 = new StaticResourceExtension("LeftCornerRadiusFilterConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj3 = staticResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding5.Converter = (IValueConverter)obj3;
				context.PopParent();
				button5.Bind(cornerRadiusProperty, templateBinding4.ProvideValue());
				button5.Bind(TemplatedControl.FontFamilyProperty, new TemplateBinding(TemplatedControl.FontFamilyProperty).ProvideValue());
				button5.Bind(TemplatedControl.FontSizeProperty, new TemplateBinding(TemplatedControl.FontSizeProperty).ProvideValue());
				button5.Bind(TemplatedControl.FontWeightProperty, new TemplateBinding(TemplatedControl.FontWeightProperty).ProvideValue());
				button5.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button5.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button5.Bind(ContentControl.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				button5.Bind(ContentControl.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				button5.Bind(TemplatedControl.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				button5.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				button5.SetValue(KeyboardNavigation.IsTabStopProperty, value: false, BindingPriority.Template);
				context.PopParent();
				((ISupportInitialize)button4).EndInit();
				Controls children2 = grid.Children;
				Border border;
				Border border2 = (border = new Border());
				((ISupportInitialize)border2).BeginInit();
				children2.Add(border2);
				Border border3;
				Border border4 = (border3 = border);
				context.PushParent(border3);
				border3.Name = "SeparatorBorder";
				service = border3;
				context.AvaloniaNameScope.Register("SeparatorBorder", service);
				border3.SetValue(Grid.ColumnProperty, 1, BindingPriority.Template);
				border3.SetValue(Border.BackgroundProperty, new ImmutableSolidColorBrush(16777215u), BindingPriority.Template);
				StyledProperty<double> widthProperty = Layoutable.WidthProperty;
				DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("SplitButtonSeparatorWidth");
				context.ProvideTargetProperty = Layoutable.WidthProperty;
				IBinding binding2 = dynamicResourceExtension2.ProvideValue(context);
				context.ProvideTargetProperty = null;
				border3.Bind(widthProperty, binding2);
				StyledProperty<Thickness> borderThicknessProperty2 = Border.BorderThicknessProperty;
				TemplateBinding templateBinding6 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding7 = templateBinding;
				StaticResourceExtension staticResourceExtension4 = new StaticResourceExtension("SeparatorBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj4 = staticResourceExtension4.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding7.Converter = (IValueConverter)obj4;
				context.PopParent();
				border3.Bind(borderThicknessProperty2, templateBinding6.ProvideValue());
				border3.Bind(Border.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				context.PopParent();
				((ISupportInitialize)border4).EndInit();
				Controls children3 = grid.Children;
				Button button6;
				Button button7 = (button6 = new Button());
				((ISupportInitialize)button7).BeginInit();
				children3.Add(button7);
				Button button8 = (button3 = button6);
				context.PushParent(button3);
				Button button9 = button3;
				button9.Name = "PART_SecondaryButton";
				service = button9;
				context.AvaloniaNameScope.Register("PART_SecondaryButton", service);
				button9.SetValue(Grid.ColumnProperty, 2, BindingPriority.Template);
				StaticResourceExtension staticResourceExtension5 = new StaticResourceExtension("SimpleSplitButtonComponent");
				context.ProvideTargetProperty = StyledElement.ThemeProperty;
				object? obj5 = staticResourceExtension5.ProvideValue(context);
				context.ProvideTargetProperty = null;
				DynamicSetters_265.DynamicSetter_1(button9, BindingPriority.Template, obj5);
				StyledProperty<double> minWidthProperty2 = Layoutable.MinWidthProperty;
				DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("SplitButtonSecondaryButtonSize");
				context.ProvideTargetProperty = Layoutable.MinWidthProperty;
				IBinding binding3 = dynamicResourceExtension3.ProvideValue(context);
				context.ProvideTargetProperty = null;
				button9.Bind(minWidthProperty2, binding3);
				button9.Bind(TemplatedControl.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				button9.Bind(TemplatedControl.ForegroundProperty, new TemplateBinding(TemplatedControl.ForegroundProperty).ProvideValue());
				button9.Bind(TemplatedControl.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				StyledProperty<Thickness> borderThicknessProperty3 = TemplatedControl.BorderThicknessProperty;
				TemplateBinding templateBinding8 = (templateBinding = new TemplateBinding(TemplatedControl.BorderThicknessProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding9 = templateBinding;
				StaticResourceExtension staticResourceExtension6 = new StaticResourceExtension("SecondaryButtonBorderMultiplier");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj6 = staticResourceExtension6.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding9.Converter = (IValueConverter)obj6;
				context.PopParent();
				button9.Bind(borderThicknessProperty3, templateBinding8.ProvideValue());
				StyledProperty<CornerRadius> cornerRadiusProperty2 = TemplatedControl.CornerRadiusProperty;
				TemplateBinding templateBinding10 = (templateBinding = new TemplateBinding(TemplatedControl.CornerRadiusProperty));
				context.PushParent(templateBinding);
				TemplateBinding templateBinding11 = templateBinding;
				StaticResourceExtension staticResourceExtension7 = new StaticResourceExtension("RightCornerRadiusFilterConverter");
				context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EData_002ETemplateBinding_002CAvalonia_002EBase_002EConverter_0021Property();
				object? obj7 = staticResourceExtension7.ProvideValue(context);
				context.ProvideTargetProperty = null;
				templateBinding11.Converter = (IValueConverter)obj7;
				context.PopParent();
				button9.Bind(cornerRadiusProperty2, templateBinding10.ProvideValue());
				button9.SetValue(TemplatedControl.PaddingProperty, new Thickness(0.0, 0.0, 0.0, 0.0), BindingPriority.Template);
				button9.SetValue(ContentControl.HorizontalContentAlignmentProperty, HorizontalAlignment.Center, BindingPriority.Template);
				button9.SetValue(ContentControl.VerticalContentAlignmentProperty, VerticalAlignment.Center, BindingPriority.Template);
				button9.SetValue(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(Layoutable.VerticalAlignmentProperty, VerticalAlignment.Stretch, BindingPriority.Template);
				button9.SetValue(InputElement.FocusableProperty, value: false, BindingPriority.Template);
				button9.SetValue(KeyboardNavigation.IsTabStopProperty, value: false, BindingPriority.Template);
				PathIcon pathIcon;
				PathIcon pathIcon2 = (pathIcon = new PathIcon());
				((ISupportInitialize)pathIcon2).BeginInit();
				button9.Content = pathIcon2;
				pathIcon.SetValue(Layoutable.HeightProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(Layoutable.WidthProperty, 12.0, BindingPriority.Template);
				pathIcon.SetValue(PathIcon.DataProperty, Geometry.Parse("M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"), BindingPriority.Template);
				((ISupportInitialize)pathIcon).EndInit();
				context.PopParent();
				((ISupportInitialize)button8).EndInit();
				context.PopParent();
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SplitButton);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = TemplatedControl.BackgroundProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("ThemeControlMidColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Setter setter4 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter5 = setter;
			setter5.Property = TemplatedControl.ForegroundProperty;
			DynamicResourceExtension dynamicResourceExtension2 = new DynamicResourceExtension("ThemeForegroundColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value2 = dynamicResourceExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter5.Value = value2;
			context.PopParent();
			controlTheme.Add(setter4);
			Setter setter6 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter7 = setter;
			setter7.Property = TemplatedControl.BorderBrushProperty;
			DynamicResourceExtension dynamicResourceExtension3 = new DynamicResourceExtension("ThemeBorderLowColor");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value3 = dynamicResourceExtension3.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter7.Value = value3;
			context.PopParent();
			controlTheme.Add(setter6);
			Setter setter8 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter9 = setter;
			setter9.Property = TemplatedControl.BorderThicknessProperty;
			DynamicResourceExtension dynamicResourceExtension4 = new DynamicResourceExtension("SplitButtonBorderThemeThickness");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value4 = dynamicResourceExtension4.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter9.Value = value4;
			context.PopParent();
			controlTheme.Add(setter8);
			Setter setter10 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter11 = setter;
			setter11.Property = Layoutable.MinHeightProperty;
			DynamicResourceExtension dynamicResourceExtension5 = new DynamicResourceExtension("SplitButtonMinHeight");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value5 = dynamicResourceExtension5.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter11.Value = value5;
			context.PopParent();
			controlTheme.Add(setter10);
			Setter setter12 = new Setter();
			setter12.Property = Layoutable.HorizontalAlignmentProperty;
			setter12.Value = HorizontalAlignment.Left;
			controlTheme.Add(setter12);
			Setter setter13 = new Setter();
			setter13.Property = Layoutable.VerticalAlignmentProperty;
			setter13.Value = VerticalAlignment.Center;
			controlTheme.Add(setter13);
			Setter setter14 = new Setter();
			setter14.Property = ContentControl.HorizontalContentAlignmentProperty;
			setter14.Value = HorizontalAlignment.Stretch;
			controlTheme.Add(setter14);
			Setter setter15 = new Setter();
			setter15.Property = ContentControl.VerticalContentAlignmentProperty;
			setter15.Value = VerticalAlignment.Center;
			controlTheme.Add(setter15);
			Setter setter16 = new Setter();
			setter16.Property = KeyboardNavigation.IsTabStopProperty;
			setter16.Value = true;
			controlTheme.Add(setter16);
			Setter setter17 = new Setter();
			setter17.Property = InputElement.FocusableProperty;
			setter17.Value = true;
			controlTheme.Add(setter17);
			Setter setter18 = new Setter();
			setter18.Property = TemplatedControl.PaddingProperty;
			setter18.Value = new Thickness(4.0, 4.0, 4.0, 4.0);
			controlTheme.Add(setter18);
			Setter setter19 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter20 = setter;
			setter20.Property = TemplatedControl.TemplateProperty;
			ControlTemplate controlTemplate;
			ControlTemplate value6 = (controlTemplate = new ControlTemplate());
			context.PushParent(controlTemplate);
			controlTemplate.Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_264.Build, context);
			context.PopParent();
			setter20.Value = value6;
			context.PopParent();
			controlTheme.Add(setter19);
			Style style = new Style();
			style.Selector = ((Selector?)null).Nesting().Class(":flyout-open").Template()
				.OfType(typeof(Button));
			Setter setter21 = new Setter();
			setter21.Property = Control.TagProperty;
			setter21.Value = "flyout-open";
			style.Add(setter21);
			controlTheme.Add(style);
			Style style2 = new Style();
			style2.Selector = ((Selector?)null).Nesting().Class(":checked").Template()
				.OfType(typeof(Button));
			Setter setter22 = new Setter();
			setter22.Property = Control.TagProperty;
			setter22.Value = "checked";
			style2.Add(setter22);
			controlTheme.Add(style2);
			Style style3 = new Style();
			style3.Selector = ((Selector?)null).Nesting().Class(":checked").Class(":flyout-open")
				.Template()
				.OfType(typeof(Button));
			Setter setter23 = new Setter();
			setter23.Property = Control.TagProperty;
			setter23.Value = "checked-flyout-open";
			style3.Add(setter23);
			controlTheme.Add(style3);
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_266
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			object service;
			if (P_0 != null)
			{
				service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			MenuFlyout menuFlyout;
			MenuFlyout result = (menuFlyout = new MenuFlyout());
			context.PushParent(menuFlyout);
			menuFlyout.Placement = PlacementMode.Bottom;
			ItemCollection items = menuFlyout.Items;
			MenuItem menuItem;
			MenuItem menuItem2 = (menuItem = new MenuItem());
			((ISupportInitialize)menuItem2).BeginInit();
			items.Add(menuItem2);
			MenuItem menuItem3;
			MenuItem menuItem4 = (menuItem3 = menuItem);
			context.PushParent(menuItem3);
			menuItem3.Name = "SelectableTextBlockContextFlyoutCopyItem";
			service = menuItem3;
			context.AvaloniaNameScope.Register("SelectableTextBlockContextFlyoutCopyItem", service);
			menuItem3.Header = "Copy";
			StyledProperty<ICommand?> commandProperty = MenuItem.CommandProperty;
			CompiledBindingExtension compiledBindingExtension = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(SelectableTextBlock), 0).Command("Copy", CompiledAvaloniaXaml.XamlIlTrampolines.Avalonia_002EControls_003AAvalonia_002EControls_002ESelectableTextBlock_002BCopy_0_0021CommandExecuteTrampoline, null, null).Build());
			context.ProvideTargetProperty = MenuItem.CommandProperty;
			CompiledBindingExtension binding = compiledBindingExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem3.Bind(commandProperty, binding);
			StyledProperty<bool> isEnabledProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension compiledBindingExtension2 = new CompiledBindingExtension(new CompiledBindingPathBuilder().Ancestor(typeof(SelectableTextBlock), 0).Property(SelectableTextBlock.CanCopyProperty, PropertyInfoAccessorFactory.CreateAvaloniaPropertyAccessor).Build());
			context.ProvideTargetProperty = InputElement.IsEnabledProperty;
			CompiledBindingExtension binding2 = compiledBindingExtension2.ProvideValue(context);
			context.ProvideTargetProperty = null;
			menuItem3.Bind(isEnabledProperty, binding2);
			menuItem3.InputGesture = TextBox.CopyGesture;
			context.PopParent();
			((ISupportInitialize)menuItem4).EndInit();
			context.PopParent();
			return result;
		}
	}

	private class XamlClosure_267
	{
		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Styles)service;
				}
			}
			ControlTheme controlTheme;
			ControlTheme result = (controlTheme = new ControlTheme());
			context.PushParent(controlTheme);
			controlTheme.TargetType = typeof(SelectableTextBlock);
			Setter setter;
			Setter setter2 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter3 = setter;
			setter3.Property = SelectableTextBlock.SelectionBrushProperty;
			DynamicResourceExtension dynamicResourceExtension = new DynamicResourceExtension("HighlightBrush");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			IBinding value = dynamicResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter3.Value = value;
			context.PopParent();
			controlTheme.Add(setter2);
			Style style;
			Style style2 = (style = new Style());
			context.PushParent(style);
			style.Selector = ((Selector?)null).Nesting().PropertyEquals((AvaloniaProperty)InputElement.IsEnabledProperty, (object?)true);
			Setter setter4 = new Setter();
			setter4.Property = InputElement.CursorProperty;
			setter4.Value = Cursor.Parse("IBeam");
			style.Add(setter4);
			Setter setter5 = (setter = new Setter());
			context.PushParent(setter);
			Setter setter6 = setter;
			setter6.Property = Control.ContextFlyoutProperty;
			StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SelectableTextBlockContextFlyout");
			context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
			object? value2 = staticResourceExtension.ProvideValue(context);
			context.ProvideTargetProperty = null;
			setter6.Value = value2;
			context.PopParent();
			style.Add(setter5);
			context.PopParent();
			controlTheme.Add(style2);
			context.PopParent();
			return result;
		}
	}

	public class NamespaceInfo_003A_002FControls_002FUserControl_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Simple", "Avalonia.Themes.Simple")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FControls_002FUserControl_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FControls_002FUserControl_002Examl();
		}
	}

	private class XamlClosure_268
	{
		private class XamlClosure_269
		{
			private class DynamicSetters_270
			{
				public static void DynamicSetter_1(ContentPresenter P_0, BindingPriority P_1, IBinding P_2)
				{
					if (P_2 != null)
					{
						IBinding binding = P_2;
						P_0.Bind(ContentPresenter.ContentProperty, binding);
					}
					else
					{
						object value = P_2;
						int priority = (int)P_1;
						P_0.SetValue(ContentPresenter.ContentProperty, value, (BindingPriority)priority);
					}
				}
			}

			public static object Build(IServiceProvider P_0)
			{
				CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/UserControl.xaml");
				object service;
				if (P_0 != null)
				{
					service = P_0.GetService(typeof(IRootObjectProvider));
					if (service != null)
					{
						service = ((IRootObjectProvider)service).RootObject;
						context.RootObject = (Style)service;
					}
				}
				context.IntermediateRoot = new ContentPresenter();
				object intermediateRoot = context.IntermediateRoot;
				((ISupportInitialize)intermediateRoot).BeginInit();
				((StyledElement)intermediateRoot).Name = "PART_ContentPresenter";
				service = intermediateRoot;
				context.AvaloniaNameScope.Register("PART_ContentPresenter", service);
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.PaddingProperty, new TemplateBinding(TemplatedControl.PaddingProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.HorizontalContentAlignmentProperty, new TemplateBinding(ContentControl.HorizontalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.VerticalContentAlignmentProperty, new TemplateBinding(ContentControl.VerticalContentAlignmentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BackgroundProperty, new TemplateBinding(TemplatedControl.BackgroundProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderBrushProperty, new TemplateBinding(TemplatedControl.BorderBrushProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.BorderThicknessProperty, new TemplateBinding(TemplatedControl.BorderThicknessProperty).ProvideValue());
				DynamicSetters_270.DynamicSetter_1((ContentPresenter)intermediateRoot, BindingPriority.Template, new TemplateBinding(ContentControl.ContentProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.ContentTemplateProperty, new TemplateBinding(ContentControl.ContentTemplateProperty).ProvideValue());
				((AvaloniaObject)intermediateRoot).Bind(ContentPresenter.CornerRadiusProperty, new TemplateBinding(TemplatedControl.CornerRadiusProperty).ProvideValue());
				((ISupportInitialize)intermediateRoot).EndInit();
				return intermediateRoot;
			}
		}

		public static object Build(IServiceProvider P_0)
		{
			CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/UserControl.xaml");
			if (P_0 != null)
			{
				object service = P_0.GetService(typeof(IRootObjectProvider));
				if (service != null)
				{
					service = ((IRootObjectProvider)service).RootObject;
					context.RootObject = (Style)service;
				}
			}
			ControlTheme controlTheme = new ControlTheme();
			controlTheme.TargetType = typeof(UserControl);
			Setter setter = new Setter();
			setter.Property = TemplatedControl.TemplateProperty;
			setter.Value = new ControlTemplate
			{
				Content = XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<Control>(XamlClosure_269.Build, context)
			};
			controlTheme.Add(setter);
			return controlTheme;
		}
	}

	public class NamespaceInfo_003A_002FSimpleTheme_002Examl : IAvaloniaXamlIlXmlNamespaceInfoProvider
	{
		private IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> _xmlNamespaces;

		public static IAvaloniaXamlIlXmlNamespaceInfoProvider Singleton;

		public virtual IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> XmlNamespaces
		{
			get
			{
				if (_xmlNamespaces == null)
				{
					_xmlNamespaces = CreateNamespaces();
				}
				return _xmlNamespaces;
			}
		}

		static AvaloniaXamlIlXmlNamespaceInfo CreateNamespaceInfo(string P_0, string P_1)
		{
			return new AvaloniaXamlIlXmlNamespaceInfo
			{
				ClrNamespace = P_0,
				ClrAssemblyName = P_1
			};
		}

		static IReadOnlyDictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> CreateNamespaces()
		{
			Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>> dictionary = new Dictionary<string, IReadOnlyList<AvaloniaXamlIlXmlNamespaceInfo>>(2);
			dictionary.Add("", new AvaloniaXamlIlXmlNamespaceInfo[32]
			{
				CreateNamespaceInfo("Avalonia", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Animation.Easings", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Data.Converters", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.GestureRecognizers", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Input.TextInput", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Layout", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.LogicalTree", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Imaging", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Media.Transformation", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia.Styling", "Avalonia.Base"),
				CreateNamespaceInfo("Avalonia", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Automation", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Embedding", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Presenters", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Primitives", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Shapes", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Templates", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Notifications", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Chrome", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Controls.Documents", "Avalonia.Controls"),
				CreateNamespaceInfo("Avalonia.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Data", "Avalonia.Markup"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.MarkupExtensions", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Styling", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Markup.Xaml.Templates", "Avalonia.Markup.Xaml"),
				CreateNamespaceInfo("Avalonia.Themes.Simple", "Avalonia.Themes.Simple")
			});
			dictionary.Add("x", new AvaloniaXamlIlXmlNamespaceInfo[0]);
			return dictionary;
		}

		static NamespaceInfo_003A_002FSimpleTheme_002Examl()
		{
			Singleton = new NamespaceInfo_003A_002FSimpleTheme_002Examl();
		}
	}

	static void Populate_003A_002FControls_002FUserControl_002Examl(IServiceProvider P_0, Style P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<Style> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Style>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FUserControl_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/UserControl.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		Style style;
		Style style2 = (style = P_1);
		context.PushParent(style);
		style.Selector = ((Selector?)null).Is(typeof(UserControl));
		((ResourceDictionary)style.Resources).AddDeferred((object)"SimpleUserControl", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_268.Build, context));
		Setter setter;
		Setter setter2 = (setter = new Setter());
		context.PushParent(setter);
		setter.Property = StyledElement.ThemeProperty;
		StaticResourceExtension staticResourceExtension = new StaticResourceExtension("SimpleUserControl");
		context.ProvideTargetProperty = CompiledAvaloniaXaml.XamlIlHelpers.Avalonia_002EStyling_002ESetter_002CAvalonia_002EBase_002EValue_0021Property();
		object? value = staticResourceExtension.ProvideValue(context);
		context.ProvideTargetProperty = null;
		setter.Value = value;
		context.PopParent();
		style.Add(setter2);
		context.PopParent();
		if (style2 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static Style Build_003A_002FControls_002FUserControl_002Examl(IServiceProvider P_0)
	{
		Style style = new Style();
		Populate_003A_002FControls_002FUserControl_002Examl(P_0, style);
		return style;
	}

	static void Populate_003A_002FControls_002FSimpleControls_002Examl(IServiceProvider P_0, Styles P_1)
	{
		CompiledAvaloniaXaml.XamlIlContext.Context<Styles> context = new CompiledAvaloniaXaml.XamlIlContext.Context<Styles>(P_0, new object[1] { NamespaceInfo_003A_002FControls_002FSimpleControls_002Examl.Singleton }, "avares://Avalonia.Themes.Simple/Controls/SimpleControls.xaml");
		context.RootObject = P_1;
		context.IntermediateRoot = P_1;
		Styles styles;
		Styles styles2 = (styles = P_1);
		context.PushParent(styles);
		ResourceDictionary resourceDictionary;
		ResourceDictionary resources = (resourceDictionary = new ResourceDictionary());
		context.PushParent(resourceDictionary);
		resourceDictionary.AddDeferred(typeof(AdornerLayer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_1.Build, context));
		resourceDictionary.AddDeferred(typeof(Button), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_3.Build, context));
		resourceDictionary.AddDeferred(typeof(RadioButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_6.Build, context));
		resourceDictionary.AddDeferred(typeof(RepeatButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_9.Build, context));
		resourceDictionary.AddDeferred(typeof(ToggleButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_12.Build, context));
		resourceDictionary.AddDeferred(typeof(DropDownButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_15.Build, context));
		resourceDictionary.AddDeferred(typeof(PathIcon), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_18.Build, context));
		resourceDictionary.AddDeferred(typeof(CheckBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_20.Build, context));
		resourceDictionary.AddDeferred(typeof(ToolTip), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_23.Build, context));
		resourceDictionary.AddDeferred(typeof(Label), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_26.Build, context));
		resourceDictionary.AddDeferred(typeof(ComboBoxItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_29.Build, context));
		resourceDictionary.AddDeferred(typeof(ComboBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_32.Build, context));
		resourceDictionary.AddDeferred(typeof(Window), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_35.Build, context));
		resourceDictionary.AddDeferred(typeof(Carousel), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_38.Build, context));
		resourceDictionary.AddDeferred(typeof(TitleBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_40.Build, context));
		resourceDictionary.AddDeferred(typeof(AutoCompleteBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_42.Build, context));
		resourceDictionary.AddDeferred(typeof(DataValidationErrors), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_44.Build, context));
		resourceDictionary.AddDeferred(typeof(ContentControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_48.Build, context));
		resourceDictionary.AddDeferred(typeof(FlyoutPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_51.Build, context));
		resourceDictionary.AddDeferred(typeof(MenuFlyoutPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_54.Build, context));
		resourceDictionary.AddDeferred(typeof(GridSplitter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_57.Build, context));
		resourceDictionary.AddDeferred(typeof(ItemsControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_60.Build, context));
		resourceDictionary.AddDeferred(typeof(ListBoxItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_62.Build, context));
		resourceDictionary.AddDeferred(typeof(ListBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_65.Build, context));
		resourceDictionary.AddDeferred(typeof(ScrollBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_67.Build, context));
		resourceDictionary.AddDeferred(typeof(TabStrip), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_72.Build, context));
		resourceDictionary.AddDeferred(typeof(TabStripItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_75.Build, context));
		resourceDictionary.AddDeferred(typeof(TabControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_78.Build, context));
		resourceDictionary.AddDeferred(typeof(TabItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_81.Build, context));
		resourceDictionary.AddDeferred(typeof(PopupRoot), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_84.Build, context));
		resourceDictionary.AddDeferred(typeof(OverlayPopupHost), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_87.Build, context));
		resourceDictionary.AddDeferred(typeof(WindowNotificationManager), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_90.Build, context));
		resourceDictionary.AddDeferred(typeof(EmbeddableControlRoot), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_94.Build, context));
		resourceDictionary.AddDeferred(typeof(TransitioningContentControl), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_97.Build, context));
		resourceDictionary.AddDeferred(typeof(TreeView), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_99.Build, context));
		resourceDictionary.AddDeferred(typeof(Separator), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_101.Build, context));
		resourceDictionary.AddDeferred(typeof(ContextMenu), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_103.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_106.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarDayButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_109.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_112.Build, context));
		resourceDictionary.AddDeferred(typeof(Avalonia.Controls.Calendar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_115.Build, context));
		resourceDictionary.AddDeferred(typeof(CalendarDatePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_117.Build, context));
		resourceDictionary.AddDeferred(typeof(NotificationCard), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_120.Build, context));
		resourceDictionary.AddDeferred(typeof(NumericUpDown), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_123.Build, context));
		resourceDictionary.AddDeferred(typeof(RefreshContainer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_125.Build, context));
		resourceDictionary.AddDeferred(typeof(RefreshVisualizer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_128.Build, context));
		resourceDictionary.AddDeferred(typeof(ThemeVariantScope), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_130.Build, context));
		resourceDictionary.AddDeferred("SimpleExpanderToggleButtonTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_131.Build, context));
		resourceDictionary.AddDeferred("SimpleExpanderToggleButtonUpTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_134.Build, context));
		resourceDictionary.AddDeferred("SimpleExpanderToggleButtonDownTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_135.Build, context));
		resourceDictionary.AddDeferred("SimpleExpanderToggleButtonLeftTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_136.Build, context));
		resourceDictionary.AddDeferred("SimpleExpanderToggleButtonRightTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_137.Build, context));
		resourceDictionary.AddDeferred(typeof(Expander), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_138.Build, context));
		resourceDictionary.Add("ToggleSwitchTopHeaderMargin", new Thickness(0.0, 0.0, 0.0, 6.0));
		resourceDictionary.Add("ToggleSwitchPreContentMargin", new GridLength(6.0, GridUnitType.Pixel));
		resourceDictionary.Add("ToggleSwitchPostContentMargin", new GridLength(6.0, GridUnitType.Pixel));
		resourceDictionary.Add("ToggleSwitchThemeMinWidth", 0.0);
		resourceDictionary.Add("ToggleSwitchOnStrokeThickness", new Thickness(0.0, 0.0, 0.0, 0.0));
		resourceDictionary.Add("ToggleSwitchOuterBorderStrokeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.AddDeferred(typeof(ToggleSwitch), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_147.Build, context));
		resourceDictionary.AddDeferred("SimpleButtonSpinnerRepeatButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_150.Build, context));
		resourceDictionary.AddDeferred(typeof(ButtonSpinner), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_151.Build, context));
		resourceDictionary.AddDeferred("SimpleCaptionButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_154.Build, context));
		resourceDictionary.AddDeferred(typeof(CaptionButtons), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_157.Build, context));
		resourceDictionary.AddDeferred("TextBoxClearButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_160.Build, context));
		resourceDictionary.AddDeferred("PasswordBoxRevealButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_161.Build, context));
		resourceDictionary.AddDeferred("PasswordBoxHideButtonData", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_162.Build, context));
		resourceDictionary.AddDeferred("SimpleTextBoxContextFlyout", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_163.Build, context));
		resourceDictionary.AddDeferred("SimpleTextBoxClearButtonTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_164.Build, context));
		resourceDictionary.AddDeferred("SimplePasswordBoxRevealButtonTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_167.Build, context));
		resourceDictionary.AddDeferred(typeof(TextBox), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_169.Build, context));
		resourceDictionary.AddDeferred(typeof(ScrollViewer), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_176.Build, context));
		resourceDictionary.AddDeferred("SimpleMenuScrollViewer", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_178.Build, context));
		resourceDictionary.AddDeferred("LeftMarginConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_180.Build, context));
		resourceDictionary.AddDeferred("SimpleTreeViewItemToggleButtonTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_181.Build, context));
		resourceDictionary.AddDeferred(typeof(TreeViewItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_183.Build, context));
		resourceDictionary.AddDeferred("StringFormatConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_186.Build, context));
		resourceDictionary.AddDeferred(typeof(ProgressBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_187.Build, context));
		resourceDictionary.AddDeferred("SimpleTopLevelMenuItem", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_189.Build, context));
		resourceDictionary.AddDeferred(typeof(Menu), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_193.Build, context));
		resourceDictionary.AddDeferred("KeyGestureConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_195.Build, context));
		resourceDictionary.AddDeferred(typeof(MenuItem), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_196.Build, context));
		resourceDictionary.AddDeferred("SliderRepeatTrackTheme", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_201.Build, context));
		resourceDictionary.AddDeferred(typeof(Slider), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_203.Build, context));
		resourceDictionary.AddDeferred("AvaloniaThemesSimpleNativeMenuBarIBitmapToImageConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_210.Build, context));
		resourceDictionary.AddDeferred(typeof(NativeMenuBar), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_211.Build, context));
		resourceDictionary.AddDeferred("SimpleDateTimePickerItem", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_213.Build, context));
		resourceDictionary.AddDeferred("SimpleDateTimePickerButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_214.Build, context));
		resourceDictionary.AddDeferred("SimpleDateTimePickerUpButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_217.Build, context));
		resourceDictionary.AddDeferred("SimpleDateTimePickerDownButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_219.Build, context));
		resourceDictionary.Add("DatePickerFlyoutPresenterHighlightHeight", 40.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterItemHeight", 40.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterAcceptDismissHostGridHeight", 41.0);
		resourceDictionary.Add("DatePickerThemeMinWidth", 296.0);
		resourceDictionary.Add("DatePickerThemeMaxWidth", 456.0);
		resourceDictionary.Add("DatePickerFlyoutPresenterItemPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerFlyoutPresenterMonthPadding", new Thickness(9.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerHostPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerHostMonthPadding", new Thickness(9.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("DatePickerSpacerThemeWidth", 1.0);
		resourceDictionary.AddDeferred("SimpleDatePickerFlyoutButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_221.Build, context));
		resourceDictionary.AddDeferred(typeof(DatePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_224.Build, context));
		resourceDictionary.AddDeferred(typeof(DatePickerPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_227.Build, context));
		resourceDictionary.Add("TimePickerFlyoutPresenterItemHeight", 40.0);
		resourceDictionary.Add("TimePickerSpacerThemeWidth", 1.0);
		resourceDictionary.Add("TimePickerBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.Add("TimePickerFlyoutPresenterHighlightHeight", 40.0);
		resourceDictionary.Add("TimePickerFlyoutPresenterAcceptDismissHostGridHeight", 41.0);
		resourceDictionary.Add("TimePickerThemeMinWidth", 242.0);
		resourceDictionary.Add("TimePickerThemeMaxWidth", 456.0);
		resourceDictionary.Add("TimePickerFlyoutPresenterItemPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.Add("TimePickerHostPadding", new Thickness(0.0, 3.0, 0.0, 6.0));
		resourceDictionary.AddDeferred("SimpleTimePickerFlyoutButton", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_230.Build, context));
		resourceDictionary.AddDeferred(typeof(TimePicker), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_233.Build, context));
		resourceDictionary.AddDeferred(typeof(TimePickerPresenter), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_236.Build, context));
		resourceDictionary.Add("SplitViewOpenPaneThemeLength", 320.0);
		resourceDictionary.Add("SplitViewCompactPaneThemeLength", 48.0);
		resourceDictionary.Add("SplitViewPaneAnimationOpenDuration", TimeSpan.FromTicks(2000000L));
		resourceDictionary.Add("SplitViewPaneAnimationCloseDuration", TimeSpan.FromTicks(1000000L));
		resourceDictionary.AddDeferred("SplitViewPaneAnimationEasing", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_239.Build, context));
		resourceDictionary.AddDeferred(typeof(SplitView), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_240.Build, context));
		resourceDictionary.AddDeferred("LevelUp", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_245.Build, context));
		resourceDictionary.AddDeferred("Refresh", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_246.Build, context));
		resourceDictionary.AddDeferred("Icons", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_247.Build, context));
		resourceDictionary.AddDeferred(typeof(ManagedFileChooser), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_248.Build, context));
		resourceDictionary.Add("SplitButtonPrimaryButtonSize", 24.0);
		resourceDictionary.Add("SplitButtonSecondaryButtonSize", 24.0);
		resourceDictionary.Add("SplitButtonSeparatorWidth", 1.0);
		resourceDictionary.Add("SplitButtonMinHeight", 24.0);
		resourceDictionary.Add("SplitButtonBorderThemeThickness", new Thickness(1.0, 1.0, 1.0, 1.0));
		resourceDictionary.AddDeferred("PrimaryButtonBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_253.Build, context));
		resourceDictionary.AddDeferred("SecondaryButtonBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_254.Build, context));
		resourceDictionary.AddDeferred("SeparatorBorderMultiplier", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_255.Build, context));
		resourceDictionary.AddDeferred("TopCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_256.Build, context));
		resourceDictionary.AddDeferred("RightCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_257.Build, context));
		resourceDictionary.AddDeferred("BottomCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_258.Build, context));
		resourceDictionary.AddDeferred("LeftCornerRadiusFilterConverter", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_259.Build, context));
		resourceDictionary.AddDeferred("SimpleSplitButtonComponent", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_260.Build, context));
		resourceDictionary.AddDeferred(typeof(SplitButton), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_263.Build, context));
		resourceDictionary.AddDeferred("SelectableTextBlockContextFlyout", XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_266.Build, context));
		resourceDictionary.AddDeferred(typeof(SelectableTextBlock), XamlIlRuntimeHelpers.DeferredTransformationFactoryV2<object>(XamlClosure_267.Build, context));
		context.PopParent();
		styles.Resources = resources;
		styles.Add(Build_003A_002FControls_002FUserControl_002Examl(XamlIlRuntimeHelpers.CreateRootServiceProviderV3(context)));
		context.PopParent();
		if (styles2 is StyledElement styled)
		{
			NameScope.SetNameScope(styled, context.AvaloniaNameScope);
		}
		context.AvaloniaNameScope.Complete();
	}

	static Styles Build_003A_002FControls_002FSimpleControls_002Examl(IServiceProvider P_0)
	{
		Styles styles = new Styles();
		Populate_003A_002FControls_002FSimpleControls_002Examl(P_0, styles);
		return styles;
	}
}
